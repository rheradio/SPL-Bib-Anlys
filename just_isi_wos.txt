
PT J
AU Svahnberg, M
   van Gurp, J
   Bosch, J
AF Svahnberg, M
   van Gurp, J
   Bosch, J
TI A taxonomy of variability realization techniques
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE variability; software product families; development process; software
   architecture; variability realization techniques
ID SOFTWARE PRODUCT LINES
AB Development of software product families relies heavily on the use of variability to manage the differences between products by delaying design decisions to later stages of the development and usage of the constructed software systems. Implementation of variability is not a trivial task, and is governed by a number of factors. In this paper, we describe the factors that are relevant in determining how to implement variability, and present a taxonomy of variability realization techniques. Copyright (c) 2005 John Wiley & Sons, Ltd.
C1 Blekinge Inst Technol, Dept Syst & Software Engn, SE-37225 Ronneby, Sweden.
   GX Creat Online Dev BV, NL-6538 SW Nijmegen, Netherlands.
   Univ Groningen, Dept Math & Comp Sci, NL-9700 AV Groningen, Netherlands.
RP Svahnberg, M (reprint author), Blekinge Inst Technol, Dept Syst & Software Engn, Box 520, SE-37225 Ronneby, Sweden.
EM mikael.svahnberg@bth.se
CR Mattsson M., 1999, Proceedings Technology of Object-Oriented Languages and Systems. TOOLS 29 (Cat. No.PR00275), DOI 10.1109/TOOLS.1999.779005
   [Anonymous], 14712000 IEEE
   Bachmann F., 2001, P ACM SIGSOFT S SOFT, P126, DOI 10.1145/375212.375274
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Becker M, 2002, LECT NOTES COMPUT SC, V2290, P294
   Bosch J, 2000, DESIGN USE SOFTWARE
   Bosch J, 1999, INFORM SOFTWARE TECH, V41, P257, DOI 10.1016/S0950-5849(99)00007-5
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Buschmann F., 1996, PATTERN ORIENTED SOF
   Capilla R, 2002, LECT NOTES COMPUT SC, V2290, P319
   Clements P, 2002, SOFTWARE PRODUCT LIN
   Conradi R, 1998, ACM COMPUT SURV, V30, P232, DOI 10.1145/280277.280280
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Dijkstra E. W., 1970, SOFTWARE ENG TECHNIQ, P84
   DIKEL D, 1997, IEEE COMPUTER    AUG, P49
   DONOHOE P, 2000, P 1 SOFTW PROD LIN C
   Feare T., 2001, Modern Materials Handling, V56
   Gamma E, 1995, DESIGN PATTERNS ELEM, V1st
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   GRISS ML, 2000, LECT NOTES COMPUTER, V1844
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   JARING M, 2002, LECT NOTES COMPUTER, V2379
   Jarzabek S, 2003, PROC INT CONF SOFTW, P810, DOI 10.1109/ICSE.2003.1201298
   Jazayeri M., 2000, SOFTWARE ARCHITECTUR
   KANG K, 1990, CMUSEI90TR21 SOFTW E
   KANG KC, 1998, ANN SOFTW ENG, V5, P345
   KAPLAN M, 1996, P INT C OBJ OR PROGR
   Kiczales G., 1997, P EUR C OBJ OR PROGR, P220, DOI DOI 10.1007/BF60053381
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   LAI CTR, 1999, SOFTWARE PRODUCT LIN
   LIEBERMAN H, 1986, P OOPSLA 86, P214
   MATTSSON M, 2000, THESIS BLEKINGE I TE
   Mattsson M., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), DOI 10.1109/ICSM.1999.792597
   McIlroy M. D., 1969, SOFTWARE ENG CONCEPT, P88
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   OESCHGER I, XULNOTES XUL BESTIAL
   OUSTERHOUT JK, 1998, IEEE             MAR, P23
   Parnas David, 1978, P 3 INT C SOFTW ENG, P264
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, DOI 10.1109/TSE.1976.233797
   Perry D. E., 1992, ACM SIGSOFT SOFTWARE, V17, P40, DOI 10.1145/141874.141884
   PREHOFER C, 1997, LECT NOTES COMPUTER, V1241
   Rine DC, 2000, INFORM SOFTWARE TECH, V42, P47, DOI 10.1016/S0950-5849(99)00055-5
   Rine DC, 1998, J SYST SOFTWARE, V41, P17, DOI 10.1016/S0164-1212(97)10003-6
   Salicki S, 2002, LECT NOTES COMPUT SC, V2290, P304
   Svahnberg M., 1999, Proceedings of the 3rd Annual IASTED International Conference Software Engineering and Applications (SEA'99)
   SVAHNBERG M, 2002, LECT NOTES COMPUTER, V2290
   SVAHNBERG M, 2001, BTHRES0201SE
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   Szyperski C., 1997, COMPONENT SOFTWARE O
   van Gurp J., 2001, P WORK IEEE IFIP C S
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   VANOMMERING R, 2002, BUILDING RELIABLE CO
   Wallnau K., 2002, BUILDING SYSTEMS COM
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, DOI 10.1145/237432.237434
NR 54
TC 95
Z9 96
PU JOHN WILEY & SONS LTD
PI CHICHESTER
PA THE ATRIUM, SOUTHERN GATE, CHICHESTER PO19 8SQ, W SUSSEX, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD JUL 10
PY 2005
VL 35
IS 8
BP 705
EP 754
DI 10.1002/spe.652
PG 50
WC Computer Science, Software Engineering
SC Computer Science
GA 941NP
UT WOS:000230221800001
ER

PT S
AU Lee, K
   Kang, KC
   Lee, J
AF Lee, K
   Kang, KC
   Lee, J
BE Gacek, C
TI Concepts and guidelines of feature modeling for product line software
   engineering
SO SOFTWARE REUSE: METHODS, TECHNIQUES, AND TOOLS, PROCEEDINGS
SE Lecture Notes in Computer Science
LA English
DT Article; Proceedings Paper
CT 7th International Conference on Software Reuse (ICSR-7)
CY APR 15-19, 2002
CL AUSTIN, TX
SP BigLever Software Inc, Dept Informat PUC-Rio, Fraunhofer IESE, Gener Programming, Op40 Inc, Semant Designs Inc, Sodalia, Univ Alberta, Dept Elect & Comp Engn, Univ Newcastle Upon Tyne, CS Dept, Univ Texas, Comp Sci Dept
ID REUSE
AB Product line software engineering (PLSE) is an emerging software engineering paradigm, which guides organizations toward the development of products from core assets rather than the development of products one by one from scratch. In order to develop highly reusable core assets, PLSE must have the ability to exploit commonality and manage variability among products from a domain perspective. Feature modeling is one of the most popular domain analysis techniques, which analyzes commonality and variability in a domain to develop highly reusable core assets for a product line. Various attempts have been made to extend and apply it to the development of software product lines. However, feature modeling can be difficult and time-consuming without a precise understanding of the goals of feature modeling and the aid of practical guidelines. In this paper, we clarify the concept of features and the goals of feature modeling, and provide practical guidelines for successful product line software engineering. The authors have extensively used feature modeling in several industrial product line projects and the guidelines described in this paper are based on these experiences.
C1 Pohang Univ Sci & Technol, Dept Comp Sci & Engn, Pohang 790784, South Korea.
RP Lee, K (reprint author), Pohang Univ Sci & Technol, Dept Comp Sci & Engn, San 31 Hyoja Dong, Pohang 790784, South Korea.
EM kwlee@postech.ac.kr; kck@postech.ac.kr; gibman@postech.ac.kr
CR BAILIN S, 1993, TRI AD 93 NEW YORK N
   Clements P, 2002, SOFTWARE PRODUCT LIN
   COHEN S, 1991, CMUSEI91TR28
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Frakes W, 1998, ANN SOFTW ENG, V5, P125, DOI 10.1023/A:1018972323770
   GRISS M, 2000, SOFTWARE PRODUCT LIN, P47
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   Hein A, 2000, SPRINGER INT SER ENG, V576, P47
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   Kang K., 1990, CMUSEI90TR21
   KANG K, 2002, IN PRESS DOMAIN ORIE
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang KC, 1999, SOFTWARE PRACT EXPER, V29, P875, DOI 10.1002/(SICI)1097-024X(199908)29:10<875::AID-SPE262>3.0.CO;2-W
   Kiczales G., 1997, LNCS, V1241
   KRUT R, 1996, CMUSEI96SR001
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   Lee K, 2000, SOFTWARE PRACT EXPER, V30, P1025, DOI 10.1002/1097-024X(20000725)30:9<1025::AID-SPE323>3.3.CO;2-N
   Lee K, 2000, KLUWER INT SER ENG C, V576, P3
   NEIGHBORS JM, 1984, IEEE T SOFTWARE ENG, V10, P564
   PRIETODIAZ R, 1991, COMMUN ACM, V34, P88, DOI 10.1145/103167.103176
   Simos M., 1996, STARSVCA02500100 LOC
   SIMOS M, 1998, P 5 INT C SOFTW REUS, P166
   Vici A. D., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685741
   Zalman N. S., 1996, Proceedings Fourth International Conference on Software Reuse (Cat. No.96TB100015)
NR 25
TC 64
Z9 66
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43483-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2319
BP 62
EP 77
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BW25Y
UT WOS:000181349700005
ER

PT J
AU Pauwels, K
AF Pauwels, K
TI How dynamic consumer response, competitor response, company support, and
   company inertia shape long-term marketing effectiveness
SO MARKETING SCIENCE
LA English
DT Article
DE long-term marketing effectiveness; dynamic consumer and competitor
   response; company inertia and support; vector autoregressive (VAR)
   models; impulse-response functions; policy simulation restrictions;
   postpromotion dip
ID TIME-SERIES ANALYSIS; PRICE PROMOTIONS; DECISION-MODELS; BRAND CHOICE;
   SALES; SHARE; PROFITABILITY; COINTEGRATION; PERSISTENCE; BEHAVIOR
AB Long-term marketing effectiveness is a high-priority research topic for managers, and emerges from the complex interplay among dynamic reactions of several market players. This paper introduces restricted policy simulations to distinguish four dynamic forces: consumer response, competitor response, company inertia, and company support. A rich marketing dataset allows the analysis of price, display, feature, advertising, and product-line extensions.
   The first finding is that consumer response differs significantly from the net effectiveness of product-line extensions, price, feature, and advertising. In particular, net sales effects are lip to five times stronger and longer-lasting than consumer response. Second, this difference is not due to competitor response, but to company action. For tactical actions (price and feature), it takes the form of inertia, as promotions last for several weeks. For strategic actions (advertising and product-line extensions), support by other marketing instruments greatly enhances dynamic consumer response. This company action negates the postpromotion dip in consumer response, and enhances the long-term sales benefits of product-line extensions, feature, and advertising. Therefore, managers are urged to evaluate company decision rules for inertia and support when assessing long-term marketing effectiveness.
C1 Dartmouth Coll, Tuck Sch Business, Hanover, NH 03755 USA.
RP Pauwels, K (reprint author), Dartmouth Coll, Tuck Sch Business, Hanover, NH 03755 USA.
EM koen.h.pauwels@dartmouth.edu
CR ABRAHAM MM, 1990, HARVARD BUSINESS MAY, P50
   Alba JW, 1991, HDB CONSUMER BEHAV, P1
   *AM FROZ FOOD I, 2003, FROZ FOOD TRENDS
   BASS FM, 1980, J MARKETING RES, V17, P486, DOI 10.2307/3150501
   Baumol W. J., 1977, EC THEORY OPERATIONS
   BENDER DJ, 2000, KRAFT BUDGET GOURMET
   Bernanke B. S., 1986, CARNEGIE-ROCHESTER C, V25, P49, DOI 10.1016/0167-2231(86)90037-0
   Besanko D., 1996, EC STRATEGY
   Blattberg R., 1995, MARKET SCI, V14, P122
   Blattberg R., 1990, SALES PROMOTION CONC
   BLATTBERG RC, 1990, MANAGE SCI, V36, P887, DOI 10.1287/mnsc.36.8.887
   Brandenburger A. M., 1996, COOPETITION
   Bronnenberg BJ, 2000, J MARKETING RES, V37, P16, DOI 10.1509/jmkr.37.1.16.18723
   Chen MJ, 1996, ACAD MANAGE REV, V21, P100
   CLARKE DG, 1976, J MARKETING RES, V13, P345, DOI 10.2307/3151017
   Cooper RG, 1993, WINNING NEW PRODUCTS
   Dekimpe MG, 1999, J MARKETING RES, V36, P397, DOI 10.2307/3151996
   Dekimpe MG, 1999, J ECONOMETRICS, V89, P269
   DEKIMPE MG, 1995, MARKET SCI, V14, P1, DOI 10.1287/mksc.14.1.1
   Ehrenberg ASC, 2000, INT J RES MARK, V17, P147, DOI 10.1016/S0167-8116(00)00018-5
   Enders W., 1995, APPL ECONOMETRIC TIM
   Faust J., 1998, 610 BOARD GOV FED RE
   Forrester J. W., 1961, IND DYNAMICS
   Franses Philip Hans, 1998, TIME SERIES MODELS B
   GUPTA S, 1988, J MARKETING RES, V25, P342, DOI 10.2307/3172945
   Hamilton JD, 1994, TIME SERIES ANAL
   Hanssens D. M., 2001, MARKET RESPONSE MODE
   HANSSENS DM, 1980, APPL ECON, V12, P329, DOI 10.1080/00036848000000034
   HANSSENS DM, 1980, J MARKETING RES, V17, P470, DOI 10.2307/3150500
   HORVATH C, 2001, DYNAMIC ANAL COMPETI
   Jedidi K, 1999, MARKET SCI, V18, P1, DOI 10.1287/mksc.18.1.1
   Johansen S., 2000, ECONOMET J, V3, P216, DOI DOI 10.1111/1368-423X.00047
   *K SALM ASS, 1993, ECC CONS RESP ENH CO
   Keller K. L., 1998, STRATEGIC BRAND MANA
   Kopalle PK, 1996, MARKET SCI, V15, P60, DOI 10.1287/mksc.15.1.60
   KOTLER P., 2001, MARKETING MANAGEMENT
   KRISHNA A, 2000, INERTIA PRICING
   Leeflang P. S. H., 1992, INT J RES MARK, V9, P39, DOI 10.1016/0167-8116(92)90028-J
   Leeflang P. S. H., 1996, INT J RES MARK, V13, P103, DOI 10.1016/0167-8116(96)00003-1
   Leeflang PSH, 2001, INT J RES MARK, V18, P119, DOI 10.1016/S0167-8116(01)00035-0
   LEONIDOPOULOS G, 1995, POLYM TEST, V14, P3, DOI 10.1016/0142-9418(95)90612-K
   LITTERMAN RB, 1984, FEDERAL RESERVE BANK, V27, P629
   LITTLE JDC, 1979, OPER RES, V27, P629, DOI 10.1287/opre.27.4.629
   LODISH LM, 1980, J MARKETING, V44, P70, DOI 10.2307/1251113
   LUCAS RE, 1976, CARN ROCH CONF SERIE, V1, P19, DOI 10.1016/S0167-2231(76)80003-6
   LUTKEPOHL H, 1990, REV ECON STAT, V72, P832
   Lutkepohl H., 1993, INTRO MULTIPLE TIME
   Mela CF, 1998, INT J RES MARK, V15, P89, DOI 10.1016/S0167-8116(97)00041-4
   METWALLY MM, 1978, OXFORD B ECON STAT, V40, P153
   Miron Jeffrey A, 1996, EC SEASONAL CYCLES
   Montgomery AL, 2004, MARKET SCI, V23, P579, DOI 10.1287/mksc.1040.0073
   NAKANISH.M, 1973, J MARKETING RES, V10, P242, DOI 10.2307/3149691
   Neslin S. A., 2002, SALES PROMOTION
   Nijs VR, 2001, MARKET SCI, V20, P1, DOI 10.1287/mksc.20.1.1.10197
   PAUWELS K, 2004, DYNAMIC RETAILER COM
   PAUWELS K, 2003, SOCIAL SCI RES NETWO
   PAUWELS K, 2004, IN PRESS J MARKETING
   Pauwels K, 2002, J MARKETING RES, V39, P421, DOI 10.1509/jmkr.39.4.421.19114
   PAUWELS K, 2004, MARKET SCI, V24, P364
   Pesaran HH, 1998, ECON LETT, V58, P17, DOI 10.1016/S0165-1765(97)00214-0
   Pesaran MH, 1998, J EC SURVEYS, V12, P471, DOI 10.1111/1467-6419.00065
   PESARAN MH, 1993, J ECONOMETRICS, V56, P57, DOI 10.1016/0304-4076(93)90101-A
   PESENDORFER M, 2001, J BUS, V69, P307
   PLOUS S, 1993, PSYCHOL JUDGMENT DEC, P145
   RAMOS FR, 1996, FORECASTING ACCURACY
   SANSOLO M, 1993, PROGRESSIVE GROCER, V72, P47
   Schultz D.E., 1993, INTEGRATED MARKETING
   SEXTON DE, 1970, J MARKETING RES, V7
   Shugan SM, 2004, MARKET SCI, V23, P1, DOI 10.1287/mksc.1040.0060
   SIMON H, 1982, J MARKETING RES, V19, P352, DOI 10.2307/3151569
   Sims CA, 1999, ECONOMETRICA, V67, P1113, DOI 10.1111/1468-0262.00071
   SIMS CA, 1980, ECONOMETRICA, V48, P1, DOI 10.2307/1912017
   Srinivasan S, 2004, MANAGE SCI, V50, P617, DOI 10.1287/mnsc.1040.0225
   SRINIVASAN S, 2001, MSI C CAMBR MA
   Srinivasan S, 2000, INT J RES MARK, V17, P281, DOI 10.1016/S0167-8116(00)00023-9
   Srinivasan S, 2000, APPL STOCH MODEL BUS, V16, P159, DOI 10.1002/1526-4025(200007/09)16:3<159::AID-ASMB417>3.0.CO;2-R
   STEENKAMP JB, 2004, IN PRESS MARKETING S, V24
   Sudhir K, 2001, MARKET SCI, V20, P244, DOI 10.1287/mksc.20.3.244.9764
   Swait J, 2003, MARKET SCI, V22, P442, DOI 10.1287/mksc.22.4.442.24910
   TELLIS GJ, 1988, J MARKETING RES, V25, P331, DOI 10.2307/3172944
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   van Bruggen GH, 2000, INT J RES MARK, V17, P159, DOI 10.1016/S0167-8116(00)00017-3
   van Bruggen GH, 1998, MANAGE SCI, V44, P645, DOI 10.1287/mnsc.44.5.645
   VANHEERDE HJ, 2001, J MARKETING RES, V37, P197
   Van Heerde HJ, 2000, J MARKETING RES, V37, P383, DOI 10.1509/jmkr.37.3.383.18782
   ZIVOT E, 1992, J BUS ECON STAT, V10, P251, DOI 10.2307/1391541
   1999, AM DEMOGRAPHICS  MAR, P14
   2002, WALL STREET J   0909, pB1
NR 88
TC 50
Z9 50
PU INST OPERATIONS RESEARCH  MANAGEMENT SCIENCES
PI LINTHICUM HTS
PA 901 ELKRIDGE LANDING RD, STE 400, LINTHICUM HTS, MD 21090-2909 USA
SN 0732-2399
J9 MARKET SCI
JI Mark. Sci.
PD FAL
PY 2004
VL 23
IS 4
BP 596
EP 610
DI 10.1287/mksc.1040.0075
PG 15
WC Business
SC Business & Economics
GA 874XU
UT WOS:000225384800010
ER

PT J
AU Pohl, K
   Metzger, A
AF Pohl, Klaus
   Metzger, Andreas
TI Software product line testing - Exploring principles and potential
   solutions
SO COMMUNICATIONS OF THE ACM
LA English
DT Article
C1 Univ Duisburg Essen, Software Syst Engn Grp, Duisburg, Germany.
   Univ Limerick, Limerick, Ireland.
EM pohl@sse.uni-due.de; metzger@sse.uni-due.de
CR Buhne S., 2005, Proceedings. 13th IEEE International Conference on Requirements Engineering
   Clements P, 2001, SOFTWARE PRODUCT LIN
   KAKOLA T, 2006, RES ISSUES SOFTWARE
   Kamsties E., 2003, P 5 INT WORKSH SOFTW, P6
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   van der Linden F, 2002, IEEE SOFTWARE, V19, P41, DOI 10.1109/MS.2002.1020286
   Myers Glenford J., 2004, ART SOFTWARE TESTING, V2nd
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Pretschner A, 2005, PROC INT CONF SOFTW, P392
   REUYS A, 2005, P 17 C ADV INF SYST, P519
   TEVANLINNA A, 2003, ACM SIGSOFT SOFTWARE, V29, P12
NR 11
TC 25
Z9 26
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1515 BROADWAY, NEW YORK, NY 10036 USA
SN 0001-0782
J9 COMMUN ACM
JI Commun. ACM
PD DEC
PY 2006
VL 49
IS 12
BP 78
EP 81
DI 10.1145/1183236.1183271
PG 4
WC Computer Science, Hardware & Architecture; Computer Science, Software
   Engineering; Computer Science, Theory & Methods
SC Computer Science
GA 115YR
UT WOS:000242770200024
ER

PT S
AU Bosch, J
   Florijn, G
   Greefhorst, D
   Kuusela, J
   Obbink, JH
   Pohl, K
AF Bosch, J
   Florijn, G
   Greefhorst, D
   Kuusela, J
   Obbink, JH
   Pohl, K
BE VanderLinden, F
TI Variability issues in software product lines
SO SOFTWARE PRODUCT-FAMILY ENGINEERING
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 4th International Workshop on Product Family Engineering (PFE-4)
CY OCT 03-05, 2001
CL BILBAO, SPAIN
SP European Ind
AB Software product lines (or system families) have achieved considerable adoption by the software industry. A software product line captures the commonalities between a set of products while providing for the differences. Differences are managed by delaying design decisions, thereby introducing variation points. The whole of variation points is typically referred to as the variability of the software product line. Variability management is, however, not a trivial activity and several issues exist, both in general as well as specific to individual phases in the lifecycle. This paper identifies and describes several variability issues based on practical experiences and theoretical understanding of the problem domain.
C1 Univ Groningen, Dept Comp Sci, Groningen, Netherlands.
   Software Engn Res Ctr, Utrecht, Netherlands.
   IBM Global Serv, Amersfoort, Netherlands.
   Nokia Res Ctr, Helsinki, Finland.
   Univ Essen Gesamthsch, Essen, Germany.
RP Bosch, J (reprint author), Univ Groningen, Dept Comp Sci, Groningen, Netherlands.
CR Bosch J, 2000, DESIGN USE SOFTWARE
   COPLIEN J, 1999, IEEE SOFTWARE    NOV, P37
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   GREEFHORST D, 2000, ADV SEP CONC WORKSH
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   Kang K., 1990, CMUSEI90TR21
   Kang Kyo C., 1998, ANN SOFTWARE ENG, V5
   Kiczales G., 1997, LNCS, V1241
   SCHMERL BR, 1997, 7 INT WORKSH CONF MA
   Schmidt D, 2000, PATTERN ORIENTED SOF
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.841000
   VANGURP J, 2001, IN PRESS WORK IEEE I
NR 12
TC 25
Z9 25
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43659-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2290
BP 13
EP 21
PG 9
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering
SC Computer Science
GA BW19H
UT WOS:000181140900002
ER

PT J
AU Kang, KC
   Kim, S
   Lee, J
   Lee, K
AF Kang, KC
   Kim, S
   Lee, J
   Lee, K
TI Feature-oriented engineering of PBX software for adaptability and
   reuseability
SO SOFTWARE-PRACTICE & EXPERIENCE
LA English
DT Article
DE feature-orientation; object-orientation; domain engineering; application
   engineering; feature model; reference architecture; adaptability and
   reusability
AB Incorporating a high level of adaptability and reusability into software is one challenge that all software engineers face. PBX (Private Branch Exchange) is one such system that requires a high level of adaptability and reusability because of rapidly expanding service features, ever changing communication technology, continuously evolving standards and diverse communication laws and standards in different countries. The software engineering community has made various efforts to address the problem of enhancing software adaptability and reusability. As a result, many programming concepts, such as information hiding, encapsulation, object orientation, abstract data type and modularization, have been developed. Although adequate application of these principles requires the domain or program family perspective, most methods, so far, have been oriented toward developing a single application. FORM (Feature-Oriented Reuse Method), the domain-based software reuse method applied in this paper, concentrates on analyzing and modeling commonalities and differences in applications of a given domain and using the analysis results to develop domain-oriented architectures and software components. The model that captures commonalities and differences is called the 'feature model' and it is used for both the engineering of reusable domain artifacts and the development of actual application software with reusable artifacts. We found that FORM facilitates analysis of variability, as well as commonality, of software before the start of engineering and implementation. With this understanding, adaptability and reusability can be built into software. Also, feature modeling has been found to be an effective method for identifying objects. Copyright (C) 1999 John Whey & Sons, Ltd.
C1 Pohang Univ Sci & Technol, POSTECH, Dept Comp Sci & Engn, Pohang 790784, Kyoungbuk, South Korea.
   LG Informat & Commun Ltd, Informat Syst Div, Dongan Ku, Anyang Shi 430080, Kyunggi Do, South Korea.
RP Kang, KC (reprint author), Pohang Univ Sci & Technol, POSTECH, Dept Comp Sci & Engn, San 31 Hyoja Dong, Pohang 790784, Kyoungbuk, South Korea.
CR BARSTOW DR, 1985, IEEE T SOFTWARE ENG, V11, P1321, DOI 10.1109/TSE.1985.231881
   Bassett P.G., 1997, FRAMING SOFTWARE REU
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, DOI 10.1145/136586.136587
   BATORY D, 1995, ACM SIGSOFT S SOFTW
   BUSCHMANN T, 1996, PATTERN ORIENTED SOF
   Cohen S., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685733
   COHEN SG, 1992, CMUSE91TR28
   CONKLIN J, 1987, IEEE COMPUT, V20, P9
   Gamma E, 1995, DESIGN PATTERNS ELEM, V1st
   Garlan D., 1996, SOFTWARE ARCHITECTUR
   GOGUEN JA, 1986, IEEE COMPUT, V19, P16
   Gomaa H., 1993, SOFTWARE DESIGN METH
   Gomaa H., 1994, Proceedings. Third International Conference on Software Reuse: Advances in Software Reusability (Cat. No.94TH06940), DOI 10.1109/ICSR.1994.365809
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   *ITU, 1994, Q931 ITU
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   Kang K., 1990, CMUSEI90TR21
   KANG KC, 1998, UNPUB IEEE T SOFTWAR
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   McKenney PE, 1996, COMMUN ACM, V39, P75, DOI 10.1145/236156.236174
   METTALA E, 1992, CMUSEI92SR9
   NEIGHBORS JM, 1984, IEEE T SOFTWARE ENG, V10, P564
   *NIST, 1994, NAT I STAND TECHN SP
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, DOI 10.1109/TSE.1976.233797
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17
   PETERSON AS, 1994, CMUSEI94TR8
   Prieto-Diaz R., 1987, Proceedings of COMPSAC 87. The Eleventh Annual International Computer Software and Applications Conference (Cat. No.87CH2447-1)
   PRIETODIAZ R, 1991, 03041002 CDRS STARS
   Simos M., 1996, STARSVCA02500100 LOC
   Spivey J. M., 1992, Z NOTATION REFERENCE
   Tracz W., 1993, Proceedings Advances in Software Reuse. Selected Papers from the Second International Workshop on Software Reusability (Cat. No.93TH0495-2), DOI 10.1109/ASR.1993.291716
   Vici A. D., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685741
NR 34
TC 21
Z9 21
PU JOHN WILEY & SONS LTD
PI W SUSSEX
PA BAFFINS LANE CHICHESTER, W SUSSEX PO19 1UD, ENGLAND
SN 0038-0644
J9 SOFTWARE PRACT EXPER
JI Softw.-Pract. Exp.
PD AUG
PY 1999
VL 29
IS 10
BP 875
EP 896
DI 10.1002/(SICI)1097-024X(199908)29:10<875::AID-SPE262>3.0.CO;2-W
PG 22
WC Computer Science, Software Engineering
SC Computer Science
GA 229CC
UT WOS:000082175100004
ER

PT J
AU McGregor, JD
   Northrop, LM
   Jarrad, S
   Pohl, K
AF McGregor, JD
   Northrop, LM
   Jarrad, S
   Pohl, K
TI Initiating software product lines
SO IEEE SOFTWARE
LA English
DT Editorial Material
C1 Clemson Univ, Dept Comp Sci, Clemson, SC 29634 USA.
   Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
   Panason Wireless Design Ctr, Suwanee, GA 30024 USA.
   Univ Essen Gesamthsch, Inst Comp Sci, D-45117 Essen, Germany.
RP McGregor, JD (reprint author), Clemson Univ, Dept Comp Sci, Clemson, SC 29634 USA.
CR BOSCH J, 2001, LECT NOTES COMPUTER, P13
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Donohoe P., 2000, SOFTWARE PRODUCT LIN
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, DOI 10.1109/TSE.1976.233797
NR 4
TC 18
Z9 18
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0740-7459
J9 IEEE SOFTWARE
JI IEEE Softw.
PD JUL-AUG
PY 2002
VL 19
IS 4
BP 24
EP 27
DI 10.1109/MS.2002.1020282
PG 4
WC Computer Science, Software Engineering
SC Computer Science
GA 573XP
UT WOS:000176858000012
ER

PT J
AU Mende, T
   Koschke, R
   Beckwermert, F
AF Mende, Thilo
   Koschke, Rainer
   Beckwermert, Felix
TI An evaluation of code similarity identification for the grow-and-prune
   model
SO JOURNAL OF SOFTWARE MAINTENANCE AND EVOLUTION-RESEARCH AND PRACTICE
LA English
DT Article; Proceedings Paper
CT 12th European Conference on Software Maintenance and Reengineering
CY APR 01-04, 2008
CL Athens, GREECE
SP Reengn Forum, IEEE Comp Soc, TCSE, IEEE
DE software maintenance; software reusability; clones; code similarity
ID SOFTWARE PRODUCT LINE; SYNTAX SUFFIX TREES; CLONES; CLONING
AB In case new functionality is required, which is similar to the existing one, developers often copy the code that implements the existing functionality and adjust the copy to the new requirements. The result of the copying is code growth. If developers face maintenance problems, because of the need to make changes multiple times for the original and all its copies, they may decide to merge the original and its copies again; that is, they prune the code. This approach was named the grow-and-prune model by Faust and Verhoef. This paper describes tool support for the grow-and-prune model in the evolution of software by identifying similar functions that may be merged. These functions are identified in two steps. First, token.-based clone detection is used to detect pairs of functions sharing code. Second, Levenshtein distance (LD) measures the textual similarity among these functions. Sufficient similarity at function level is then lifted to the architectural level. The approach is evaluated by a case study for the Linux kernel. We give examples of instances of the grow-and-prune model for Linux. Then, we evaluate our technique quantitatively by measuring recall and precision with respect to an oracle. To obtain the oracle, we asked nine different developers to decide whether they believe certain functions are similar and should be merged. The evaluation shows that the recall and precision of our technique are about 75%. Calculating LD on token values rather than characters is superior. The two metrics strongly correlate but the token-based. calculation reduces runtime by a factor of 4.6. Clone detection is an effective filter to reduce the number of calculations of the relatively expensive LD. Copyright (C) 2009 John Wiley & Sons, Ltd.
C1 [Mende, Thilo; Koschke, Rainer; Beckwermert, Felix] Univ Bremen, Fachbereich 3, D-28334 Bremen, Germany.
RP Koschke, R (reprint author), Univ Bremen, Fachbereich 3, Postfach 33 04 40, D-28334 Bremen, Germany.
EM koschke@informatik.uni-bremen.de
CR Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   Baker B, 1995, WCRE 95, P86
   Balazinska M., 2000, WORK C REV ENG, P98
   Balazinska M, 1999, WORK C REV ENG, P326
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   BAXTER ID, 2002, ICSR7 WORKSH IND EXP
   Bayer J, 1999, P 5 ACM SIGSOFT S SO, P122, DOI 10.1145/303008.303063
   BAYER J, 1999, P 7 EUR SOFTW ENG C, P446
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bortz J., 2000, VERTEILUNGSFREIE MET, V2nd
   CASAZZA G, 2001, WORKSH SOURC COD AN, P90
   Clements P, 2001, SOFTWARE PRODUCT LIN
   DILUCCA G, 2002, INT COMP SOFTW APPL, P481
   Duala-Ekoko E, 2007, PROC INT CONF SOFTW, P158
   Ducasse S., 1999, ICSM, P109
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Fanta R, 1999, J SOFTW MAINT-RES PR, V11, P223, DOI 10.1002/(SICI)1096-908X(199907/08)11:4<223::AID-SMR194>3.0.CO;2-D
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   FRENZEL P, 2007, WORK C REV ENG
   GAMER M, 2007, R PACKAGE VERSION 0
   GODFREY M, 2001, WORKSH PRINC SOFTW E, P103
   Jarzabek S, 2006, J SOFTW MAINT EVOL-R, V18, P267, DOI 10.1002/smr.333
   JIANG L, 2007, JOINT M EUR SOFTW EN, P55
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Z., 2007, WORKSH SOURC COD AN
   JOHNSON JH, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P120
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Kapser C., 2003, P C EV LARG SCAL IND, P67
   Kapser CJ, 2006, J SOFTW MAINT EVOL-R, V18, P61, DOI 10.1002/smr.327
   KARBINEN A, 1999, EUR C SOFTW MAINT RE, P190
   Kim M., 2004, INT S EMP SOFTW ENG, P83, DOI DOI 10.1109/ISESE.2004.1334896
   Kolb R, 2006, J SOFTW MAINT EVOL-R, V18, P109, DOI 10.1002/smr.329
   Kolb R, 2005, PROC IEEE INT CONF S, P369
   KOMONDOOR R, 2002, 1461 UW MAD DEP COMP
   KOMONDOOR R, 2001, INT S STAT AN, P40
   Koschke R., 2007, DAGSTUHL SEMINAR P, V06301
   KOSCHKE R, 2008, INT C SOFTW MAINT
   Koschke R., 2008, IDENTIFYING REMOVING, P15
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krinke J., 2001, WCRE, P301
   Levenshtein V.I., 1966, 8 SOV PHYS DOKL
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Mayrand J, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P244
   McGraw KO, 1996, PSYCHOL METHODS, V1, P30, DOI 10.1037/1082-989X.1.4.390
   MENDE T, 2008, EUR C SOFTW MAINT RE, P163
   MERLO E, 2002, INT COMP SOFTW APPL, P421
   R Development Core Team, 2008, R LANG ENV STAT COMP
   RIVA C, 2004, THESIS VIENNA U TECH
   RIVA C, 2003, WORKSH PRINC SOFTW E, P161
   Roy C. K., 2007, 2007541 QUEENS U KIN
   Tan PN, 2005, INTRO DATA MINING, V1
   XING Z, 2004, INT C SOFTW MAINT, P242
   YAMAMOTO T, 2005, MEASURING SIMILARITY, P530
   YOSHIMURA K, 2006, EMSOFT 06, P63
   ZOU L, 2003, WORK C REV ENG, P146
NR 56
TC 18
Z9 18
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 1532-060X
EI 2047-7481
J9 J SOFTW MAINT EVOL-R
JI J. Softw. Maint. Evol.-Res. Pract.
PD MAR-APR
PY 2009
VL 21
IS 2
BP 143
EP 169
DI 10.1002/smr.402
PG 27
WC Computer Science, Software Engineering
SC Computer Science
GA 434WX
UT WOS:000265305900004
ER

PT J
AU Babar, MA
   Chen, LP
   Shull, F
AF Babar, Muhammad Ali
   Chen, Lianping
   Shull, Forrest
TI Voice of Evidence Managing Variability in Software Product Lines
SO IEEE SOFTWARE
LA English
DT Editorial Material
ID ARCHITECTURES; FAMILIES
C1 [Babar, Muhammad Ali] IT Univ Copenhagen, Copenhagen, Denmark.
   [Chen, Lianping] Univ Limerick, Limerick, Ireland.
RP Babar, MA (reprint author), IT Univ Copenhagen, Copenhagen, Denmark.
EM malibaba@itu.dk; lianping.cehn@lero.ie; fshull@fc-md.umd.edu
CR ASIKAINEN T, 2003, P 5 INT WORKSH PROD, P225
   Atkinson C., 2000, P 1 SOFTW PROD LIN C, P289
   Bachmann F, 2004, LECT NOTES COMPUT SC, V3014, P66
   Bosch J, 2000, DESIGN USE SOFTWARE
   Bosch J., 2002, P 4 INT WORKSH SOFTW, P13
   Clements P, 2002, SOFTWARE PRODUCT LIN
   CORIAT M, 2000, P 1 SOFTW PROD LIN C, P147
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Kang K., 1990, CMUSEI90TR21
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   KRUEGER C, 2002, LNCS, V2379, P107
   Loesch F., 2007, P 11 INT SOFTW PROD, P151
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551
   MUTHIG D, 2002, P 2 INT C SOFTW PROD, P79
   Park S, 2004, IND MANAGE DATA SYST, V104, P296, DOI 10.1108/02635570410530711
   Reiser MO, 2007, REQUIR ENG, V12, P57, DOI 10.1007/s00766-007-0046-0
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Thiel S, 2002, P 2 INT C SOFTW PROD, P67
   van der Hoek A, 2004, SCI COMPUT PROGRAM, V53, P285, DOI 10.1016/j.scico.2003.04.003
   VANDEURSEN A, 2002, LNCS, V2379, P19
   Ye H, 2005, IEE PROC-SOFTW, V152, P101, DOI 10.1049/ip-sen:20045007
NR 23
TC 17
Z9 19
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0740-7459
J9 IEEE SOFTWARE
JI IEEE Softw.
PD MAY-JUN
PY 2010
VL 27
IS 3
BP 89
EP +
PG 4
WC Computer Science, Software Engineering
SC Computer Science
GA 587ET
UT WOS:000276973300019
ER

PT B
AU van Gurp, J
   Bosch, J
   Svahnberg, M
AF van Gurp, J
   Bosch, J
   Svahnberg, M
BE Kazman, R
   Kruchten, P
   Verhoef, C
   VanVliet, H
TI On the notion of variability in software product lines
SO WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS
LA English
DT Proceedings Paper
CT Working IEEE/IFIP Conference on Software Architecture
CY AUG 28-31, 2001
CL AMSTERDAM, NETHERLANDS
SP IEEE Comp Soc, IFIP WG 2 10
HO ROYAL NETHERLANDS ACAD ARTS & SCI
ID REUSE
AB In this paper we discuss the notion of variability. We have experienced that this concept has so far been under-defined. Although, we have observed that variability techniques become increasingly important. A clear indication of this trend is the recent emergence of software product lines. Software product lines are large, industrial software systems intended to specialize into specific software products. Our contribution in this paper is that ive provide the reader with a framework of terminology and concepts regarding variability . In addition, we present three recurring patterns of variability. Finally, we suggest a method for managing variability in software product lines.
C1 Univ Groningen, Dept Math & Comp Sci, NL-9700 AV Groningen, Netherlands.
RP van Gurp, J (reprint author), Univ Groningen, Dept Math & Comp Sci, POB 800, NL-9700 AV Groningen, Netherlands.
CR Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, DOI 10.1145/136586.136587
   Beck K, 1999, EXTREME PROGRAMMING
   BOSCH J, 1999, P 1 WORK IFIP C SOFT
   Bosch J, 2000, DESIGN USE SOFTWARE
   BOSCH J, 1998, P 21 INT C SOFTW ENG
   Buschmann F., 1996, PATTERN ORIENTED SOF
   COPLIEN J, 1999, IEEE SOFTWARE    NOV, P37
   GIBOSN JP, 1997, FEATURE INTERACTIONS
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   GRISS ML, 2000, IN PRESS P 6 INT C S
   JACOBS PH, 1997, BAS CLIN DERMATOL, V12, P1
   Jazayeri M., 2000, SOFTWARE ARCHITECTUR
   Kang K., CMUSEI90TR21
   KANG KC, ANN SOFTWARE ENG, V5, P354
   KEEPENCE B, 1999, IEEE SOFTWARE    JUL, P102
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Oreizy P., 1999, IEEE INTELLIGENT SYS
   Rine DC, 2000, INFORM SOFTWARE TECH, V42, P47, DOI 10.1016/S0950-5849(99)00055-5
   Rine DC, 1998, J SYST SOFTWARE, V41, P17, DOI 10.1016/S0164-1212(97)10003-6
   Svahnberg M., 1999, Proceedings of the 3rd Annual IASTED International Conference Software Engineering and Applications (SEA'99)
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   VANDEHAMER P, 1998, P 2 ARES WORKSH DEV
   Zave P., 1997, ACM Transactions on Software Engineering and Methodology, V6, DOI 10.1145/237432.237434
NR 23
TC 14
Z9 14
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1360-3
PY 2001
BP 45
EP 54
PG 10
WC Computer Science, Hardware & Architecture; Computer Science, Software
   Engineering
SC Computer Science
GA BT40B
UT WOS:000172900700006
ER

PT S
AU Czarnecki, K
   Eisenecker, UW
AF Czarnecki, K
   Eisenecker, UW
BE Nierstrasz, O
   Lemoine, M
TI Components and generative programming
SO SOFTWARE ENGINEERING - ESEC/FSE '99, PROCEEDINGS
SE Lecture Notes in Computer Science
LA English
DT Article; Proceedings Paper
CT 7th European Software Engineering Conference/7th ACM SIGSOFT Symposium
   on the Foundations of Software Engineering
CY SEP 06-10, 1999
CL TOULOUSE, FRANCE
SP ACM SIGSOFT
AB This paper is about a paradigm shift from the current practice of manually searching for and adapting components and their manual assembly to Generative Programming, which is the automatic selection and assembly of components on demand. First, we argue that the current OO technology does not support reuse and configurability in an effective way. Then we show how a system family approach can aid in defining reusable components. Finally, we describe how automate the assembly of components based on configuration knowledge. We compare this paradigm shift to the introduction of interchangeable parts and automated assembly lines in the automobile industry.
   We also illustrate the steps necessary to develop a product line using a simple example of a car product line. We present the feature model of the product line, develop a layered architecture for it, and automate the assembly of the components using a generator. We also discuss some design issues, applicability of the approach, and future development.
C1 DaimlerChrysler AG Res & Technol, Ulm, Germany.
   Univ Appl Sci, Heidelberg, Germany.
RP Czarnecki, K (reprint author), DaimlerChrysler AG Res & Technol, Ulm, Germany.
EM czarnecki@acm.org; ulrich.eisenecker@t-online.de
CR Arrango G, 1994, SOFTWARE REUSABILITY, P17
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, DOI 10.1145/136586.136587
   Buschmann F., 1996, PATTERN ORIENTED SOF
   Cohen S., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685733
   COX BJ, 1990, IEEE SOFTWARE    NOV
   CZARNECKI K, 1998, UNPUB GENERATIVE PRO
   CZARNECKI K, TEMPLATE METAPROGRAM
   CZARNECKI K, 1999, IN PRESS GENERATIVE
   CZARNECKI K, 1999, P ECOOP 99 OBJ OR PR
   Czarnecki K., 1998, THESIS TU ILMENAU GE
   DEVANBU P, 1998, P 5 INT C SOFTW REUS
   EISENECKER U, 1999, IN PRESS MICROSOFT S
   *GERM FED MIN ED S, 1999, OBJ SOFTW VERT ARCH
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   KANG K, 1990, CMUSEI90TR21 CARN ME
   Kiczales G, 1997, PROC INT CONF SOFTW, P481, DOI 10.1145/253228.253431
   Kiczales G., 1997, P EUR C OBJ OR PROGR, P220, DOI DOI 10.1007/BF60053381
   KNAUPP J, ALGORITHM GENERATORS
   MEZINI M, 1998, P C OBJ OR PROGR LAN
   MUSSER DR, 1966, STL TUTORIAL REFEREN
   NEUBERT T, 1998, THESIS TU CHEMNITZ
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, DOI 10.1109/TSE.1976.233797
   Reenskaug T., 1996, WORKING OBJECTS OORA
   SIMONYI C, 1996, INTENTIONAL PROGRAMM
   SIMOS M, 1996, STARSVCA02500100
   Smaragdakis Y., 1998, LNCS, V1445, P550
   Unruh E., 1994, X3J16940075ISO ANSI
   Veldhuizen T., 1995, C++ Report, V7
   WILLEY A, 1997, TECHNOLOGY TRANSITIO
NR 30
TC 14
Z9 14
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-66538-2
J9 LECT NOTES COMPUT SC
PY 1999
VL 1687
BP 2
EP 19
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BT95H
UT WOS:000174580100001
ER

PT J
AU McGregor, JD
   Muthig, D
   Yoshimura, K
   Jensen, P
AF McGregor, John D.
   Muthig, Dirk
   Yoshimura, Kentaro
   Jensen, Paul
TI Successful Software Product Line Practices introduction
SO IEEE SOFTWARE
LA English
DT Editorial Material
ID ADOPTION
C1 [McGregor, John D.] Clemson Univ, Clemson, SC 29631 USA.
EM johnmc@cs.clemson.edu; dirk.muthig@lhsystems.com;
   kentaro.yoshimura.jr@hitachi.com; pjensen@overwatch.textron.com
CR BELL P, DOM SPEC MOD WORKSH
   BELL P, DSL EVOLUTION
   BELL P, 2007, P C OBJ OR PROGR SYS, P994
   CLEMENTS P, 2002, IEEE SOFTWARE, V10, P28
   Clements P, 2001, SOFTWARE PRODUCT LIN
   DECKER SG, 2007, P 11 INT SOFTW PROD, P275
   Jaaksi A, 2002, IEEE SOFTWARE, V19, P73, DOI 10.1109/MS.2002.1020290
   Jensen Paul, 2009, CROSSTALK, V22, P11
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   van der Linden F, 2002, IEEE SOFTWARE, V19, P41, DOI 10.1109/MS.2002.1020286
   NORTHROP L, 2002, IEEE SOFTWARE, V10, P32
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   TAKEBE Y, 2009, P 13 INT SOFTW PROD, P275
   THEIL S, 2002, IEEE SOFTWARE, V10, P66
   TOFT P, 2000, P 1 SOFTW PROD LIN C, P111
   TOFT P, 2004, HEWLETT PACKARD HP O
   Yoshimura K., 2008, P MSR 08, P11, DOI 10.1145/1370750.1370753
NR 18
TC 11
Z9 11
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0740-7459
J9 IEEE SOFTWARE
JI IEEE Softw.
PD MAY-JUN
PY 2010
VL 27
IS 3
BP 16
EP 21
PG 6
WC Computer Science, Software Engineering
SC Computer Science
GA 587ET
UT WOS:000276973300005
ER

PT S
AU Sochos, P
   Philippow, I
   Riebisch, M
AF Sochos, P
   Philippow, I
   Riebisch, M
BE Weske, M
   Liggesmeyer, P
TI Future-oriented development of software product lines: Mapping feature
   models to the architecture
SO OBJECT-ORIENTED AND INTERNET-BASED TECHNOLOGIES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 5th Annual International Conference on Object-Oriented and
   Internet-Based Technologies
CY SEP 27-30, 2004
CL Erfurt, GERMANY
DE software product lines; product line methods; feature modelling;
   separation of concerns; feature; architecture mapping; generative
   programming; plug-in architectures
AB Software product lines (PLs) present a solid approach in large scale reuse. Due to the PLs' inherit complexity, many PL methods use the notion of "features" to support requirements analysis and domain modelling (e.g. FODA, FORM, FeatuRSEB). Nevertheless, the link between features and architecture remains weak in all methodologies, with a large impact on the traceability of high-level concerns in respect to lower-lever architectural structures. This paper provides an analysis on the state of the art of feature-oriented PL methodologies from the point of view of the linkage between feature models and architecture. Based on the identified shortcomings it introduces an approach to allow a strong mapping between features and architecture. The approach makes use of extensions in the feature modelling techniques and adopts plug-in architectures as a means of mapping feature structures and at the same time satisfying the demanded PL variability and flexibility.
C1 Tech Univ Ilmenau, D-98684 Ilmenau, Germany.
RP Sochos, P (reprint author), Tech Univ Ilmenau, Postfach 10 00 565, D-98684 Ilmenau, Germany.
EM Periklis.Sochos@tu-ilmenau.de; Ilka.Philippow@tu-ilmenau.de;
   Matthias.Riebisch@tu-ilmenau.de
CR Atkinson C., 2002, COMPONENT BASED PROD
   BATORY D, 2002, GENERATING PRODUCT L, P81
   Batory D, 1997, IEEE T SOFTWARE ENG, V23, P67, DOI 10.1109/32.585497
   BOELLERT K, 2002, THESIS TU ILLMENAU I
   Bosch J, 2000, DESIGN USE SOFTWARE
   Buschnnann F., 1996, PATTERNORIENTED SOFT
   CALDER M, 2003, FEATURE INTERACTION, V41, P115
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   GRISS D, 1998, P 5 INT C SOFTW REUS
   JACOBSON I, 1992, OBJECTORIENTED SOFTW
   KANG K, 1990, CMUSEL90TR021
   Kang K., 2002, FOPLE FEATURE ORIENT
   KANG KC, 2002, IEEE SOFTWARE, V9, P58
   KANG KC, 2003, DOMAIN ORIENTED SYST, P19
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kiczales G., 1997, P EUR C OBJ OR PROGR, P220, DOI DOI 10.1007/BF60053381
   Ossher H., 2000, SOFTWARE ARCHITECTUR
   PASHOV I, 2004, THESIS TU ILLMENAU I
   PHILIPPOW I, 2003, 4 AOSD MODELLING UML
   RIEBISCH M, 2003, WORKSH ECCOP BOOKS D, P64
   Streitferdt D., 2003, Proceedings 10th IEEE International Conference and Workshop on the Engineering of Computer-Based Systems
   SUZUKI J, 1999, P ASPECT ORIENTED PR
   TARR P, 2001, HYPER J USER INSTALL
   ZAVE P, 1999, FAQ SHEET FEATURE IN
NR 24
TC 11
Z9 11
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-23201-X
J9 LECT NOTES COMPUT SC
PY 2004
VL 3263
BP 138
EP 152
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BAZ86
UT WOS:000224324400011
ER

PT B
AU Griss, ML
AF Griss, ML
BE Donohoe, P
TI Implementing product-line features by composing aspects
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE product lines; components; features; frameworks; reuse; domain
   engineering; aspects; FeatuRSEB; agents; e-commerce; generators
ID SOFTWARE; SYSTEMS
AB Emerging e-commerce systems are highly dynamic and require even more flexibility and reduced time to market than that traditionally provided by product-line development and component-based software engineering (CBSE). In this paper we describe our work on agent-based, product-line CBSE for flexible e-commerce systems. We are integrating several technologies for product-line analysis and component design, implementation, and customization to create a basis for systematic product-line development. Largely independent work on reuse ("domain analysis") and object-oriented technology ("design and code") has matured to the degree that integration of the techniques promises a coherent approach. We outline a practical development process that structures a set of common and variable features supporting a product line, to produce reusable elements ("aspects"). These aspects can be combined into customized components and frameworks to support the product line.
C1 Hewlett Packard Co Labs, Palo Alto, CA 94304 USA.
RP Griss, ML (reprint author), Hewlett Packard Co Labs, Palo Alto, CA 94304 USA.
RI Griss, Martin/
OI Griss, Martin/0000-0002-8148-6967
CR AKSIT M, 1996, ACM COMPUTING SURV A, V28
   Aksit M., 1992, P 1992 ECOOP, P372
   ARANGO G, 1994, SOFTWARE REUSABILITY
   BASSETT PG, 1996, FRAMING REUSE LESSON
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, DOI 10.1145/136586.136587
   Batory D., 1996, Proceedings Fourth International Conference on Software Reuse (Cat. No.96TB100015), DOI 10.1109/ICSR.1996.496124
   Booch G, 1999, UNIFIED MODELING LAN
   Bosch J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.841044
   Bradshaw J., 1997, SOFTWARE AGENTS
   Buschmann F., 1996, PATTERN ORIENTED SOF
   CHEN Q, 2000, P AUT AG 2000 JUN BA
   CLARKE S, 1999, P C OBJ OR PROGR SYS, P325, DOI 10.1145/320384.320420
   CZARNECKI K, 1999, LNCS, V1687
   DEHNERT J, 1998, P DAGST SEM GEN PROG
   Falchuk B, 1998, COMPUTER, V31, P31, DOI 10.1109/2.735848
   Gamma E., 1994, DESIGN PATTERNS ELEM
   GARLAN D, 1996, SOFTWARE ARCH PERSPE
   GLUSHKO RJ, 1999, COMMUNICATIONS ACM, V42
   GOGUEN JA, 1984, IEEE T SOFTWARE ENG, V10, P528
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   GRISS ML, 1996, OBJECT MAGAZINE  APR
   GRISS ML, 2000, P 6 INT C SOFTW REUS
   GRISS ML, 2000, TRHPL1999159
   GSCHWIND T, 1999, P S AG SYST APPL S M, P13, DOI 10.1109/ASAMA.1999.805389
   HARRISON W, 1993, P C OBJ OR PROGR SYS, P411, DOI 10.1145/165854.165932
   Huhns M. N., 1998, READINGS AGENTS
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   JAZAYERI M, 1998, P DAGST EM GEN PROGR
   Jennings N. R., 1998, AGENT TECHNOLOGY
   JOHNSON R, 1988, JOOP             JUN, P35
   JOHNSON RE, 1988, J OBJECT ORIENTED PR, P22
   Kang K., 1990, CMUSEI90TR21
   Kang K. C., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685763
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang KC, 1999, SOFTWARE PRACT EXPER, V29, P875, DOI 10.1002/(SICI)1097-024X(199908)29:10<875::AID-SPE262>3.0.CO;2-W
   KENDALL EA, 1999, P ACM C OBJ OR SYST, P353, DOI 10.1145/320384.320423
   Kiczales G., 1997, P EUR C OBJ OR PROGR, P220, DOI DOI 10.1007/BF60053381
   LIEBERHERR KJ, 1993, IEEE T SOFTWARE ENG, V19, P313, DOI 10.1109/32.223802
   LOPES CV, 1998, LNCS, V1543
   MACHIRAJU V, 1999, 2000 IEEE IFIP NETW
   MEZINI M, 1998, P C OBJ OR PROGR SYS, P97, DOI 10.1145/286936.286950
   Musser D. R., 1996, STL TUTORIAL REFEREN
   MUSSER DR, 1994, SOFTWARE PRACTICE EX, V24
   Nwana HS, 1999, APPL ARTIF INTELL, V13, P129, DOI 10.1080/088395199117513
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P310
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, DOI 10.1109/TSE.1976.233797
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Rivieres J. D., 1991, ART METAOBJECT PROTO
   SHAHOUMIAN TA, 2000, HPL200007
   SHARMA T, 1999, SOFTWARE DEV, V7
   Smaragdakis Y., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685728
   SMARAGDAKIS Y, 1998, P ECOOP98
   SMARAGDAKIS Y, 1999, P 9 ANN WORKSH SOFTW
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.841000
   VANHILST M, 1996, P ACM SIGSOFT 1996
   VanHilst M., 1996, JSSST INT S OBJ TECH, P22
   VanHilst M., 1996, P OOPSLA 96, P359, DOI 10.1145/236337.236375
   Walker R. J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.841001
NR 58
TC 11
Z9 11
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 271
EP 288
PG 18
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500015
ER

PT B
AU Gomaa, H
   Shin, ME
AF Gomaa, H
   Shin, ME
GP IEEE COMPUTER SOCIETY
   IEEE COMPUTER SOCIETY
TI Multiple-view meta-modeling of software product lines
SO EIGHTH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER
   SYSTEMS, PROCEEDINGS
SE IEEE International Conference on Engineering Complex Computer
   Systems-ICECCS
LA English
DT Proceedings Paper
CT 8th IEEE International Conference on Engineering of Complex Computer
   Systems
CY DEC 02-04, 2002
CL GREENBELT, MD
SP IEEE Comp Soc, Tech Comm Complex Comp
AB This paper describes a multiple-view meta-modeling approach for software product lines using the Unified Modeling Language notation (UML). A multiple-view model for a software product line is an object-oriented domain model which defines the different aspects of a software product line, namely the use case model, static model, collaboration model, statechart model, and feature model, including the commonality and variability. The meta-model depicts life cycle phases, views within each phase, and meta-classes within each view. The relationships between the different views are described Consistency checking rules are defined based on the relationships among meta-classes in the meta-model. Finally, tool support for the approach is described.
C1 George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
RP Gomaa, H (reprint author), George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
EM hgomaa@gmu.edu; Michael.Shin@coe.ttu.edu
CR ATKINSON C, 2000, ICSE SOFTW PROD LIN
   ATKINSON C, 2000, P 1 INT SOFTW PROD L
   Booch G, 1999, UNIFIED MODELING LAN
   GOMAA H, 1996, J AUTOMATED SOFTWARE, V3
   Gomaa H., 2000, DESIGNING CONCURRENT
   GOMAA H, 2001, P SOFTW PROD LIN WOR
   GOMAA H, 2000, P INT C SOFTW REUS V
   GOMAA H, 1999, IEE P SOFTWARE, V146
   GRISS M, 1998, P INT C SOFTW REUS V
   HAREL D, 1996, P 18 INT C SOFTW ENG
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   Kang K., 1990, CMUSEI90TR21
   KEEPENCE B, 1999, IEEE SOFTWARE    JUL
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   MORISIO M, 2000, P 15 IEEE INT C AUT
   Pree W., 1995, DESIGN PATTERNS OBJE
   Rumbaugh J., 1999, UNIFIED MODELING LAN
   SHIN, 2002, THESIS G MASON U FAI
   *SOFTW ENG I, 2000, FRAM SOFTW PROD LIN
   WARMER J, 1999, OBJECT CONSTRAINT LA
NR 20
TC 10
Z9 10
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1757-9
J9 IEEE INT C ENG COMP
PY 2002
BP 238
EP 246
DI 10.1109/ICECCS.2002.1181517
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA BV83H
UT WOS:000180142000026
ER

PT J
AU Kishi, T
   Noda, N
AF Kishi, Tomoji
   Noda, Natsuko
TI Formal verification and software product lines - Using formal
   verification techniques to verify designs within a product line
SO COMMUNICATIONS OF THE ACM
LA English
DT Article
C1 Japan Adv Inst Sci & Technol, Ishikari, Hokkaido, Japan.
   NEC Corp Ltd, Kawasaki, Kanagawa 213, Japan.
RP Kishi, T (reprint author), Japan Adv Inst Sci & Technol, Ishikari, Hokkaido, Japan.
EM tkishi@jaist.ac.jp; nnoda@jaist.ac.jp
CR Clarke E. M., 1999, MODEL CHECKING
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Gomaa H, 2004, OBJECT TECHNOLOGY SE
   Holzmann G.J., 2004, SPIN MODEL CHECKER P
   KANG K, 1990, CUMSEI90TR21
   KISHI T, 2005, P SOFTW PROD LIN C 2
   KISHI T, 2004, P 2 IEEE WORKSH SOFT
   LAVAZZA L, 2001, P 8 EUR SOFTW ENG C
   PAUL K, 2005, SOFTWARE PRODUCT LIN
   TREW T, 2005, P SOFTW PROD LIN C 2
NR 10
TC 8
Z9 9
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1515 BROADWAY, NEW YORK, NY 10036 USA
SN 0001-0782
J9 COMMUN ACM
JI Commun. ACM
PD DEC
PY 2006
VL 49
IS 12
BP 73
EP 77
DI 10.1145/1183236.1183270
PG 5
WC Computer Science, Hardware & Architecture; Computer Science, Software
   Engineering; Computer Science, Theory & Methods
SC Computer Science
GA 115YR
UT WOS:000242770200023
ER

PT J
AU Fantinato, M
   De Toledo, MBF
   Gimenes, IMD
AF Fantinato, Marcelo
   Felgar De Toledo, Maria Beatriz
   De Souza Gimenes, Itana Maria
TI WS-contract establishment with QoS: An approach based on feature
   modeling
SO INTERNATIONAL JOURNAL OF COOPERATIVE INFORMATION SYSTEMS
LA English
DT Article
DE electronic contracts; Web services; QoS attributes; information reuse;
   feature modeling
ID WEB SERVICES
AB Electronic contracts describe inter-organizational business processes in terms of supply and consumption of electronic services (commonly Web services). The establishment of e-contracts in a particular business domain usually involves a set of well-defined common and variable properties. These properties are not fully exploited by the existing e-contract establishment approaches. Feature modeling is a software engineering technique that has been widely used for capturing and managing commonalities and variabilities of product families in the context of software product line. This paper presents a feature-based approach to support Web services e-contract (WS-contract) establishment. The approach aims at improving the information structure and reuse of WS-contracts, including the QoS attributes. Features are used to represent possible WS-contract elements in order to drive WS-contract template instantiation, thus acting as a configuration space manager. A toolkit named FeatureContract was developed to automatically support the proposed approach. A case study was carried out within the telecom context to show the approach feasibility.
C1 [Fantinato, Marcelo; Felgar De Toledo, Maria Beatriz; De Souza Gimenes, Itana Maria] Univ Estadual Campinas, Inst Comp, BR-13084971 Sao Paulo, Brazil.
   [De Souza Gimenes, Itana Maria] Univ Estadual Maringa, Dept Informat, BR-87020900 Maringa, Parana, Brazil.
RP Fantinato, M (reprint author), Univ Estadual Campinas, Inst Comp, POB 6176, BR-13084971 Sao Paulo, Brazil.
EM mfantina@ic.unicamp.br; beatriz@ic.unicamp.br; itana@din.uem.br
RI Fantinato, Marcelo/G-1071-2012
CR Alonso G., 2003, WEB SERVICES CONCEPT
   Andrieux A., 2006, WEB SERVICES AGREEME
   Angelov S., 2003, International Journal of Networking and Virtual Organisations, V2, DOI 10.1504/IJNVO.2003.003517
   Antkiewicz M., 2004, P 2004 OOPSLA WORKSH, P67, DOI 10.1145/1066129.1066143
   Bajaj S., 2006, WEB SERVICES POLICY
   BARESI L, 2005, P INT WORKSH TECHN E, P72
   BERNAUER M, 2003, P 7 WORLD MULT SYST, P30
   Berry A, 2005, INT J COOP INF SYST, V14, P131, DOI 10.1142/S0218843005001109
   CECHTICKY V, 2004, P INT C SOFTW REUS M, P101
   Chiu D., 2003, P HICSS, P74
   Czarnecki K., 2005, P INT C GEN PROGR CO, P422
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.225
   Czarnecki K., 2006, P 10 INT SOFTW PROD, P41
   Dayal U., 2001, Proceedings of the 27th International Conference on Very Large Data Bases
   DUMAS M, 2004, ELECTRON COMMER R A, V3, P95, DOI 10.1016/j.elerap.2003.09.003
   Fantinato M., 2006, P IEEE CEC EEE SAN F, P34
   FANTINATO M, 2006, P INT C BUS PROC MAN, P290
   Farrell ADH, 2005, INT J COOP INF SYST, V14, P99, DOI 10.1142/S0218843005001110
   Griffel F., 1998, Proceedings Second International Enterprise Distributed Object Computing (Cat. No.98EX244), DOI 10.1109/EDOC.1998.723241
   GRISS M, 2000, P 6 INT C SOFTW REUS, P137
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Hoffner Y, 2001, COMPUT NETW, V37, P111, DOI 10.1016/S1389-1286(01)00210-9
   Hoffner Y, 2005, INT J COOP INF SYST, V14, P217, DOI 10.1142/S0218843005001134
   HUNGER J, 2003, TELECOMMUNICATIONS B
   JERTILA A, 2005, P 7 INT IEEE C E COM, P396
   Kabilan V., 2003, P SEM WEB DAT WORKSH, P395
   Kaminski H., 2006, P IEEE CEC EEE SAN F, P47
   KANG K, 1990, CMUSEI90T021
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Keller A., 2003, Journal of Network and Systems Management, V11, DOI 10.1023/A:1022445108617
   Krishna P., 2005, INFORM TECHNOL MANAG, V6, P363, DOI 10.1007/s10799-005-3901-z
   LAYMANN F, 2001, WEB SERVICES FLOW LA
   Leymann F, 2002, IBM SYST J, V41, P198
   Linington PF, 2005, INT J COOP INF SYST, V14, P77, DOI 10.1142/S0218843005001122
   MARJANOVIC O, 2002, P IEEE INT ENT DISTR, P59
   Menasce DA, 2002, IEEE INTERNET COMPUT, V6, P72, DOI 10.1109/MIC.2002.1067740
   *OASIS, 2006, OASIS WEB SERV BUS P
   Oldham N., 2006, P 15 INT C WORLD WID, P697, DOI 10.1145/1135777.1135879
   *OR, 2006, OR BPEL PROC MAN
   *OWL, 2006, OWL WEB ONT LANG OV
   Papazoglou M., 2003, COMMUN ACM, V46, P24, DOI DOI 10.1145/944217.944233
   RINDERLE S, 2005, P INT C WEB INF SYST, P443
   ROUACHED M, 2005, P 3 INT C BUS PROC M, P410
   Sahai A, 2002, P 13 IFIP IEEE INT W, P28
   *SEI, 2006, FRAM SOFTW PROD LIN
   *SOAP, 2006, SOAP SPEC
   SOCHOS P, 2004, P ANN INT C OBJ OR I, P138
   STREITBERGER W, 2005, P IEEE CEC MUN, P370
   Terplan K., 2001, OSS ESSENTIALS SUPPO
   Thatte S., 2001, XLANG WEB SERVICES B
   Tosic V., 2005, Proceedings. The 2005 IEEE International Conference on e-Technology, e-Commerce and e-Service
   VONSUSANI O, 2005, P IEEE INT C E COMM, P540
   Wang H., 2005, P WORKSH SEM WEB EN
   WOMBACHER A, 2005, J INFOR SYSTEMS E BU, V3, P127
   *XSL, 2006, XSL TRANSF XSLT
   2006, WEB SERVICES DESCRIP
   2006, FEATURE MODELING PLU
   WEB TOOLS PLATFORM W
   ACTIVE ENDPOINTS ACT
NR 59
TC 8
Z9 8
PU WORLD SCIENTIFIC PUBL CO PTE LTD
PI SINGAPORE
PA 5 TOH TUCK LINK, SINGAPORE 596224, SINGAPORE
SN 0218-8430
J9 INT J COOP INF SYST
JI Int. J. Coop. Inf. Syst.
PD SEP
PY 2008
VL 17
IS 3
BP 373
EP 407
DI 10.1142/S0218843008001889
PG 35
WC Computer Science, Information Systems
SC Computer Science
GA 342IS
UT WOS:000258778400007
ER

PT S
AU Hein, A
   Schlick, M
   Vinga-Martins, R
AF Hein, A
   Schlick, M
   Vinga-Martins, R
BE Donohoe, P
TI Applying feature models in industrial settings
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE Springer International Series in Engineering and Computer Science
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE product-line; variability analysis; feature modeling; configuration;
   PRAISE; FODA; UML
AB A software product line is a collection of products sharing a common set of features that address the specific needs of a given business. The PRAISE (product-line realization and assessment in industrial settings) project, partly funded by the European Commission under Esprit contract 28651 and pursued by Thomson-CSF/LCR (France), Robert Bosch GmbH (Germany), and the European Software Institute (Spain), is currently investigating product-line realization and its assessment in industrial settings. A part of the project is dedicated to the validation and consolidation of proposed product-line technologies in full-scale industrial experiments. This paper presents the first experimental results obtained by Bosch. The Bosch experiment is located in the car periphery supervision (CPS) domain. One focus has been on feasibility of variability modeling with feature-oriented domain analysis (FODA. The experiment has shown that the FODA model does not provide the necessary expressiveness to represent the different types of crosslinks that are necessary to describe the domain. This paper presents an extension to overcome this shortcoming.
C1 Robert Bosch GmbH, Corp Res & Dev, FV, SLD, D-60441 Frankfurt, Germany.
RP Hein, A (reprint author), Robert Bosch GmbH, Corp Res & Dev, FV, SLD, POB 90 01 69, D-60441 Frankfurt, Germany.
EM andreas.hein1@de.bosch.com; michael.schlick@de.bosch.com
CR Booch G., 1998, UNIFIED MODELING LAN
   CZARNECKI K, 1999, P 13 EUR C OBJ OR PR
   EGYED A, 1999, USCCSE99TR514
   *EUR SOFTW I, 1998, ESI1998RECORDEDI
   Griss M., 1998, P 5 INT C SOFTW REUS
   Hofmeister C, 1999, INT FED INFO PROC, V12, P145
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   Kang K., 1990, CMUSEI90TR21
   LALANDA P, 1998, P28651D21 CEC PRAISE
   MEDVIDOVIC N, 1999, WORKSH ARCH UML DENV
   VICIAD, 1998, P 5 INT C REQ ENG IC
   VINGAMARTINS R, 1999, P28651D23 CEC
   VINGAMARTINS R, 1999, ECOOP 99
   WEISS DM, 1999, SOFTW PRODUCT LINE E
   1998, 28651 ESPRIT
NR 15
TC 7
Z9 7
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
SN 0893-3405
BN 0-7923-7940-3
J9 SPRINGER INT SER ENG
PY 2000
VL 576
BP 47
EP 70
PG 24
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500003
ER

PT J
AU Stuikys, V
   Damasevicius, R
AF Stuikys, Vytautas
   Damasevicius, Robertas
TI MEASURING COMPLEXITY OF DOMAIN MODELS REPRESENTED BY FEATURE DIAGRAMS
SO INFORMATION TECHNOLOGY AND CONTROL
LA English
DT Article
DE Feature model; feature diagram; complexity measures; cognitive
   complexity; structural complexity
ID METRICS; INFORMATION; QUALITY
AB Feature models represented by Feature Diagrams (FDs) prevail in the software product line approach. The product line approach and FDs are used to manage variability and complexity of software families and to ensure higher quality and productivity of product development through higher-level feature modeling and reuse. In this paper we, first, analyze the properties of feature models. Then, combining some properties of FDs with ideas of Miller's, Metcalfe's and Keating's works, we propose three FD complexity measures. The first measure gives boundaries to estimate cognitive complexity of a generic component to be derived from the feature model. The second measure describes structural complexity of the model expressed through the number of adequate sub-trees of the given model. The third measure estimates total cognitive and structural complexity of the model. To validate the introduced measures, we present a case study with three feature models of a varying complexity.
C1 [Stuikys, Vytautas; Damasevicius, Robertas] Kaunas Univ Technol, Software Engn Dept, LT-51368 Kaunas, Lithuania.
RP Stuikys, V (reprint author), Kaunas Univ Technol, Software Engn Dept, Studentu St 50, LT-51368 Kaunas, Lithuania.
EM vytautas.stuikys@ktu.lt; damarobe@soften.ktu.lt
CR BRISCOE B, 2006, IEEE SPECTRUM   0726
   Cardoso J., 2006, P IEEE INT C SERV CO, P167
   Cardoso J, 2006, LECT NOTES COMPUT SC, V4103, P117
   CHERFI SS, 2007, P 26 INT C CONC MOD, P185
   Clements P, 2002, SOFTWARE PRODUCT LIN
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   CZARNECKI K, 2001, GENERATIVE PROGRAM M
   Czarnecki K., 2006, P 10 INT SOFTW PROD, P41
   Damasevicius R, 2008, INF TECHNOL CONTROL, V37, P124
   FRAPPIER M, 1994, 2 CAN SPAC AG
   Genero M, 2000, LECT NOTES COMPUT SC, V1920, P513
   Genero M, 2003, LECT NOTES COMPUT SC, V2814, P118
   Genero M., 2005, J OBJECT TECHNOLOGY, V4, P59, DOI DOI 10.5381/J0T.2005.4.9.A1
   Halstead M.H., 1977, ELEMENTS SOFTWARE SC
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Kang K., 1990, CMUSEI90TR21
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Keating M., 2000, Proceedings IEEE 2000 First International Symposium on Quality Electronic Design (Cat. No. PR00525), DOI 10.1109/ISQED.2000.838861
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220
   Kim H., 2002, 6 ECOOP WORKSH QUANT
   Kintsch W., 1998, COMPREHENSION PARADI
   Latva-Koivisto A.M., 2001, FINDING COMPLEXITY M
   Laue R., 2006, LECT NOTES INFORM, V85, P1
   LI G, 2008, P 17 INT WORLD WID W
   Marchesi M., 1998, Proceedings of the Second Euromicro Conference on Software Maintenance and Reengineering (Cat. No.98EX143), DOI 10.1109/CSMR.1998.665739
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, DOI 10.1109/TSE.1976.233837
   Mendling J, 2007, LECT NOTES COMPUT SC, V4803, P113
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037//0033-295X.101.2.343
   Morasca S., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), DOI 10.1109/METRIC.1999.809731
   MULLERW W, 2003, SYSTEMC APPL
   Sametinger J., 1997, SOFTWARE ENG REUSABL
   Schobbens P-Y, 2006, 14 IEEE INT C REQ EN, P136, DOI [10.1109/RE.2006.23, DOI 10.1109/RE.2006.23]
   *SEI, 2006, SOFTW TECHN ROADM
   Shao JQ, 2003, CAN J ELECT COMPUT E, V28, P69
   SHEARD T, 2001, LECT NOTES COMPUTER, V2196, P2
   SIEGMUND N, 2008, P 15 AS PAC SOFT ENG, P187, DOI DOI 10.1109/APSEC.2008.45
   Stuikys Vytautas, 2008, Informatics in Education, V7
   Stuikys V, 2008, INF TECHNOL CONTROL, V37, P301
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   Vanderfeesten I., 2007, BPM WORKFLOW HDB 200, P179
   Vanderfeesten I, 2008, LECT NOTES COMPUT SC, V5074, P480
   Yi T., 2004, ACM SIGSOFT SOFTWARE, V29
   Zivkovic A, 2005, INFORMATICA-LITHUAN, V16, P295
NR 43
TC 7
Z9 7
PU KAUNAS UNIV TECHNOLOGY
PI KAUNAS
PA KAUNAS UNIV TECHNOL, DEPT ELECTRONICS ENGINEERING, STUDENTU STR 50,
   KAUNAS, LT-51368, LITHUANIA
SN 1392-124X
J9 INF TECHNOL CONTROL
JI Inf. Technol. Control
PY 2009
VL 38
IS 3
BP 179
EP 187
PG 9
WC Automation & Control Systems; Computer Science, Artificial Intelligence;
   Computer Science, Information Systems
SC Automation & Control Systems; Computer Science
GA 502BL
UT WOS:000270428900001
ER

PT B
AU Dager, JC
AF Dager, JC
BE Donohoe, P
TI Cummins's experience in developing a software product line architecture
   for real-time embedded diesel engine controls
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE software architecture; software product line; domain analysis;
   architectural views
AB Over six years ago, Cummins Engine Company established a software product line for its real-time embedded diesel engine controls. The engine controls product line requirements domain is very complex. As the world's largest manufacturer of diesel engines over 200 horsepower. Cummins makes engines for a large, world-wide variety of applications, customers, original equipment manufacturers (OEMs), engine sizes, and engine configurations. The software product line program slashed development costs and cycle time across these highly varying products and launched many successful products over the past four years. Over these years, Cummins has crossed many hurdles and gained a great deal of experience developing, documenting and maintaining a software product line architecture. This paper describes the experience. It focuses on the development process and covers topics such as domain analysis, architectural views, and use of the Software Engineering Institute (SEI) practices and literature to guide the development approach. Also described are the architecture development process, the organizational challenges faced, and the lessons learned.
CR Bass L., 1998, SOFTWARE ARCHITECTUR
NR 1
TC 7
Z9 7
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 23
EP 45
PG 23
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500002
ER

PT S
AU Martinez-Ruiz, T
   Garcia, F
   Piattini, M
AF Martinez-Ruiz, Tomas
   Garcia, Felix
   Piattini, Mario
BE Lee, R
TI Towards a SPEM v2.0 extension to define Process Lines variability
   mechanisms
SO SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS
SE STUDIES IN COMPUTATIONAL INTELLIGENCE
LA English
DT Proceedings Paper
CT 6th ACIS International Conference on Software Engineering Research,
   Management and Applications
CY AUG 20-22, 2008
CL Prague, CZECH REPUBLIC
SP Int Assoc Comp & Informat Sci
HO Charles Univ
DE Software Process Lines; SPEM; variability
ID SOFTWARE PRODUCT LINES; MODELING VARIABILITY; ARCHITECTURES
AB Software organizations need to adapt their processes to each new project. Although Software Process Lines axe the most suitable approach for the design of processes which are adapted to different contexts, SPEM does not include the appropriate mechanisms for modelling them. The objective of this paper is to suggest a SPEM extension which will support the variability implied in a Software Process Line. New variability mechanisms based on the use of Variation Points and Variants, by means of which the variability necessary in a Process Line is represented, have been proposed. The new mechanisms that we shall introduce into SPEM, will allow it to model Software Process Lines. From these lines, the generation of processes adapted to each context will simplify the selection of the appropriate variants for each variation point.
C1 [Martinez-Ruiz, Tomas; Garcia, Felix; Piattini, Mario] Univ Castilla La Mancha, Escuela Super Informat, Informat & Technol Syst Dept, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
RP Martinez-Ruiz, T (reprint author), Univ Castilla La Mancha, Escuela Super Informat, Informat & Technol Syst Dept, Alarcos Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
RI Piattini, Mario/F-6271-2013; Garcia , Felix /D-4299-2011
OI Piattini, Mario/0000-0002-7212-8279; Garcia , Felix /0000-0001-6460-0353
CR Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Clauss M, 2001, WORKSH DOM SPEC VIS
   Goedicke M, 2004, SCI COMPUT PROGRAM, V53, P353, DOI 10.1016/j.scico.2003.04.006
   Humphrey W. S., 1989, MANAGING SOFTWARE PR
   Korherr B, 2007, DEXA 2007: 18TH INTERNATIONAL CONFERENCE ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P829
   Oktaba H, 2007, COMPUTER, V40, P21, DOI 10.1109/MC.2007.361
   Oktaba Hanna, 2008, SOFTWARE PROCESS IMP
   *OMG, 2004, MET OBJ FAC MOF SPEC
   *OMG, 2004, OBJ CONSTR LANG SPEC
   OMG, 2007, PTC070303 OMG
   ROMBACH D, 2006, LNCS, V3840, P83
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Sutton SM, 2005, LECT NOTES COMPUT SC, V3840, P177
   van der Hoek A, 2004, SCI COMPUT PROGRAM, V53, P285, DOI 10.1016/j.scico.2003.04.003
   Webber DL, 2004, SCI COMPUT PROGRAM, V53, P305, DOI 10.1016/j.scico.2003.04.004
   Yoon IC, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P202
   Zhang HY, 2004, SCI COMPUT PROGRAM, V53, P381, DOI 10.1016/j.scico.2003.04.007
   2005, MAP METRICA VERSION
NR 19
TC 7
Z9 7
PU SPRINGER
PI NEW YORK
PA 233 SPRING STREET, NEW YORK, NY 10013, UNITED STATES
SN 1860-949X
BN 978-3-540-70774-5
J9 STUD COMP INTELL
PY 2008
VL 150
BP 115
EP 130
DI 10.1007/978-3-540-70561-1_9
PG 16
WC Computer Science, Software Engineering
SC Computer Science
GA BIH74
UT WOS:000259567800009
ER

PT B
AU Schmid, K
AF Schmid, K
BE Donohoe, P
TI Scoping software product lines - An analysis of art emerging technology
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE software product line; product line scoping; domain engineering; domain
   scoping; domain analysis
ID PLATFORMS
AB Software product line development is a rather new topic area within domain-specific software engineering that builds on previous work in domain engineering. A crucial step in developing a product line is the scoping step, which seeks to determine the boundaries of the product line. This is one of the core planning activities that may determine the success or failure of the whole product line effort. In this paper, we seek to analyze the existing body of knowledge on product line scoping. As the relationship to domain engineering is very close, we also include domain scoping approaches in our analysis. Further, we look at activities related to product line scoping in fields of study other than software engineering. As a result of this survey we provide a taxonomy of existing approaches on both a problem level and a solution level. We also discuss the relative advantages of the various approaches, and show some ways of using our results for enhancing existing scoping approaches and developing new ones.
C1 Fraunhofer Inst Expt Software Engn, D-67661 Kaiserslautern, Germany.
RP Schmid, K (reprint author), Fraunhofer Inst Expt Software Engn, Sauerwiesen 6, D-67661 Kaiserslautern, Germany.
CR ARANGO G, 1993, SOFTWARE REUSABILITY
   ARANGO G, 1989, 5TH P INT WORKSH SOF, P152
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice
   BRIAND LC, 1997, SOFTWARE PROCESS IMP, V2
   BULAT B, 1995, A014005 STARS
   CLEMENTS P, 1999, FRAMEWORK SOFTWARE P
   Cohen Lou, 1995, QUALITY FUNCTION DEP
   CORNWELL PC, 1996, HEWLETTPACKARD J, V47, P1
   DAVIS M, 1993, 5159 CDRL STARS
   DEAN E, CONJOINT ANAL PERSPE
   DeBaud J.M., 1999, INT C SOFTW ENG ICSE, P34
   DEFRAJA G, 1992, EC NOTES, V21, P511
   *DEP DEF SOFTW REU, 1995, DOM SCOP FRAM, V2
   Dikel D, 1997, COMPUTER, V30, P49, DOI 10.1109/2.607064
   DOBSON G, 1988, MARKET SCI, V7, P107, DOI 10.1287/mksc.7.2.107
   ELKAIM W, 1999, LCAT99862 CSF LAB
   ESQUEDA MEJ, 1998, THESIS MIT
   FAVARO J, 1998, ANN SOFTW ENG, P5
   Favaro J, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P136
   GOMAA H, 1995, J SYST SOFTWARE, V28, P189, DOI 10.1016/0164-1212(94)00056-S
   GUPTA N, 1997, P 3 IEEE INT S REQ E
   JANDOUREK E, 1996, HEWLETTPACKARD J, V47, P1
   Kang K., 1990, CMUSEI90TR21
   Lim WC, 1996, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE, PROCEEDINGS, P41
   *LOR DEF SYST, 1996, REUS PLANN TUT
   MASON CH, 1994, J BUS RES, V31, P163, DOI 10.1016/0148-2963(94)90080-9
   MCBRIDE RD, 1988, MARKET SCI, V7, P126, DOI 10.1287/mksc.7.2.126
   Meyer MH, 1998, SLOAN MANAGE REV, V40, P61
   MILI H, 1995, T SOFTWARE ENG, V21
   PAULS HW, 1985, J CARBOHYD CHEM, V4, P1, DOI 10.1080/07328308508062945
   Poulin JS, 1997, MEASURING SOFTWARE R
   Robertson D, 1998, SLOAN MANAGE REV, V39, P19
   Schmid K., 1999, 1 WORKSH EC DRIV SOF
   *SOFTW PROD CONS, 1993, SPC92019CMC
   *SOFTW PROD CONS, 1993, REUS AD GUID VERS 02
   *STARS, 1996, STARSVCA02500100
   STEENBRINK J, 1991, PRODUCT LINE STRATEG, P78
   WARTIK S, 1992, INT J SOFTW ENG KNOW, V2, P403, DOI 10.1142/S0218194092000191
   WILES E, 1999, UWACS99032 U WAL
   Withey J., 1996, CMUSEI96TR010
NR 40
TC 6
Z9 7
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 513
EP 532
PG 20
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500027
ER

PT B
AU Toft, P
   Coleman, D
   Ohta, J
AF Toft, P
   Coleman, D
   Ohta, J
BE Donohoe, P
TI A cooperative model for cross-divisional product development for a
   software product line
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE platform development; cooperative; product platform; architecture;
   topologies; firmware
AB Organizations developing software for families of related products must meet the challenge of leveraging software development effort across the product families, while still allowing individual product teams to focus on developing their specific products. This can be a tough balancing act: too much centralization can result in slow decision making, increased rime to market and conflict between product teams. Too little centralization can waste opportunities for leverage and can increase redundant and incompatible development. In this paper we explore an approach that is very similar to the traditional notion of cooperative organizations. We show how product teams are organized into a software cooperative, and examine the key roles that support this organizational model. We reason about why this model is successful. We also show how this organizational model is facilitated by an explicit software architecture, and by a specific software configuration management approach.
C1 Hewlett Packard, Prod Generat Consulting, Palo Alto, CA 94304 USA.
RP Toft, P (reprint author), Hewlett Packard, Prod Generat Consulting, Palo Alto, CA 94304 USA.
CR DiBona C, 1999, OPEN SOURCES VOICES
   Karlsson E.A., 1995, SOFTWARE REUSE HOLIS
   U WISCONSIN CTR COOP
   TRUE SOFTWARE WEB PA
NR 4
TC 6
Z9 6
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 111
EP 132
PG 22
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500006
ER

PT S
AU Maccari, A
   Riva, C
AF Maccari, A
   Riva, C
BE VanderLinden, F
TI Architectural evolution of legacy product families
SO SOFTWARE PRODUCT-FAMILY ENGINEERING
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 4th International Workshop on Product Family Engineering (PFE-4)
CY OCT 03-05, 2001
CL BILBAO, SPAIN
SP European Ind
AB Recent research has focused on the concept of product family architecture. We address the more specific case of legacy product families, whose life spans across several years and product generations.
   We illustrate the method we use to describe legacy product family architecture and manage its evolution. To describe of the family architecture we use two separate documents. The reference architecture, which describes the abstract architecture that is instantiated in every product, and contains architecturally significant rules for adding new components to the system. And the configuration architecture, which maps the product family features into the various products, thus, allowing to model commonality and variability.
   The concept of a family is an abstraction that automatically generates a new layer in every product. This layer includes all the software that is common to other products in the family, and is, naturally, less prone to change than the layer constituted by software which is specific to the product.
   In certain domains like mobile telecommunications, when new products are added to the family, they tend to share most of the stable features that belong to legacy products. This phenomenon abstracts the issues of architectural evolution from the single products to the entire family scope.
   We also sketch the process we follow to maintain the documents that model the product family architecture. Our approach combines reverse and forward architecting activities, and is currently applied in Nokia Mobile Phones. Research on the issues of architectural modelling is still insufficient: we propose some hints for future work.
C1 Nokia Res Ctr, Nokia Grp, FIN-00045 Helsinki, Finland.
RP Maccari, A (reprint author), Nokia Res Ctr, Nokia Grp, POB 407, FIN-00045 Helsinki, Finland.
CR Cockburn A., 2000, WRITING EFFECTIVE US
   KUUSELA J, 1999, SOFTWARE ARCHITECTUR
   LORENTSEN L, 2001, WORKSH FEAT INT COMP
   RAN A, 2000, SOFTWARE ARCHITECTUR
   RIVA C, 2000, P 7 WORK C REV ENG W
   RIVA C, 2001, 1 INT WORKSH DESCR S
   VANDERLINDEN F, 1951, SPRINGER LNCS
NR 7
TC 5
Z9 5
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43659-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2290
BP 64
EP 69
PG 6
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering
SC Computer Science
GA BW19H
UT WOS:000181140900006
ER

PT J
AU Wagner, SM
   Silveira-Camargos, V
AF Wagner, Stephan M.
   Silveira-Camargos, Victor
TI Decision model for the application of just-in-sequence
SO INTERNATIONAL JOURNAL OF PRODUCTION RESEARCH
LA English
DT Article
DE just-in-time; just-in-sequence; variety; logistics costs; parts
   selection; automotive
ID SUPPLY CHAIN; MASS CUSTOMIZATION; PRODUCT VARIETY; ASSEMBLY LINES; TIME;
   INVENTORY; COST; PERFORMANCE; FRAMEWORK; INDUSTRY
AB An increasing number of module variants pose a challenge for just-in-time (JIT) production systems. As a consequence of managing rising variety-driven complexity costs, sophisticated logistics concepts such as just-in-sequence (JIS) have grown in importance over the last years. Switching to JIS sourcing of modules with many variants is often indispensable in order to enable the cost-efficient production of customised products, foremost in the automotive industry. The main goal of this research is to provide a framework to determine under which circumstances switching from JIT to JIS is most advantageous. For this purpose a module selection framework as well as a logistics costs function model of the production system is developed. Often only considered as a refinement of JIT, we strive to establish JIS as a logistics concept of equal weight.
C1 [Wagner, Stephan M.; Silveira-Camargos, Victor] Swiss Fed Inst Technol, Dept Management Technol & Econ, CH-8092 Zurich, Switzerland.
RP Wagner, SM (reprint author), Swiss Fed Inst Technol, Dept Management Technol & Econ, Scheuchzerstr 7, CH-8092 Zurich, Switzerland.
EM stwagner@ethz.ch
RI Wagner, Stephan/A-8971-2012
CR Aigbedo H, 1997, INT J PROD RES, V35, P2543, DOI 10.1080/002075497194651
   Aigbedo H, 2007, EUR J OPER RES, V181, P704, DOI 10.1016/j.ejor.2006.06.037
   Boutellier R., 2003, BUSINESS ENG, P223
   Boysen N, 2008, OR SPECTRUM, V30, P611, DOI 10.1007/s00291-007-0095-2
   Cavinato J. L., 1992, J BUSINESS LOGISTICS, V13, P285
   Choi T. Y., 1996, J OPERATIONS MANAGEM, V14, P333, DOI DOI 10.1016/S0272-6963(96)00091-5
   Chopra S., 2010, SUPPLY CHAIN MANAGEM
   da Cunha C, 2007, IEEE T AUTOM SCI ENG, V4, P350, DOI 10.1109/TASE.2006.887160
   Das A., 1997, INT J PHYS DISTRIB, V27, P244, DOI 10.1108/09600039710170601
   Dickie HF, 1951, FACTORY MANAGEMENT M, V6, P92
   Fandel G., 1989, Z BETRIEBSWIRT, V59, P55
   Fisher ML, 1997, HARVARD BUS REV, V75, P105
   Fredriksson P., 2002, EUROPEAN J PURCHASIN, V8, P221, DOI 10.1016/S0969-7012(02)00018-7
   Goh M. K. H., 2008, ASIAN J MANAGEMENT C, V5, P57
   Graf H., 2007, RECONFIGURABLE MANUF, P423
   Graf H., 2004, SUPPLY CHAIN MANAG, P55
   Gumuc M., 2004, Journal of Business Logistics, V25
   GUNASEKARAN A, 1993, INT J PROD ECON, V32, P23, DOI 10.1016/0925-5273(93)90005-6
   Gunasekaran A, 2004, INT J PROD ECON, V87, P333, DOI 10.1016/j.ijpe.2003.08.003
   Handfield R. B., 1993, Journal of Operations Management, V11, DOI 10.1016/0272-6963(93)90005-A
   Hill T., 2000, OPERATIONS MANAGEMEN
   Holweg M., 2004, 2 CENTURY
   Huttmeir A, 2009, INT J PROD ECON, V118, P501, DOI 10.1016/j.ijpe.2008.12.014
   Junghanns T., 2004, NUTZENPOTENTIALE BEN
   Kochan A, 2006, ASSEMBLY AUTOM, V26, P111, DOI 10.1108/01445150610658086
   Larsson A, 2002, INT J URBAN REGIONAL, V26, P767, DOI 10.1111/1468-2427.00417
   LEE HL, 1992, SLOAN MANAGE REV, V33, P65
   Liker J., 2000, SLOAN MANAGE REV, V41, P81
   Lindner K, 2008, EVAKYUERUNG STRATEGI
   Lulko D., 2003, ACTIONLINE      0414, P14
   MacDuffie JP, 1996, MANAGE SCI, V42, P350, DOI 10.1287/mnsc.42.3.350
   MILTENBURG J, 1993, INT J PROD ECON, V30-1, P195, DOI 10.1016/0925-5273(93)90091-X
   Mixer K., 2003, AMR RES         1114
   Monden Y., 2004, TOYOTA MANAGEMENT SY
   Nyhuis P., 2006, CIRP ANN-MANUF TECHN, V53, P371
   Ohno T, 1988, TOYOTA PRODUCTION SY
   Panichi M., 1996, WIRTSCHAFTLICHKEITSA
   Pil F. K., 2000, AM WORKPLACE SKILLS, P137
   Pil FK, 2004, INTERFACES, V34, P394, DOI 10.1287/inte.1040.0092
   Pine J. B., 1999, MASS CUSTOMIZATION N
   Pires R. I. S., 2008, SUPPLY CHAIN MANAG, V13, P328
   Poiger M., 2008, PRAKTISCHE ANWENDUNG, P133, DOI 10.1007/978-3-8349-9806-4_9
   Richardson H., 2004, OUTSOURCED LOGI 0401
   Roder A, 2006, EUR J OPER RES, V169, P1010, DOI 10.1016/j.ejor.2005.02.006
   Rosendahl F., 2004, VARIANTENBEHERRSCHUN, P191, DOI 10.1007/978-3-642-18947-0_11
   Schaffer J., 2008, BUILT ORDER ROAD 5 D, P155, DOI 10.1007/978-1-84800-225-8_9
   Shioji H., 2000, P 5 INT S LOG 12 15
   Silveira-Camargos V, 2005, JUST IN SEQUENCE ALS
   SRINIVASAN K, 1994, MANAGE SCI, V40, P1291, DOI 10.1287/mnsc.40.10.1291
   Stevenson M, 2005, INT J PROD RES, V43, P869, DOI 10.1080/0020754042000298520
   SUGIMORI Y, 1977, INT J PROD RES, V15, P553, DOI 10.1080/00207547708943149
   Thun J. H., 2007, LOGISTIK MANAGEMENT, V9, P34
   Thun J-H, 2007, J OPER LOGIST, V1, P1
   Toth M., 2008, BUILT ORDER ROAD 5 D, P297, DOI 10.1007/978-1-84800-225-8_17
   Trebilcock B., 2006, MODERN MAT HAND 0101
   Tsoi SK, 2003, EXPERT SYST APPL, V25, P123, DOI 10.1016/S0957-4174(03)00012-5
   Wagner S. M., 2006, Journal of Purchasing and Supply Management, V12, DOI 10.1016/j.pursup.2007.01.004
   WEBER CA, 1991, EUR J OPER RES, V50, P2, DOI 10.1016/0377-2217(91)90033-R
   Werner S, 2003, ROBOT CIM-INT MANUF, V19, P107, DOI 10.1016/S0736-5845(02)00067-4
   Wiendahl H.-P., 2004, VARIANTENBEHERRSCHUN
   Wildemann H., 2001, JUST IN TIME KONZEPT
NR 61
TC 5
Z9 5
PU TAYLOR & FRANCIS LTD
PI ABINGDON
PA 4 PARK SQUARE, MILTON PARK, ABINGDON OX14 4RN, OXON, ENGLAND
SN 0020-7543
J9 INT J PROD RES
JI Int. J. Prod. Res.
PY 2011
VL 49
IS 19
BP 5713
EP 5736
DI 10.1080/00207543.2010.505216
PG 24
WC Engineering, Industrial; Engineering, Manufacturing; Operations Research
   & Management Science
SC Engineering; Operations Research & Management Science
GA 886ZU
UT WOS:000299895300005
ER

PT B
AU Coriat, M
   Jourdan, J
   Boisbourdin, F
AF Coriat, M
   Jourdan, J
   Boisbourdin, F
BE Donohoe, P
TI The SPLIT method - Building product lines for software-intensive systems
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE product line requirements; product line architecture; product line
   component; product line process; product line traceability; application
   derivation; UML
AB This paper presents SPLIT (software product line integrated technology), an experimental method that helps Thomson-CSF and Alcatel to define and build product lines. SPLIT is organized as a global framework to help engineer product lines of software intensive systems. In this context the paper focuses on three themes: product line requirements (Cloud), product line architecture (Daisy), and product line process (Wheel). Although SPLIT proposes models independently of the notation used for their description. in this paper we have illustrated the approach by the use of the unified modeling language (UML).
C1 Alcatel Thomson CSF, Common Res Lab, LCAT, F-91404 Orsay, France.
RP Coriat, M (reprint author), Alcatel Thomson CSF, Common Res Lab, LCAT, Domaine Corbeville, F-91404 Orsay, France.
CR Ambler S., 1998, PROCESS PATTERNS BUI
   BASS L, 2000, CMUSEI2000TR002 SEI
   Bass L., 1998, SOFTWARE ARCHITECTUR
   BROOKS F, 1995, MYTHICAL MAN MOUTH
   COPLIEN JO, 1997, IEEE SOFTWARE, P36
   CORIAT M, 1999, OOPSLA 99 WORKSH OBJ
   Davis A., 1996, USING REQUIREMENTS M
   DONNAN G, 1999, SOFTWARE ARCHITECTUR
   Fayad M, 1999, BUILDING APPL FRAMEW
   FORMAN IR, 1998, PUTING METACLASSES W
   Fowler M., 1997, ANAL PATTERNS REUSAB
   Gamma E, 1995, DESIGN PATTERNS ELEM, V1st
   Graham I., 1997, OPEN PROCESS SPECIFI
   HENDERSONSELLER. B, 1999, TAILORING PROCESS FO
   *IEEE WORK GROUP, 1999, REC PRACT ARCH DESCR, P1471
   JACOBSON I, 1997, SOFTWARE REUSE ARCH
   JOURDAN J, 2000, DGARSTD 00       MAR
   Kang K., 1990, CMUSEI90TR21
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   MCCABE R, 1993, SPC92019CMC STARS
   *OMG, 1999, UN MOD LANG SPEC VER
   Rivieres J. D., 1991, ART METAOBJECT PROTO
   SIMS O, 1994, BUSINESS OBJECTS DEL
   Vici A. D., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685741
NR 24
TC 4
Z9 4
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 147
EP 166
PG 20
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500008
ER

PT B
AU Stoermer, C
   O'Brien, L
   Verhoef, C
AF Stoermer, C
   O'Brien, L
   Verhoef, C
BE VanDeursen, A
   Burd, E
TI Practice patterns for architecture reconstruction
SO NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS
LA English
DT Proceedings Paper
CT 9th Working Conference on Reverse Engineering
CY OCT 29-NOV 01, 2002
CL RICHMOND, VA
SP Reengn Forum, Virginia Commonwealth Univ, IEEE Comp Soc, Tech Council Software Engn
DE architecture; architecture reconstruction; architecture views;
   components; product lines; practice patterns; quality attributes
ID RECOVERY
AB Architecture reconstruction embodies benefits for commercial organizations. Reconstructing or recovering the architecture of software systems is primarily driven by the increased awareness of software architectures as a blueprint for systems and the resulting central role of architectures in development paradigms, like software product lines and component-based systems. This is especially the case for organizations that consciously want to migrate towards software architectures paradigms and enforce them in their software development life-cycle. This paper introduces practice patterns for architecture reconstruction, which offer common problem/solution pairs to strategically apply architecture reconstruction at commercial organizations. Based on an investigation of already developed and presented reconstruction approaches, the paper describes deficiencies that have been uncovered in several practice pattern's solution space and proposes improvements.
C1 Robert Bosch Corp, Pittsburgh, PA 15213 USA.
RP Stoermer, C (reprint author), Robert Bosch Corp, 4500 5th Ave, Pittsburgh, PA 15213 USA.
EM cstoerme@sei.cmu.edu; lob@sei.cmu.edu; x@cs.vu.nl
CR Alexander C., 1979, TIMELESS WAY BUILDIN
   BOWMAN T, 1999, INT C SOFTW ENG LOS
   Buschmann F., 1996, PATTERN ORIENTED SOF
   Clements P., 2002, DOCUMENTING SOFTWARE
   Clements P, 2002, SOFTWARE PRODUCT LIN
   DOUGLASS C, 1992, INT J TIME CRITICAL, V4
   Eixelsberger W, 1998, PROC INT CONF SOFTW, P508, DOI 10.1109/ICSE.1998.671617
   Etzioni A., 1964, MODERN ORG
   Feijs L., 1998, COMMUN ACM, V41, P73, DOI 10.1145/290133.290151
   Feijs LMG, 1999, SCI COMPUT PROGRAM, V33, P163, DOI 10.1016/S0167-6423(98)00007-0
   FEIJS LMG, 1994, THEORY RELATIONS ITS
   FEIJS LMG, 1999, INT J COMPUT MATH, V70, P57
   Finnigan PJ, 1997, IBM SYST J, V36, P564
   GUO G, 1999, P 1 WORK IFIP C SOFT, P225
   HARRIS DR, 1995, P 2 WORK C REV ENG
   HARRIS R, 1995, INT C SOFTWARE ENG, P186
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   JONES C, 1998, YEAR 2000 PROBLEM QU
   Kazman R., 1999, J AUTOMATED SOFTWARE, V6, P107, DOI DOI 10.1023/A:1008781513258
   KOUTSOFIOS E, 1992, DRAWING GRAPHS DOT T
   Krikhaar R., 1999, THESIS U AMSTERDAM
   Kruchten P., 1995, IEEE SOFTWARE, V12
   Laine P. K., 2001, Proceedings Working IEEE/IFIP Conference on Software Architecture, DOI 10.1109/WICSA.2001.948400
   LAMMEL R, 2001, IEEE SOFTWARE, P78
   Lammel R, 2001, SOFTWARE PRACT EXPER, V31, P1395, DOI 10.1002/spe.423
   LASSING N, 2002, THESIS VRIJE U AMSTE
   MENDONCA NC, 2001, SWARM FOR 8 WORK C R
   Riva C., 2000, Proceedings Seventh Working Conference on Reverse Engineering, DOI 10.1109/WCRE.2000.891451
   Sartipi K, 2001, PROC IEEE INT CONF S, P408, DOI 10.1109/ICSM.2001.972754
   Storey Margaret-Anne, 2001, P INT WORKSH PROGR C
   van den Brand M, 1998, PROG COMPREHEN, P108, DOI 10.1109/WPC.1998.693325
   Wallnau K., 2002, BUILDING SYSTEMS COM
   RIGI TOOL
   PORTABLE BOOKSHELF
   SHRIMP VIEWS
   KLOCWORK INSIGHT
NR 36
TC 4
Z9 4
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1799-4
PY 2002
BP 151
EP 160
DI 10.1109/WCRE.2002.1173073
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BV67S
UT WOS:000179731500015
ER

PT S
AU Dabholkar, A
   Gokhale, A
AF Dabholkar, Akshay
   Gokhale, Aniruddha
GP IEEE
TI An Approach to Middleware Specialization for Cyber Physical Systems
SO ICDCS: 2009 INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS
   WORKSHOPS
SE IEEE International Conference on Distributed Computing Systems Workshops
LA English
DT Proceedings Paper
CT 29th IEEE International Conference on Distributed Computing Systems
CY JUN 22-26, 2009
CL Montreal, CANADA
SP IEEE
DE Architecture and infrastructure; FOSD; middleware specialization;
   features; annotations
ID SOFTWARE PRODUCT LINES; OBJECTS
AB Contemporary computing infrastructure, such as networking stacks, OS and middleware, are made up of layers of software functionality that have evolved over decades to support the broadest range of applications. The feature-richness and the layers of functionality, however, tend to be excessive and a source of performance overhead for Cyber-physical Systems (CPS). Yet it is necessary to leverage the decades of proven patterns and principles in these infrastructures. This paper presents an approach to systematically specialize general-purpose middleware used to host CPS. Our approach is based on the principles of Feature-Oriented Software Development (FOSD), which requires deducing an algebraic structure of contemporary middleware based on a higher level of abstraction of features. The paper showcase how Origami matrices and generative programming can play a key role in realizing the specializations. The paper concludes by delving in to future open areas of middleware specialization research.
C1 [Dabholkar, Akshay; Gokhale, Aniruddha] Vanderbilt Univ, Dept EECS, Nashville, TN 37235 USA.
RP Dabholkar, A (reprint author), Vanderbilt Univ, Dept EECS, 221 Kirkland Hall, Nashville, TN 37235 USA.
EM aky@dre.vanderbilt.edu; gokhale@dre.vanderbilt.edu
CR Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   BLAIR GS, 1998, P IFIP INT C DISTR S, P191
   CHAKRAVARTHY V, 2008, AOSD 08, P108
   DEMIR OE, 2007, AOSD 07, P25
   HATCLIFF J, 1998, PARTIAL EVALUATION P, V1706, P20
   HUNLETH F, 2002, P JOINT C LANG COMP, P38
   Kastner Christian, 2008, 2008 ACM/IEEE 30th International Conference on Software Engineering. ICSE'08, DOI 10.1145/1368088.1368131
   KAUL D, 2008, AUTOMATING MIDDLEWAR
   Kiczales G., 1997, P EUR C OBJ OR PROGR, P220, DOI DOI 10.1007/BF60053381
   KRISHNA A, 2006, P EUROSYS 2006 LEUV, P205, DOI 10.1145/1217935.1217955
   LEMEUR AF, 2004, HIGHER ORDER SYMBOLI, V17
   Liu J., 2006, P INT C SOFTW ENG IC, P112, DOI 10.1145/1134285.1134303
   Lohmann D, 2006, LECT NOTES COMPUT SC, V4242, P227
   Object Management Group, 2005, REAL TIM CORBA SPEC
   PEARSON T, 2005, SAVE TIME MONEY COTS
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Schmidt D.C., 2002, IEEE DISTRIBUTED SYS, V3
   STANKOVIC JA, 2004, EMSOFT 04, P165
   ZHANG C, 2005, AOSD 05, P63
   ZHANG C, 2005, P 6 INT ACM IFIP USE, P314
   ZHANG R, 2002, P INT C DISTR COMP S
NR 21
TC 4
Z9 4
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
SN 1545-0678
BN 978-1-4244-4446-5
J9 IEEE INT CON DIS
PY 2009
BP 73
EP 79
PG 7
WC Computer Science, Hardware & Architecture; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA BPK75
UT WOS:000279101600012
ER

PT B
AU Lee, K
   Kang, KC
   Koh, E
   Chae, W
   Kim, B
   Choi, BW
AF Lee, K
   Kang, KC
   Koh, E
   Chae, W
   Kim, B
   Choi, BW
BE Donohoe, P
TI Domain-oriented engineering of elevator control software - A product
   line practice
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE domain engineering; elevator control software; product line practice;
   verification and validation of embedded software; productivity;
   maintainability; reliability
AB Development and maintenance of embedded control software has been a difficult challenge for the manufacturing industry because of the diversity of customers' needs, rapidly changing market requirements, and the quick response of market competition. LG Industrial Systems Co. Ltd. (LGIS), one of Korea's leading suppliers of elevator control systems, has been faced with the same difficulty in the development and maintenance of elevator control software (ECS). To help LGIS we have adopted a domain-oriented approach for reuse, and verification and validation technology for improving software quality. We have found that we can reduce maintenance costs drastically as the software is developed by utilizing reusable and adaptable components that can easily accommodate contextual as well as requirement changes, and have verified and validated ECS in the early phase of development.
C1 Pohang Univ Sci & Technol, POSTECH, Dept Comp Sci & Engn, Pohang 790784, Kyoungbuk, South Korea.
RP Lee, K (reprint author), Pohang Univ Sci & Technol, POSTECH, Dept Comp Sci & Engn, San 31, Pohang 790784, Kyoungbuk, South Korea.
CR Bassett P.G., 1997, FRAMING SOFTWARE REU
   BATORY D, 1995, ACM SIGSOFT S SOFTW
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Frakes W., 1997, Proceedings. 17th International Conference of the Chilean Computer Science Society (Cat. No.97TB100194), DOI 10.1109/SCCC.1997.636929
   Garlan D., 1996, SOFTWARE ARCHITECTUR
   Kang K., 1990, CMUSEI90TR21
   Kang KC, 1998, SOFTWARE PRACT EXPER, V28, P445, DOI 10.1002/(SICI)1097-024X(19980410)28:4<445::AID-SPE166>3.3.CO;2-A
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang KC, 1999, SOFTWARE PRACT EXPER, V29, P875, DOI 10.1002/(SICI)1097-024X(199908)29:10<875::AID-SPE262>3.0.CO;2-W
   Ko KI, 1999, IEICE T INF SYST, VE82D, P398
   LEE K, IN PRESS SOFTWARE PR
   METTALA E, 1992, CMUSEI92SR9
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17
   Prieto-Diaz R., 1987, Proceedings of COMPSAC 87. The Eleventh Annual International Computer Software and Applications Conference (Cat. No.87CH2447-1)
   SIMOS M, 1996, STARSVCA02500100 ODM
NR 15
TC 4
Z9 4
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 3
EP 22
PG 20
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500001
ER

PT S
AU Knauber, P
   Bermejo, J
   Bockle, G
   Leite, JCSD
   van der Linden, F
   Northrop, L
   Stark, M
   Weiss, DM
AF Knauber, P
   Bermejo, J
   Bockle, G
   Leite, JCSD
   van der Linden, F
   Northrop, L
   Stark, M
   Weiss, DM
BE VanderLinden, F
TI Quantifying product line benefits
SO SOFTWARE PRODUCT-FAMILY ENGINEERING
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 4th International Workshop on Product Family Engineering (PFE-4)
CY OCT 03-05, 2001
CL BILBAO, SPAIN
SP European Ind
AB Software product lines promise benefits like development and maintenance effort reduction, time to market decrease, and quality improvement, all resulting from planned and systematic reuse of common core assets. However, very little quantitative data has been measured so far to prove these promises. This paper formulates and discusses 7 hypotheses on how the promised advantages would look like in a quantitative way. It is meant to be a starting point for discussion on how to quantify which product line benefits and how they can be measured.
C1 PUC Rio, Brasilia, DF, Brazil.
   Univ Maryland, College Pk, MD 20742 USA.
CR BOCKLE G, PROD FAM DEV DAGST S
   COHEN S, P 2 ICSE WORKSH SOFT
   GACEK C, 01301E IESE
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   Poulin JS, 1997, MEASURING SOFTWARE R
   Reifer Donald J., 1997, PRACTICAL SOFTWARE R
NR 6
TC 4
Z9 4
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43659-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2290
BP 155
EP 163
PG 9
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering
SC Computer Science
GA BW19H
UT WOS:000181140900014
ER

PT S
AU Bayer, J
   Muthig, D
   Widen, T
AF Bayer, J
   Muthig, D
   Widen, T
BE Czarnecki, K
   Eisenecker, UW
TI Customizable domain analysis
SO GENERATIVE AND COMPONENT-BASED SOFTWARE ENGINEERING, PROCEEDINGS
SE Lecture Notes in Computer Science
LA English
DT Article; Proceedings Paper
CT 1st International Symposium on Generative and Component-Based Software
   Engineering (GCSE'99)
CY SEP 28-30, 1999
CL ERFURT, GERMANY
SP Gesell Informat, STJA Fdn
DE domain analysis; domain engineering; product line software engineering
AB Generative and Component-Based Software Engineering are approaches to reuse. Within both approaches the scope of reuse can vary between general purpose and application specific. We argue for seeping the reusable assets based on a product line.
   Domain analysis methods provide processes for determining the common and varying requirements for a product line. However, we experienced that existing methods have problems concerning applicability and instantiation support. Therefore, we have developed the Customizable Domain Analysis (CDA) method.
   CDA is customizable to the project context where it will be applied. This ensures that the method and workproducts used for modeling are appropriate for the specific needs. CDA also provides full instantiation support for specifying systems in the product line.
C1 Fraunhofer Inst Expt Sofware Engn, IESE, D-67661 Kaiserslautern, Germany.
RP Bayer, J (reprint author), Fraunhofer Inst Expt Sofware Engn, IESE, Sauerwiesen 6, D-67661 Kaiserslautern, Germany.
EM bayer@iese.fhg.de; muthig@iese.fhg.de; widen@iese.fhg.de
CR ARANGO G, 1991, DOMAIN ANAL SOFTWARE, P9
   Ardis MA, 1997, PROC INT CONF SOFTW, P649, DOI 10.1145/253228.253772
   Basili VR, 1994, ENCY SOFTWARE ENG, V1, P469
   BAYER J, 1999, S SOFTW REUS MAY
   BAYER J, 1999, UNPUB            MAY
   DEBAUD JM, 1998, P 3 INT SOFTW ARCH W
   deBaud J.-M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.840993
   FRAKES B, 1995, 7 ANN WORKSH SOFTW R
   Gomaa H., 1996, Automated Software Engineering, V3
   HIGGINS J, 1994, ADAGELOR9406A LOR FE
   Paulk MC, 1993, CMUSEI93TR024
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   *SOFTW ENG I, MOD BAS SOFTW ENG
   *SOFTW PROD CONS, 1993, SPC92019CMC
   *SOFTW PROD CONS S, 1993, REUS AD GUID VERS 02
   *SOFTW TECHN AD RE, 1996, STARSVCA02500100
   TRACZ W, 1992, ADAGEIBM9202 LOR FED
NR 17
TC 3
Z9 3
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-41172-0
J9 LECT NOTES COMPUT SC
PY 2000
VL 1799
BP 178
EP 194
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BT02U
UT WOS:000171691600014
ER

PT S
AU Salicki, S
   Farcet, N
AF Salicki, S
   Farcet, N
BE VanderLinden, F
TI Expression and usage of the variability in the software product lines
SO SOFTWARE PRODUCT-FAMILY ENGINEERING
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 4th International Workshop on Product Family Engineering (PFE-4)
CY OCT 03-05, 2001
CL BILBAO, SPAIN
SP European Ind
DE product line; variation points; decision model; derivation; variability;
   process; method
AB Software product lines are used by companies to provide a set of reusable software assets sharing common features that satisfy a market. Though a product line is based on the expression and the capitalization of afamily of similar systems, the differences between products must be identified and expressed in order to be able to build the applications by taking the good decisions. Today, even if the flexibility aspects are well covered, there isn't as many studies on variability description and usage. This paper presents a process, methods and techniques investigated in THALES (Research Center and Business Units) to express the variability between products and its usage to derive new products from the Software product line.
C1 THALES, Corp Res Labs, F-1404 Orsay, France.
RP Salicki, S (reprint author), THALES, Corp Res Labs, Domaine Corbeville, F-1404 Orsay, France.
CR Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   CORIAT M, 2000, 1 SOFTW PROD LIN C A
   ELKAIM W, 2000, SPLCI 1 SOFTW PROD L
   ELKAIM W, 1999, LCAT99862
   JCOBSON M, 1997, SOFTWARE REUSE ARCHI
   PREE W, DESIGN PATTERNS OBJE
   *STARS, 1993, CONC FRAM REUS PROC, V1
   VANDERLINDEN F, 1998, LNCS SPRINGER, V1429
NR 8
TC 3
Z9 3
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43659-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2290
BP 304
EP 318
PG 15
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering
SC Computer Science
GA BW19H
UT WOS:000181140900026
ER

PT J
AU Stuikys, V
   Damasevicius, R
AF Stuikys, Vytautas
   Damasevicius, Robertas
TI DESIGN OF ONTOLOGY-BASED GENERATIVE COMPONENTS USING ENRICHED FEATURE
   DIAGRAMS AND META-PROGRAMMING
SO INFORMATION TECHNOLOGY AND CONTROL
LA English
DT Article
DE feature diagram; generative component; domain ontology; product line;
   embedded software
ID OPTIMIZATION; POWER
AB A product line (PL) approach is emerging as the most promising design paradigm for embedded software design domain, Where a great variability of requirements and products exists. The implementation of the PL approach requires thorough domain analysis and domain modelling. We propose to represent embedded software components using Enriched Feature Diagrams (EFDs). EFDs are an extension of traditional Feature Diagrams (FDs) for explicit representation of domain variability enriched with contextualization and domain ontology. We Suggest to transform feature models described using EFDs into generative component specifications encoded using the meta-programming techniques. A case study from the embedded software specialization domain is presented.
C1 [Stuikys, Vytautas; Damasevicius, Robertas] Kaunas Univ Technol, Software Engn Dept, LT-51368 Kaunas, Lithuania.
RP Stuikys, V (reprint author), Kaunas Univ Technol, Software Engn Dept, Studentu 50, LT-51368 Kaunas, Lithuania.
CR Bailey B., 2005, TAXONOMIES DEV VERIF
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benini L, 2000, ACM T DES AUTOMAT EL, V5, P115, DOI 10.1145/335043.335044
   BEUCHE D, 2002, P INT IFIP TC10 WORK, P141
   CHEONG YC, 1999, P S SOFTW REUS SSR 9, P103, DOI 10.1145/303008.303043
   CHUNG EY, 2001, P INT S SYST SYNTH I, P153
   Clements P, 2002, SOFTWARE PRODUCT LIN
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Czarnecki K., 2006, P 10 INT SOFTW PROD, P41
   Damasevicius R, 2008, LECT NOTES COMPUT SC, V5292, P338, DOI 10.1007/978-3-540-88030-1_32
   ELSENECKER UW, 2000, GENERATIVE PROGRAMMI
   Flinn J., 1999, P 17 ACM S OP SYST P, P48, DOI 10.1145/319151.319155
   Guizzardi G, 2007, FRONTIERS ARTIFICIAL, VIV, P18
   JONES ND, 1993, PARTIAL EVALUATION A
   Kandemir M, 2001, IEEE T VLSI SYST, V9, P801, DOI 10.1109/92.974893
   KANG K, 1990, CMUSEI90TR2U
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   KANG KC, 2003, DOMAIN ORIENTED SYST
   Kiczales Gregor, 1997, LECT NOTES COMPUT SC, V1241, P220
   KIRNER R, 2006, 6 INT WORKSH WORST C
   KNOBLOCK T, 1998, ACM SIGPLAN NOTICES, V31, P215
   Krintz C., 2004, Proceedings of the 2004 International Symposium on Low Power Electronics and Design (IEEE Cat. No.04TH8758), DOI 10.1145/1013235.1013292
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   Lee S.-B., 2007, P 5 ACIS INT C SOFTW, P727
   Lindwer M., 2003, Proceedings Design, Automation and Test in Europe Conference and Exhibition
   MacGregor J., 2002, P INT WORKSH REQ ENG, P5
   McGreal R., 2004, ONLINE ED USING LEAR
   Mehta Huzefa, 1997, P INT S LOW POW EL D, P72, DOI 10.1145/263272.263286
   NYLAND L, FAST TRIGONOMETRIC F
   Peymandoust A., 2002, Proceedings 2002 Design, Automation and Test in Europe Conference and Exhibition, DOI 10.1109/DATE.2002.998432
   RAVI N, 2008, P 6 ANN IEEE INT C P, P224, DOI DOI 10.1109/PERCOM.2008.108
   Robak S., 2003, IEEE INT C WORKSH EN, P305
   Sagahyroon A., 2006, IEEE AS PAC C CIRC S, P1721
   Schobbens P.-Y., 2006, P 14 IEEE INT REQ EN, P136
   SHEARD T, 2001, LECT NOTES COMPUTER, V2196, P2
   Simunic T, 2000, PROC INT SYMP SYST, P193, DOI 10.1109/ISSS.2000.874049
   stuikys V., 2008, P WORLD C ED MULT HY, P2144
   Stuikys V, 2003, AMBIENT INTELLIGENCE: IMPACT ON EMBEDDED SYSTEM DESIGN, P229
   WONG PYH, 2006, THESIS U WARWICK UK
NR 40
TC 3
Z9 3
PU KAUNAS UNIV TECHNOLOGY
PI KAUNAS
PA KAUNAS UNIV TECHNOL, DEPT ELECTRONICS ENGINEERING, STUDENTU STR 50,
   KAUNAS, LT-51368, LITHUANIA
SN 1392-124X
J9 INF TECHNOL CONTROL
JI Inf. Technol. Control
PY 2008
VL 37
IS 4
BP 301
EP 310
PG 10
WC Automation & Control Systems; Computer Science, Artificial Intelligence;
   Computer Science, Information Systems
SC Automation & Control Systems; Computer Science
GA 389WS
UT WOS:000262126900005
ER

PT B
AU Lu, DD
   Lutz, RR
AF Lu, DD
   Lutz, RR
GP IEEE COMPUTER SOCIETY
   IEEE COMPUTER SOCIETY
TI Fault contribution trees for product families
SO 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING,
   PROCEEDINGS
LA English
DT Proceedings Paper
CT 13th International Symposium on Software Reliability Engineering
CY NOV 12-15, 2002
CL ANNAPOLIS, MD
SP IEEE Comp Soc, Tech Comm Software Engn, IEEE Reliabil Soc, IBM, Microsoft Res, Cigital
ID SOFTWARE REQUIREMENTS; REUSE
AB Software Fault Tree Analysis (SFTA) provides a structured way to reason about the safety or reliability of a software system. As such, SFTA is widely used in mission-critical applications to investigate contributing causes to possible hazards or failures. In this paper we propose an approach similar to SFTA for product families. The contribution of the paper is to define a top-down, tree-based analysis technique, the Fault Contribution Tree Analysis (FCTA), that operates on the results of a product family domain analysis and to describe a method by which the FCTA of a product family can serve as a reusable asset in the building of new members of the family. Specifically, we describe both the construction of the fault contribution tree for a product family (domain engineering) and the reuse of the appropriately pruned fault contribution tree for the analysis of a new member of the product family (application engineering). The paper describes several challenges to this approach, including evolution of the product family, handling of subfamilies, and distinguishing the limits of safe reuse of the FCTA, and suggests partial solutions to these issues as well as directions for future work. The paper illustrates the techniques with examples from applications to two product families.
C1 Iowa State Univ, Dept Comp Sci, Ames, IA 50010 USA.
RP Lu, DD (reprint author), Iowa State Univ, Dept Comp Sci, Ames, IA 50010 USA.
CR Ardis M, 2000, SOFTWARE PRACT EXPER, V30, P825, DOI 10.1002/(SICI)1097-024X(200006)30:7<825::AID-SPE322>3.0.CO;2-1
   ARDIS MA, 1997, INT C SOFTW ENG ICSE
   Clements P, 2001, SOFTWARE PRODUCT LIN
   DUGAN JB, 1999, P 10 INT S SOFTW REL, P223
   GOMAA H, 1995, J SYST SOFTWARE, V28, P189, DOI 10.1016/0164-1212(94)00056-S
   Hansen KM, 1998, IEEE T SOFTWARE ENG, V24, P573, DOI 10.1109/32.708570
   Kang KC, 1999, SOFTWARE PRACT EXPER, V29, P875, DOI 10.1002/(SICI)1097-024X(199908)29:10<875::AID-SPE262>3.0.CO;2-W
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   Lam W, 1998, ANN SOFTW ENG, V5, P253, DOI 10.1023/A:1018912105115
   Leveson N.G., 1995, SAFEWARE SYSTEM SAFE
   Lutz R. R., 1998, Proceedings Third International Conference on Requirement Engineering (Cat. No.98TB100219), DOI 10.1109/ICRE.1998.667805
   Lutz RR, 1997, ANN SOFTW ENG, V3, P459, DOI 10.1023/A:1018929719710
   Lutz RR, 2000, J SYST SOFTWARE, V53, P207, DOI 10.1016/S0164-1212(00)00012-1
   Raheja D., 1991, ASSURANCE TECHNOLOGI
   THOMPSON JM, P 5 IEEE INT S REQ E, P56
NR 15
TC 3
Z9 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1763-3
PY 2002
BP 231
EP 242
PG 12
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA BV66S
UT WOS:000179705100020
ER

PT S
AU Gomaa, H
   Gianturco, M
AF Gomaa, H
   Gianturco, M
BE Gacek, C
TI Domain modeling for World Wide Web based software product lines with UML
SO SOFTWARE REUSE: METHODS, TECHNIQUES, AND TOOLS, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 7th International Conference on Software Reuse (ICSR-7)
CY APR 15-19, 2002
CL AUSTIN, TEXAS
SP BigLever Software Inc, Dept Informat PUC-Rio, Fraunhofer IESE, Gener Programming, Op40 Inc, Semant Designs Inc, Sodalia, Univ Alberta, Dept Elect & Comp Engn, Univ Newcastle Upon Tyne, CS Dept, Univ Texas, Comp Sci Dept
AB This paper describes a domain modeling approach using the Unified Modeling Language (UML) for modeling software product lines of World Wide Web (WWW) based applications, thereby permitting reuse of domain requirements and analysis models. The paper describes how the various views of the UML, in particular the use case modeling view and the static modeling view, may be used for modeling such product lines and illustrates this with a domain modeling exercise. It also describes how the feature model can be integrated with the UML for modeling product lines.
C1 George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
   Strateg Informat Solut Inc, Fairfax, VA 22030 USA.
RP Gomaa, H (reprint author), George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
CR ATKINSON C, 2000, P 1 INT SOFTW PROD L
   Booch G., 1998, UNIFIED MODELING LAN
   COHEN S, 1998, P IEEE INT C SOFTW R
   DEBAUD JM, 1999, P IEEE INT C SOFTW E
   GOMAA H, 2001, P WORKSH SOFTW PROD
   Gomaa H., 2000, DESIGNING CONCURRENT
   GOMAA H, 1995, J SYSTEMS SOFTWA MAY
   GOMAA H, 2000, P IEEE INT C SOFTW R
   Gomaa H., 1996, Automated Software Engineering, V3
   GRISS M, 1998, P INT C SOFTW REUS V
   JACOBSON I, 1997, SOFTWARE REUS ARCHIT
   KANG K, 1990, CMUSEI90TR21 SOFTW E
   KEEPENCE B, 1999, IEEE SOFTWARE    JUL
   MORISIO M, 2000, 15 IEEE UAT SOFTW EN
   Rumbaugh J., 1999, UNIFIED MODELING LAN
NR 15
TC 3
Z9 3
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43483-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2319
BP 78
EP 92
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BW25Y
UT WOS:000181349700006
ER

PT J
AU Stuikys, V
   Damasevicius, R
   Targamadze, A
AF Stuikys, Vytautas
   Damasevicius, Robertas
   Targamadze, Aleksandras
TI A MODEL-DRIVEN VIEW TO META-PROGRAM DEVELOPMENT PROCESS
SO INFORMATION TECHNOLOGY AND CONTROL
LA English
DT Article
DE meta-programming; model-driven development; meta-program; meta-model
ID FEATURE DIAGRAMS; PRODUCT LINES; DESIGN; VARIABILITY
AB We propose a general framework for the model-driven analysis of the meta-program development processes Our approach considers 1) a hierarchy of related meta-models and models that are represented at different levels of abstractions for problem and solution domains, and 2) vertical transformations of the introduced meta-models and models for lowering the abstraction level of their representation until the executable specification The framework provides a theoretical background to understand the meta-program development process and creates well-grounded pre-conditions for the semi-automatic design of meta-programs. We also formulate the requirements for tools to support such automation.
C1 [Stuikys, Vytautas; Damasevicius, Robertas; Targamadze, Aleksandras] Kaunas Univ Technol, Software Engn Dept, LT-51368 Kaunas, Lithuania.
RP Stuikys, V (reprint author), Kaunas Univ Technol, Software Engn Dept, Studentu 50-415, LT-51368 Kaunas, Lithuania.
CR Batory D, 2006, IBM SYST J, V45, P527
   Bosch J, 2000, DESIGN USE SOFTWARE
   Butler G, 2001, PROC INT CONF SOFTW, P760, DOI 10.1109/ICSE.2001.919165
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.225
   Damasevicius R, 2008, INF TECHNOL CONTROL, V37, P124
   Damasevicius R, 2008, LECT NOTES COMPUT SC, V5292, P338, DOI 10.1007/978-3-540-88030-1_32
   EBRAERT P, 2009, P 10 INT C FEAT INT, P107
   Gajski D., 1983, IEEE COMPUTER    DEC, P11
   GRUNSKE L, 2006, MODEL DRIVEN SOFTWAR, P91
   Hruby P, 1998, LECT NOTES COMPUT SC, V1543, P234
   ILEYMANS P, 2007, P SOFTW SERV VAR MAN, P1
   Janota M., 2007, P 11 INT C SOFTW PRO, P13
   Kleppe A.G., 2003, MDA EXPLAINED MODEL
   Laguna Miguel A, 2009, Proceedings of the 2009 35th Euromicro Conference on Software Engineering and Advanced Applications (SEAA 2009), DOI 10.1109/SEAA.2009.34
   Mens T., 2006, ELECT NOTES THEORETI, V152, P125, DOI DOI 10.1016/J.ENTCS.2005.10.021
   Morin B, 2009, LECT NOTES COMPUT SC, V5795, P690
   MUELLER W, 2006, P 4 INT C HARDW SOFT, P1, DOI 10.1145/1176254.1176255
   *OMG, OMG030601
   PERROUIN G, 2008, P 12 INT SOFTW PROD, P339
   Schmidt DC, 2006, IEEE COMPUT, V39, P25
   Schobbens P-Y, 2006, 14 IEEE INT C REQ EN, P136, DOI [10.1109/RE.2006.23, DOI 10.1109/RE.2006.23]
   Stuikys V, 2008, INF TECHNOL CONTROL, V37, P301
   Stuikys V, 2002, SYSTEM ON CHIP DESIGN LANGUAGES, P235
   Stuikys V, 2009, INF TECHNOL CONTROL, V38, P108
   Stuikys V, 2009, INF TECHNOL CONTROL, V38, P179
   Trujillo S, 2007, PROC INT CONF SOFTW, P44
   VONDERMASSEN T, LECT NOTES COMPUTER, V3014, P168
   WESTFECHTEL B, 2009, EUR C MOD DRIV ARCH, P57
   Ziadi T., 2006, SOFTWARE PRODUCT LIN, P557, DOI 10.1007/978-3-540-33253-4_15
NR 30
TC 3
Z9 3
PU KAUNAS UNIV TECHNOLOGY
PI KAUNAS
PA KAUNAS UNIV TECHNOL, DEPT ELECTRONICS ENGINEERING, STUDENTU STR 50,
   KAUNAS, LT-51368, LITHUANIA
SN 1392-124X
J9 INF TECHNOL CONTROL
JI Inf. Technol. Control
PY 2010
VL 39
IS 2
BP 89
EP 99
PG 11
WC Automation & Control Systems; Computer Science, Artificial Intelligence;
   Computer Science, Information Systems
SC Automation & Control Systems; Computer Science
GA 620NS
UT WOS:000279507200001
ER

PT J
AU Chang, SH
   Tseng, HE
AF Chang, Shu-Hsuan
   Tseng, Hwai-En
TI Fuzzy Topsis Decision Method for Configuration Management
SO INTERNATIONAL JOURNAL OF INDUSTRIAL ENGINEERING-THEORY APPLICATIONS AND
   PRACTICE
LA English
DT Article
DE Mass customization; Configuration management; QFD; Fuzzy set theory;
   TOPSIS
AB Mass customization refers to an environment in which reducing quantities and increasing varieties of products are being manufactured. A product configuration is defined as an aggregation of parts whose functions and performance parameters must be defined and controlled to achieve the overall performance of a system or product. Since the product configurations would be varied based on consumer needs, selecting effective product configurations from among several alternatives is a challenge during the mass customization design stage. This study developed a structural model which combines a fuzzy quality function deployment with a fuzzy Technique for Order Performance by Similarity to Ideal Solution (TOPSIS) to solve this problem. The configuration alternatives ranked using the proposed method can provide a useful reference for decision makers in implementing configuration management.
   Significance: In mass customization environments, configuration management is crucial to product development. Inappropriate PC selection results in poor product quality and increases the development time and cost. The decision model proposed in this study provides a more realistic approach for selecting configuration alternatives in developing design strategies.
EM shc@cc.ncue.edu.tw
FU National Science Council, Taiwan [NSC-93-2516-S-018-011,
   NSC-94-2516-S-018-014]
FX This research is partially supported by the National Science Council,
   Taiwan, under grants NSC-93-2516-S-018-011 and NSC-94-2516-S-018-014.
   Special thanks are extended to the CNC Mechanical Lathe Tool Company in
   Taiwan (http://www.llcnclathe.com/index.asp), which provided the
   empirical data to assist the research in this paper. The authors also
   wish to express appreciation to an anonymous referee's valuable comments
   on an earlier version of this paper and Dr. Cheryl Rutledge for her
   editorial assistance.
CR Chan LK, 2005, OMEGA-INT J MANAGE S, V33, P119, DOI 10.1016/j.omega.2004.03.010
   Chan LK, 2002, EUR J OPER RES, V143, P463, DOI 10.1016/S0377-2217(02)00178-9
   Chen CT, 2000, FUZZY SET SYST, V114, P1, DOI 10.1016/S0165-0114(97)00377-1
   Chen S.J., 1992, FUZZY MULTIPLE ATTRI, P1992
   Hwang CL, 1981, MULTIPLE ATTRIBUTE D
   Jiao J, 2007, J INTELL MANUF, V18, P5, DOI 10.1007/s10845-007-0003-2
   Kaufmann A, 1975, INTRO THEORY FUZZY S
   KLIR FJ, 1995, FUZZY SETS FUZZY LOG
   Martin M., 2000, ASME DES ENG TECHN C
   Otto K.N., 2001, PRODUCT DESIGN TECHN
   Salvador F, 2004, INT J PROD ECON, V91, P273, DOI 10.1016/j.ijpe.2003.09.003
   Shen XX, 2001, J INTELL MANUF, V12, P65, DOI 10.1023/A:1008955630880
   Siddique Z, 2001, AI EDAM, V15, P91, DOI 10.1017/S0890060401152029
   Silveira G. D., 2001, INT J PROD ECON, V72, P1, DOI DOI 10.1016/S0925-5273(00)00079-7
   Tseng HE, 2006, INT J COMPUT INTEG M, V19, P716, DOI 10.1080/09511920500233616
   Tseng HE, 2005, EXPERT SYST APPL, V29, P913, DOI 10.1016/j.eswa.2005.06.026
   1995, ISO10007
NR 17
TC 2
Z9 2
PU UNIV CINCINNATI INDUSTRIAL ENGINEERING
PI CINCINNATI
PA UNIV CINCINNATI, CINCINNATI, OH 45221-0116 USA
SN 1943-670X
J9 INT J IND ENG-THEORY
JI Int. J. Ind. Eng.-Theory Appl. Pract.
PY 2008
VL 15
IS 3
BP 304
EP 313
PG 10
WC Engineering, Industrial; Engineering, Manufacturing
SC Engineering
GA V14DA
UT WOS:000207713900008
ER

PT J
AU Mohan, K
   Ramesh, B
AF Mohan, Kannan
   Ramesh, Balasubramaniam
TI Change management patterns in software product lines - Establishing
   effective change management practices to prevent uncontrolled evolution
   of the product platform
SO COMMUNICATIONS OF THE ACM
LA English
DT Article
C1 CUNY, Baruch Coll, Dept Comp Informat Syst, Zicklin Sch Business, New York, NY 10021 USA.
   Georgia State Univ, Dept Comp Informat Syst, Atlanta, GA 30303 USA.
RP Mohan, K (reprint author), CUNY, Baruch Coll, Dept Comp Informat Syst, Zicklin Sch Business, New York, NY 10021 USA.
EM kannan_mohan@baruch.cuny.edu; bramesh@cis.gsu.edu
RI Ramesh, Balasubramaniam/C-2565-2008
CR Clements P, 2002, SOFTWARE PRODUCT LIN
   COHEN SG, 1991, APPL FEATURE ORIENTE
   Kang K. C., 1990, FEATURE ORIENTED DOM
   KANG KC, 2002, IEEE SOFTWARE, V19, P4
   KRUEGER CW, 2002, P 2 PROD LIN C SPLC
   Larman C., 2002, APPL UML PATTERNS
   Lee JT, 1997, IEEE EXPERT, V12, P78, DOI 10.1109/64.592267
   MOHAN K, 2003, THESIS GEORGIA STATE
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Strauss A. L., 1990, BASICS QUALITATIVE R
NR 10
TC 2
Z9 2
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1515 BROADWAY, NEW YORK, NY 10036 USA
SN 0001-0782
J9 COMMUN ACM
JI Commun. ACM
PD DEC
PY 2006
VL 49
IS 12
BP 68
EP 72
DI 10.1145/1183236.1183269
PG 5
WC Computer Science, Hardware & Architecture; Computer Science, Software
   Engineering; Computer Science, Theory & Methods
SC Computer Science
GA 115YR
UT WOS:000242770200022
ER

PT B
AU Nascimento, LM
   de Almeida, ES
   Meira, SRDL
AF Nascimento, Leandro Marques
   de Almeida, Eduardo Santana
   de Lemos Meira, Silvio Romero
TI A Case Study in Software Product Lines - The Case of the Mobile Game
   Domain
SO PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND
   ADVANCED APPLICATIONS
LA English
DT Proceedings Paper
CT 34th EUROMICRO Conference on Software Engineering and Advanced
   Applications
CY SEP 03-05, 2008
CL Parma, ITALY
SP CPS, IEEE Comp Soc
DE software product line; case study; mobile game; core assets;
   variability; product map
AB Software Product Lines (SPL) processes are gradually being adopted by many companies in several domains. A particular domain where the adoption of such processes may bring relevant benefits is the mobile applications domain given the big diversity of handsets, although the characteristics of this domain usually create barriers to apply these processes in practice, such as, restrictions of memory size and processing power and different AN implementations by different manufacturers. In this context, this work presents briefly a practical approach to implement core assets in a SPL applied to the mobile game domain combining the good practices from the already published processes and describes in details a case study performed with the application of this approach, based on three different adventure mobile games. The results of the case study have shown the approach can be suitable for the domain in question.
C1 [Nascimento, Leandro Marques; de Almeida, Eduardo Santana; de Lemos Meira, Silvio Romero] Univ Fed Pernambuco, Recife, PE, Brazil.
RP Nascimento, LM (reprint author), Univ Fed Pernambuco, Recife, PE, Brazil.
EM lmn2@cin.ufpe.br; esa2@cin.ufpe.br; srlm@cin.ufpe.br
CR Almeida E. S., 2007, CRUISE COMPONENT REU
   ALVARO A, 2007, IEEE INT C INF REUS
   Anastasopoulos M., 2001, SSR 01, P109
   [Anonymous], JAVA ME PLATFORM MOS
   [Anonymous], PRODUCT LINE HALL FA
   ATKINSON C, 2000, 1 INT SOFTW PROD LIN, P289
   Basilis V, 1994, GOAL QUESTION METRIC, P528
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice
   CALBEIROS F, 2007, 1 WORKSH REF TOOLS W, P33
   CLEMENTS P, 2002, SOFTWARE PRODUCT LIN, P608
   GOMAA H, 2005, DESIGNING SOFTWARE P, P701
   Kang K., 1990, CMUSEI90TR21
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220
   Krueger C.W., 1992, ACM COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, DOI 10.1109/TSE.1976.233837
   Muthig D., 2004, 02504E IESE
   POHL K, 2005, SOFTWARE PRODUCT LIN, P468
   WEISS DM, 1999, SOFTWARE PRODUCT LIN, P426
   WHITE J, 2008, J BRAZILIAN COMPUTER, V14
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, P204
NR 20
TC 2
Z9 3
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 978-0-7695-3276-9
PY 2008
BP 43
EP 50
DI 10.1109/SEAA.2008.14
PG 8
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA BIV06
UT WOS:000262984400006
ER

PT B
AU Schach, SR
   Tomer, A
AF Schach, SR
   Tomer, A
BE Donohoe, P
TI Development/maintenance/reuse: Software evolution in product lines
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE artifact; evolution tree; propagation graph; software development;
   software evolution; software maintenance; software product line;
   software reuse
AB The evolution tree model is a two-dimensional model that describes how the versions of the artifacts of a software product evolve. The propagation graph is a data structure that can be used for effective control of the evolution of the artifacts of a software product. In this paper we extend the evolution tree model and propagation graph to handle the evolution of a software product line. Software product lines are characterized by large-scale reuse, especially of core assets. We show how a third dimension can be added to the evolution tree model to handle this reuse. In particular, the new model incorporates bidirectional reuse within product lines. That is, the new model can handle the transfer of an artifact from the con assets repository to a specific product (acquiring a core asset), as well as the transfer of a specific asset from a specific product to the core assets repository (mining an existing asset).
C1 Vanderbilt Univ, Nashville, TN 37240 USA.
RP Schach, SR (reprint author), Vanderbilt Univ, 221 Kirkland Hall, Nashville, TN 37240 USA.
CR [Anonymous], 1995, 12207 ISO IEC
   Boehm B, 1999, COMPUTER, V32, P111, DOI 10.1109/2.789755
   Boehm B. W., 1988, IEEE COMPUT, V21, P61
   CLEMENTS P, 1999, FRAMEWORK SOFTWARE P
   Jacobson I, 1999, UNIFIED SOFTWARE DEV
   MATSUMOTO Y, 1987, TUTORIAL SOFTWARE RE, P155
   ROYCE WW, 1989, P 11 INT C SOFTW ENG, P328
   Rumbaugh J., 1999, UNIFIED MODELING LAN
   Schach SR, 2000, J SOFTW MAINT-RES PR, V12, P25, DOI 10.1002/(SICI)1096-908X(200001/02)12:1<25::AID-SMR203>3.0.CO;2-2
   Schach S.R., 1999, CLASSICAL OBJECT ORI
   TOMER A, 2000, IN PRESS P 4 EUR C S
NR 11
TC 2
Z9 2
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 437
EP 450
PG 14
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500023
ER

PT B
AU Knolmayer, GF
AF Knolmayer, GF
BE Rautenstrauch, C
   SeelmannEggebert, R
   Turowski, K
TI On the economics of mass customization
SO MOVING INTO MASS CUSTOMIZATION: INFORMATION SYSTEMS AND MANAGEMENT
   PRINCIPLES
LA English
DT Proceedings Paper
CT Workshop on Information Systems for Mass Customization
CY MAR, 2001
CL DUBAI, U ARAB EMIRATES
HO AMER UNIV DUBAI
DE mass customization; strategy; decision model; cournot model
ID PRODUCT
AB As many "management philosophies" and business strategies, mass customization is often presented as a panacea for solving business problems. However, from the viewpoint of economic theory, there are almost no concepts that strictly dominate the previous situation. This holds also for the concept of mass customization. The paper discusses the pros and cons of mass customization and develops a model to explain the factors that influence the economics of this concept. The classical Cournot model of determining the maximum profit in a monopolistic situation is enlarged to deal with situations in which mass customization is a possible action, providing additional revenues, but also resulting in additional costs. Formulas for determining the effects of mass customization are developed and the optimal solution is computed.
C1 Univ Bern, Inst Informat Syst, CH-3012 Bern, Switzerland.
CR AGARWAL M, 2001, MCKINSEY Q, P62
   Baker AD, 1999, IEEE INTERNET COMPUT, V3, P62, DOI 10.1109/4236.793461
   BAUMHARDT JJ, 1986, STATEGISCHE INVESTIT, V2, P779
   BIGLER LR, 1997, 1997 P DEC SCI I 28, V3, P1150
   Brown S. A., 2000, CUSTOMER RELATIONSHI
   BURBIDGE JL, 1962, PRINCIPLES PRODUCTIO
   FITCH K, 2000, MASS CUSTOMIZATION
   Galsworth GD, 1994, SMART SIMPLE DESIGN
   GRAFF J, 1994, MASS CUSTOMIZATION F
   *INT CUST CLOTH CO, 2000, MASS CUST
   Jensen B., 2000, SIMPLICITY NEW COMPE
   KAHN B, 1998, PRODUCT VARIETY MANA, P19
   KNOLMAYER G, 1999, STRATEGISCHES MANAGE, P67
   KNOLMAYER G, 2001, IN PRESS SUPPLY CHAI
   Lee H., 1998, STRATEGIC SUPPLY CHA, P77
   Lee HL, 1997, MANAGE SCI, V43, P40, DOI 10.1287/mnsc.43.1.40
   LUCZAK H, 1997, KOMPLEXITAT AGILITAT, P309
   MacDuffie JP, 1996, MANAGE SCI, V42, P350, DOI 10.1287/mnsc.42.3.350
   Martin M., 1998, PRODUCT VARIETY MANA, P103
   MARTIN MV, 1996, P 1996 ASME DES ENG
   MARTIN MV, 1997, P DETC97 1997 ASME D
   Meijer B. R., 1998, IEMC '98 Proceedings. International Conference on Engineering and Technology Management. Pioneering New Technologies: Management Issues and Challenges in the Third Millennium (Cat. No.98CH36266), DOI 10.1109/IEMC.1998.727773
   MEWELL F, 2000, LOYALTY DOT COM CUST
   Monden Y, 1983, TOYOTA PRODUCTION SY
   *NN, 1998, MASS CUST TECHN
   PILLER F, 2000, MASS CUSTOMIZATION N
   Pine BJ, 1993, MASS CUSTOMIZATION
   SCHACKMANN J, 2001, P INT NAISO C INF SC, P144
   Wayland R. E., 1997, CUSTOMER CONNECTIONS
NR 29
TC 2
Z9 2
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
BN 3-540-43611-1
PY 2002
BP 3
EP 17
PG 15
WC Computer Science, Information Systems; Management
SC Computer Science; Business & Economics
GA BW68A
UT WOS:000182806000001
ER

PT S
AU Trujillo, S
   Garate, JM
   Lopez-Herrejon, RE
   Mendialdua, X
   Rosado, A
   Egyed, A
   Krueger, CW
   de Sosa, J
AF Trujillo, Salvador
   Garate, Jose Miguel
   Lopez-Herrejon, Roberto Erick
   Mendialdua, Xabier
   Rosado, Albert
   Egyed, Alexander
   Krueger, Charles W.
   de Sosa, Josune
BE Kuhne, T
   Selic, B
   Gervais, MP
   Terrier, F
TI Coping with Variability in Model-Based Systems Engineering: An
   Experience in Green Energy
SO MODELLING FOUNDATIONS AND APPLICATIONS, PROCEEDINGS
SE Lecture Notes in Computer Science
LA English
DT Proceedings Paper
CT 6th European Conference Modelling Foundations and Applications
CY JUN 15-18, 2010
CL Paris, FRANCE
ID SOFTWARE PRODUCT LINES
AB Model-Based Systems Engineering (MBSE) is an emerging engineering discipline whose driving motivation is to provide support throughout the entire system life cycle. MBSE not only addresses the engineering of software systems but also their interplay with physical systems. Quite frequently, successful systems need to be customized to cater for the concrete and specific needs of customers, end-users, and other stakeholders. To effectively meet this demand, it is vital to have in place mechanisms to cope with the variability, the capacity to change, that such customization requires. In tins paper we describe our experience in modeling variability using SysML, a leading MBSE language, for developing a product line of wind turbine systems used for the generation of electricity.
C1 [Trujillo, Salvador; Mendialdua, Xabier; de Sosa, Josune] IKERLAN Res Ctr, Arrasate Mondragon, Spain.
RP Trujillo, S (reprint author), IKERLAN Res Ctr, Arrasate Mondragon, Spain.
EM strujillo@ikerlan.es; jose-miguel.garate@power.alstom.com;
   roberto.lopez@jku.at; xmendialdua@ikerlan.es;
   albert.rosado@power.alstom.com; alexander.egyed@jku.at;
   ckrueger@biglever.com; jdesosa@ikerlan.es
CR Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Beuche D, 2009, LECT NOTES COMPUT SC, V5562, P289, DOI 10.1007/978-3-642-02674-4_21
   Bezivin J., 2005, SOFTWARE SYSTEM MODE, V4, P171, DOI DOI 10.1007/S10270-005-0079-0
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Dauenhauer G, 2009, LECT NOTES COMPUT SC, V5791, P116
   EDWARDS SH, 2009, LNCS, V5791
   Egyed A., 2006, ICSE, P381
   Egyed A, 2007, PROC INT CONF SOFTW, P292
   Estefan JA, 2007, SURVEY MODEL BASED S, P25
   FAVARO JM, 2009, LNCS, V5562, P41
   FINKELSTEIN ACW, 1994, IEEE T SOFTWARE ENG, V20, P569, DOI 10.1109/32.310667
   Gomaa H, 2008, LECT NOTES COMPUT SC, V5030, P182, DOI 10.1007/978-3-540-68073-4_17
   GROHER I, 2008, SPLC
   International Council on Systems Engineering (INCOSE), 2007, INCOSETP200400402
   *IPCC, IPCC ASS REP
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   Kossiakoff Alexander, 2003, SYSTEMS ENG PRINCIPL
   Krueger C.W., 2009, SYSTEMS SOFTWARE PRO
   KRUEGER CW, 2007, OOPSLA 2007, P836
   MathWorks, SIM
   Mezini M, 2004, SIGSOFT FSE, P127, DOI 10.1145/1029894.1029915
   *MOD, DYM
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   *OMG, SYSML
   OMG, UN MOD LANG UML
   Pohl K, 2006, SOFTWARE PRODUCT LIN
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   van der Linden F., 2007, SOFTWARE PRODUCT LIN
   Wirsing M, 2008, Software-Intensive Systems and New Computing Paradigms: Challenges and Visions, V5380
   *WORLD WATCH I, 2009, WIND POW INCR 2008 E
   Zhang HY, 2004, SCI COMPUT PROGRAM, V53, P381, DOI 10.1016/j.scico.2003.04.007
NR 31
TC 2
Z9 2
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 978-3-642-13594-1
J9 LECT NOTES COMPUT SC
PY 2010
VL 6138
BP 293
EP 304
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BPM84
UT WOS:000279345100023
ER

PT S
AU Goedicke, M
   Pohl, K
   Zdun, U
AF Goedicke, M
   Pohl, K
   Zdun, U
BE Bellahsene, Z
   Patel, D
   Rolland, C
TI Domain-specific runtime variability in product line architectures
SO OBJECT-ORIENTED INFORMATION SYSTEMS, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 8th International Conference on Object-Oriented Information Systems
   (OOIS 2002)
CY SEP 02-05, 2002
CL MONTPELLIER, FRANCE
HO UNIV MONTPELLIER
AB A software product line primarily structures the software architecture around the commonalities of a set of products within a specific organization. Commonalities can be implemented in prefabricated components, and product differences are typically treated by well-defined variation points that are actualized later on. Dynamic, domain-specific aspects, such as ad hoc customization by domian experts, are hard to model with static extension techniques. In this paper, we will discuss open issues for dynamic and domain-specific customizations of product line architectures. We will also present an indirection architecture based on Component Wrapper objects and message redirection for dynamically composing and customizing generic components for the use in concrete products. As a case study, we will discuss two designs from a Multimedia Home Platform product line: end-user personalization across different new media platforms and customization of interactive applications by content editors.
C1 Univ Essen Gesamthsch, Inst Comp Sci, Essen, Germany.
RP Goedicke, M (reprint author), Univ Essen Gesamthsch, Inst Comp Sci, Essen, Germany.
CR Bass L., 1998, SOFTWARE ARCHITECTUR
   Bosch J, 2000, DESIGN USE SOFTWARE
   BOSCH J, 2001, 4 INT WORKSH PROD FA
   CAMPBELL G, 1998, P OOPSLA 98 OBJ TECH
   *ETSI, 2001, TS101812 ETSI
   *EUR SOFTW I, 2001, ENG SOFTW ARCH PROC
   Gamma E., 1994, DESIGN PATTERNS ELEM
   Goedicke M, 2002, J SOFTW MAINT EVOL-R, V14, P1, DOI 10.1002/smr.243
   GOEDICKE M, 2000, P 2 INT S GEN COMP B
   GOEDICKE M, 2001, P EUR PLOP 2001 IRS
   POHL K, 2001, 2 ICSE WORKSH SOFTW
   VOGEL O, 2001, P EUR PLOP 2001 IRS
   ZDUN U, 2002, P S APPL COMP SAC 20
   ZDUN U, 2002, THESIS U ESSEN GERMA
NR 14
TC 2
Z9 2
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-44087-9
J9 LECT NOTES COMPUT SC
PY 2002
VL 2425
BP 384
EP 396
PG 13
WC Computer Science, Artificial Intelligence; Computer Science, Information
   Systems; Computer Science, Software Engineering
SC Computer Science
GA BW28M
UT WOS:000181442400041
ER

PT S
AU Ferber, S
   Heidl, P
   Lutz, P
AF Ferber, S
   Heidl, P
   Lutz, P
BE VanderLinden, F
TI Reviewing product line architectures: Experience report of ATAM in an
   automotive context
SO SOFTWARE PRODUCT-FAMILY ENGINEERING
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 4th International Workshop on Product Family Engineering (PFE-4)
CY OCT 03-05, 2001
CL BILBAO, SPAIN
SP European Ind
AB Product lines are an important system development paradigm in the automotive industry to amortize costs beyond a single product. The paradigm is well established in the mechanical and electrical engineering practice in automotive companies like Bosch. As software is covering more and more functionality in cars, software product lines are getting more attention. The architecture of a software-intensive system is a key asset in developing a software product line.
   The Architecture Trade-off Analysis Method (ATAM) developed by the SEI assesses the quality of software architecture early in the development process. ATAM is therefore a useful review technique to guarantee important quality attributes of every single product created with the product line architecture later on. This article reports about the experience Bosch made in using ATAM in two cases.
   Benefits in using ATAM are not only the review results itself but a better documented and better understood architecture. We experienced the most important benefit of ATAM is the rising stakeholders' awareness of architectural decisions, tradeoffs, and risks. It illuminates the software architecture better than any written documentation. Bosch employees are trained in the evaluation roles in order to transition ATAM to Bosch.
   The reports conclude with some suggestions for improving the ATAM itself and the training of ATAM roles.
C1 Robert Bosch GmbH, Corp Res & Dev, FV, SLD, D-60489 Frankfurt, Germany.
RP Ferber, S (reprint author), Robert Bosch GmbH, Corp Res & Dev, FV, SLD, Eschnorner Landstr 130-132, D-60489 Frankfurt, Germany.
CR Bachmann F., 2000, CMUSEI2000TR001
   BARBACCI M, 1999, CMUSEI99TR014
   BASS L, 1998, SEI SERIES SOFTWARE
   BERGEY J, 1999, CMUSEI99TN012
   Bosch J, 2000, DESIGN USE SOFTWARE
   CLEMENTS P, 2001, IN PRESS SEI SERIES
   Gallagher B. P., 2000, CMUSEI2000TN007
   Kazman R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.840995
   Kazman R., 2000, CMUSEI2000TR004
   NEUMANN KT, 2001, AUTOMOT ENG INT, V109, P110
   Parnas D. L., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4)
   *SEI, 2000, UNPUB ATM REF GUID
   THIEL S, 2001, SOFTWARE PRODUCT LIN, V1587, P43
   WEBER J, 2001, EMBEDDED SOFTWARE SE
   ZHAO JJ, 1999, SOFTWARE ENG NOTES, V24, P61
NR 15
TC 2
Z9 2
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43659-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2290
BP 364
EP 382
PG 19
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering
SC Computer Science
GA BW19H
UT WOS:000181140900032
ER

PT B
AU Bockle, G
AF Bockle, G
BE Donohoe, P
TI Model-based requirements engineering for product lines
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE requirements engineering; product line engineering; domain analysis;
   development consistency
AB Requirements engineering is an important part of software and systems engineering but needs some specific support to apply it to product line engineering. Tracing requirements for different products of the product line to different architecture instantiations and component variants; and to the corresponding design decisions, by using a requirements model can reduce development time significantly. Requirements engineering is used in both the domain engineering and application engineering processes of product line engineering. A good requirements model can support major parts of both, such as commonality analysis and tracing of connections between requirements, architecture, components, and tests. This paper presents our approach for a such a model, and show how groups can work in parallel on products of the product family.
C1 Siemens AG, Corp Technol, D-81730 Munich, Germany.
RP Bockle, G (reprint author), Siemens AG, Corp Technol, D-81730 Munich, Germany.
CR CLEMENTS P, FRAMEWORK SOFTWARE P
   COHEN S, 1999, ESI1999TR034
   COPLIEN J, 1998, IEEE SOFTWARE, V15
   Griss M., 1998, P 5 INT C SOFTW REUS
   *IT PROJ PROGR, 1998, 28651 ESP PROJ IT PR
   *ITEA FULL PROP, 1999, ESAPS ENG SOFTW ARCH
   JACOBSON I, 1997, SOFTWARE REUSE ARCH
   Kang K., 1990, CMUSEI90TR21
   LAM W, 1999, SYSTEMS ENG, V2
   PLANKL J, 1999, MORE DRIVE SOFTWAREP
   VANDERLINDEN F, 1998, SPRINGER LNCS, V1429
   VICI AD, 1998, P 5 INT C REQ ENG IC
   VINGAMARTINS R, 1999, ESI1999TR034
NR 13
TC 2
Z9 2
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 193
EP 203
PG 11
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500011
ER

PT B
AU Kim, M
   Yang, H
   Park, S
AF Kim, M
   Yang, H
   Park, S
BE Azada, D
TI A domain analysis method for software product lines based on scenarios,
   goals and features
SO ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS
LA English
DT Proceedings Paper
CT 10th Asia-Pacific Software Engineering Conference (APSEC 2003)
CY DEC 10-12, 2003
CL CHIANG MAI, THAILAND
SP Chulalongkorn Univ, Fac Engn, Dept Comp Engn, Chulalongkorn Univ, Fac Sci, Dept Math, Chiang Mai Univ, Khon Kaen Univ, King Mongkuts Inst Tech N Bank, Fac Informat Technol, Mahasarakham Univ, Fac Informat, Ratchathani Coll Technol, Silpakorn Univ, Fac Sci, Dept Math, Fac Sci & Technol, Dept Comp Sci, Thammasat Univ, Software Pk, UniNet
ID REQUIREMENTS ANALYSIS
AB A feature-oriented approach has been used extensively for commonality and variability (C&V) analysis in Software Product Lines (SPL). However, this feature-oriented approach contains no proposal to systematically identify features and provide the rationale for both the features and C&V Therefore, this paper proposes a domain analysis method for the SPL based on scenarios, goals and features in order to overcome some of the deficiencies and limitations of the feature-oriented approach. In particular, the paper presents a domain requirements model (DRM) that integrates features with both goals and scenarios. Using this DRM, we also propose a domain requirements modeling method. At the end, this approach is applied to a home integration system (HIS) and then is also evaluated. Our approach makes it possible to systematically identify features and provide the rationale for both the features and C&V Thus, the approach provides a systematic and concrete domain analysis method for the SPL.
C1 Sogang Univ, Dept Comp Sci & Engn, Seoul 121742, South Korea.
RP Kim, M (reprint author), Sogang Univ, Dept Comp Sci & Engn, Seoul 121742, South Korea.
CR Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   Bosch J, 2000, DESIGN USE SOFTWARE
   Chandrasekaran B., 1996, P AAAI 96 WORKSH MOD
   CHASTEK G, 2002, CMUSEI2002TN029
   CHASTEK G, 2001, CMUSEI2001TR001
   Clements P, 2001, SOFTWARE PRODUCT LIN
   DARDENNE A, 1993, SCI COMPUT PROGRAM, V20, P3, DOI 10.1016/0167-6423(93)90021-G
   Donohoe P., 2000, SOFTWARE PRODUCT LIN
   Fey D, 2002, P 2 SOFTW PROD LIN C, P198
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   JACOBS S, 1995, P C ORG COMP SYST MI, P96, DOI 10.1145/224019.224029
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   KAINDL H, 2000, IEEE T SYSTEMS MAN A, V30
   KAINDL H, 1995, P S DES INT SYST PRO, P227, DOI 10.1145/225434.225460
   Kang K., 1990, CMUSEI90TR21
   KANG KC, 2002, IEEE SOFTWARE, V9, P58
   KANG KC, 2003, DOMAIN ORIENTED SYST, P19
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kang KC, 1999, SOFTWARE PRACT EXPER, V29, P875, DOI 10.1002/(SICI)1097-024X(199908)29:10<875::AID-SPE262>3.0.CO;2-W
   Mylopoulos J, 1999, COMMUN ACM, V42, P31, DOI 10.1145/291469.293165
   MYLOPOULOS J, 1992, IEEE T SOFTW ENG JUN
   Neighbors J., 1981, THESIS U CALIFORNIA
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   Rolland C, 1998, IEEE T SOFTWARE ENG, V24, P1055, DOI 10.1109/32.738339
   ROLLAND C, 1999, 4 IEEE INT S REQ ENG
   SCHMID K, 2000, P 1 SOFTW PROD LIN C, P513
   Sutcliffe A., 1998, Requirements Engineering, V3, DOI 10.1007/BF02802920
   Thiel S, 2000, P 1 SOFTW PROD LIN C, P495
   van Lamsweerde A, 1998, IEEE T SOFTWARE ENG, V24, P1089, DOI 10.1109/32.738341
   Vici A. D., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685741
   Wiegers K, 1999, SOFTWARE REQUIREMENT
NR 31
TC 2
Z9 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-2011-1
PY 2003
BP 126
EP 135
PG 10
WC Computer Science, Software Engineering
SC Computer Science
GA BY37L
UT WOS:000189126900013
ER

PT S
AU Schuerr, A
   Oster, S
   Markert, F
AF Schuerr, Andy
   Oster, Sebastian
   Markert, Florian
BE VanLeeuwen, J
   Muscholl, A
   Peleg, D
   Pokorny, J
   Rumpe, B
TI Model-Driven Software Product Line An Integrated Approach
SO SOFSEM 2010: THEORY AND PRACTICE OF COMPUTER SCIENCE, PROCEEDINGS
SE Lecture Notes in Computer Science
LA English
DT Proceedings Paper
CT 36th Conference on Current Trends in Theory and Practice of Computer
   Science
CY JAN 23-29, 2010
CL Spindleruv Mlyn, CZECH REPUBLIC
SP Acad Sci Czech Republic, Inst Comp Sci, Charles Univ, Fac Math & Phys, Act M Agcy, CA, IBM, Profinit, SUN, Microsoft
AB Software Product Line engineering is a popular approach which improves reusability of software in a large number of products that share a. common set of features. Feature Models (FMs) are often used to model commonalities and variabilities within a Software Product Line (SPL). Due to their variability, testing SPLs is very challenging and many different approaches exist. Classification Trees (CTs) are a well-known and in practice popular black-box approach for the systematic derivation of a. set of test cases of a single software system instance. In this paper, we explore the relations and similarities between FMs and CTs. Our contribution is the introduction of an integrated approach Feature Model for Testing (FMT) marrying properties and abilities of CTs and FMs.
C1 [Schuerr, Andy; Oster, Sebastian] Tech Univ Darmstadt, Real Time Syst Grp, D-64283 Darmstadt, Germany.
RP Schuerr, A (reprint author), Tech Univ Darmstadt, Real Time Syst Grp, Merckstr 25, D-64283 Darmstadt, Germany.
EM oster@es.tu-darmstadt.de; andy.schuerr@es.tu-darmstadt.de;
   markert@rs.tu-darmstadt.de
CR ALEKSEEV S, 2007, SE 2007, P261
   Amelunxen C, 2006, LECT NOTES COMPUT SC, V4066, P361
   Bertolino A., 2006, SOFTWARE PRODUCT LIN, P425, DOI DOI 10.1007/978-3-540-33253-4_
   Bertolino A., 2003, Software Engineering Notes, V28, DOI 10.1145/949952.940120
   BEUCHE D, 2008, P SPLC, P358
   Bosch J, 2000, DESIGN USE SOFTWARE
   Clements P, 2001, SOFTWARE PRODUCT LIN
   CONRAD M, 2002, LECT NOTES INFORM P, V12, P39
   Czarnecki K., 2005, SOFTWARE PROCESS IMP, P7
   Czarnecki K, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P22
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.225
   Eker J, 2003, P IEEE, V91, P127, DOI 10.1109/JPROC.2002.805829
   GEPPERT B, 2004, ICSR, P35
   GROCHTMANN M, 1993, P 1 EUR INT C SOFTW, P169
   Heymans P, 2008, IET SOFTW, V2, P281, DOI 10.1049/iet-sen:20070055
   Kang K. C., 1990, FEATURE ORIENTED DOM
   OSTER S, 2009, WORKSH SOFTW ENG 200
   OSTER S, 2009, P SPLC 2009 WORKSH M, P75
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Tevanlinna A., 2004, ACM SIGSOFT SOFTWARE, V29, P12, DOI DOI 10.1145/979743.979766
   WEISSLEDER S, 2008, 1 WORKSH MOD BAS TES
   WHITE BDJ, J SYSTEMS SOFTWARE
NR 22
TC 2
Z9 2
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 978-3-642-11265-2
J9 LECT NOTES COMPUT SC
PY 2010
VL 5901
BP 112
EP 131
PG 20
WC Computer Science, Theory & Methods
SC Computer Science
GA BPV37
UT WOS:000280086900010
ER

PT B
AU Morisio, M
   Travassos, GH
   Stark, ME
AF Morisio, M
   Travassos, GH
   Stark, ME
GP IEEE COMPUTER SOCIETY
   IEEE COMPUTER SOCIETY
TI Extending UML to support domain analysis
SO FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE
   ENGINEERING, PROCEEDINGS
LA English
DT Proceedings Paper
CT 15th IEEE International Conference on Automated Software Engineering
   (ASE 2000)
CY SEP 11-15, 2000
CL GRENOBLE, FRANCE
SP Univ Joseph Fourier, IEEE Comp Soc, ACM SIGART, ACM SIGSOFT
AB We developed a domain engineering approach and the supporting teals to define software product lines. The approach is composed of a process and a notation. The notation is an extension of UML (Unified Modeling Language), the process is influenced by Synthesis [I] and FAST [2]. Supporting tools have been built on top of a commercial CASE tool for UML. This paper focuses on the domain analysis part of the approach and specifically on the notation and tools to support it.
   The approach is being applied to sub-domains of the Guidance Navigation and Control domain, a set of functionalities used on board of satellites developed by the NASA Goddard Space Flight Center.
C1 Politecn Torino, IT, Turin, Italy.
RP Morisio, M (reprint author), Politecn Torino, IT, Turin, Italy.
RI Travassos, Guilherme/G-2842-2012
CR ARANGO G, 1994, DOMAIN ANAL METHODS, P17
   BAYER J, 1999, S SOFTW REUS SSR99
   Bosch J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.841044
   COHEN S, 1998, 5 INT C SOFTW REUS J
   FERRE X, 1999, 4 CAISE IFIP8 1 INT
   FOREMAN J, 1996, SOFTW TECHN C SALT L
   GOSSAIN S, 1995, P OOPSLA95
   Kang K., 1990, CMUSEI90TR21
   KEEPENCE B, 1999, IEEE SOFTWARE    JUL, P102
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   OLIVEIRA KM, 1999, SEKE 99 KAIS GERM
   Rumbaugh J., 1998, UNIFIED MODELING LAN
   *SOFTW ENG LAB, 2000, PROD LIN DEV APPR FL
   *SOFTW PROD CONS, 1993, SPC92019CMV
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   WEISS DM, 1998, 2 INT WORKSH DEV EV
NR 16
TC 2
Z9 2
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-0710-7
PY 2000
BP 321
EP 324
PG 4
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA BQ87Y
UT WOS:000089913800044
ER

PT S
AU da Silva, AP
   Bittencourt, II
   Ataide, W
   Holanda, O
   Costa, E
   Tenorio, T
   Brito, PHS
AF da Silva, Alan Pedro
   Bittencourt, Ig Ibert
   Ataide, Walker
   Holanda, Olavo
   Costa, Evandro
   Tenorio, Thyago
   Brito, Patrick H. S.
BE Dicheva, D
   Markov, Z
   Stefanova, E
TI An Ontology-Based Model for Driving the Building of Software Product
   Lines in an ITS Context
SO THIRD INTERNATIONAL CONFERENCE ON SOFTWARE, SERVICES AND SEMANTIC
   TECHNOLOGIES S3T 2011
SE Advances in Intelligent and Soft Computing
LA English
DT Proceedings Paper
CT 3rd International Conference on Software, Services and Semantic
   Technologies
CY SEP 01-03, 2011
CL Bourgas, BULGARIA
HO Sofia Univ
AB The Intelligent Tutoring Systems (ITS) have been used daily to support education in various domains. For this reason, fast and easy construction of ITSs are fundamental requirements. In this sense, a Software Product Line has been used accordingly for building Intelligent Tutoring System families. However, the construction of such family systems is still a hard and complex task which involves the representation and manipulation of different knowledge sources with distinct artifacts. To alleviate these issues, this paper proposes an ontology-based model for driving the building of software product lines in an ITS Context. It also provides a case study describing the construction of an ITS in the programming domain. In addition, an evaluation is presented aiming to show the feasibility of the proposed model. The main conclusion is that this model reduces the effort and the complexity in the construction of such systems.
C1 [da Silva, Alan Pedro; Bittencourt, Ig Ibert; Ataide, Walker; Holanda, Olavo; Costa, Evandro; Tenorio, Thyago; Brito, Patrick H. S.] Univ Fed Alagoas, GrOW Grp Optimizat Web, Maceio, Alagoas, Brazil.
RP da Silva, AP (reprint author), Univ Fed Alagoas, GrOW Grp Optimizat Web, Maceio, Alagoas, Brazil.
EM alanpedro@ic.ufal.br; ig.ibert@ic.ufal.br; walker@ic.ufal.br;
   olavoholanda@ic.ufal.br; evandro@ic.ufal.br; patrick@ic.ufal.br
RI Bittencourt, Ig Ibert/G-3504-2012
CR Aleven V., 2010, INT J ARTIFICIAL INT, V19, P105
   Bittencourt I., 2006, S BRAS INF ED, P559
   Cruz AC, 2006, CIC 2006: 15th International Conference on Computing, Proceedings, P223
   Kang K. C., 1990, FEATURE ORIENTED DOM
   Koedinger KR, 2006, CAMB HANDB PSYCHOL, P61
   Lin F., 2006, International Journal of Continuing Engineering Education and Life-Long Learning, V16, DOI 10.1504/IJCEELL.2006.008919
   Mohabbati B., 2009, P 3 INT WORKSH SERV
   Razzaq L, 2009, IEEE T LEARN TECHNOL, V2, P157, DOI 10.1109/TLT.2009.23
   Rusk J.J., 2008, SPLC, V2, P123
   Silva A., 2010, 2 INT C SOFTW SERV S, P127
NR 10
TC 1
Z9 1
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 1867-5662
BN 978-3-642-23162-9
J9 ADV INTEL SOFT COMPU
PY 2011
VL 101
BP 155
EP 159
PG 5
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering
SC Computer Science
GA BZL75
UT WOS:000301958800022
ER

PT S
AU Capilla, R
   Topaloglu, NY
AF Capilla, R
   Topaloglu, NY
BE Yazici, A
   Sener, C
TI Representing variability issues in web applications: A pattern approach
SO COMPUTER AND INFORMATION SCIENCES - ISCIS 2003
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 18th International Symposium on Computer and Information Sciences (ISCIS
   2003)
CY NOV 03-05, 2003
CL ANTALYA, TURKEY
SP Middle E Tech Univ, Sci & Tech Res Council Turkey, IEEE, Turkey Sect, Int Federat Informat Proc
ID SOFTWARE PRODUCT LINES
AB Web applications have unique characteristics that require suitable software engineering practices in the development process. In this way, software architectures and pattern-based approaches are suitable design techniques for modeling purposes. But if we want to build sets of similar systems, we need to represent the common and variable aspects of such systems under an architectural point of view. Therefore, representing and managing those variable issues is a goal to achieve when designing similar software applications. In this work we will try to deal with the variability problem from a pattern point of view as well as applying this to web software products.
C1 Univ Rey Juan Carlos, Dept Informat & Telemat, Madrid, Spain.
   Ege Univ, Dept Comp Engn, Izmir, Turkey.
RP Capilla, R (reprint author), Univ Rey Juan Carlos, Dept Informat & Telemat, Madrid, Spain.
EM rcapilla@escet.urjc.es; yasemin@bornova.ege.edu.tr
CR Alexander C., 1979, TIMELESS WAY BUILDIN
   Appleton B, PATTERNS SOFTWARE ES
   BANDINELLI S, 2001, 4 INT WORKSH SOFTW P, P327
   Bass L., 2003, SOFTWARE ARCHITECTUR
   BASS L, 2002, SOFTWARE PRODUCT LIN
   Bosch J, 2000, DESIGN USE SOFTWARE
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   Buschmann F., 1996, PATTERN ORIENTED SOF
   Capilla R, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P53, DOI 10.1109/CSMR.2003.1192410
   Capilla R, 2002, LECT NOTES COMPUT SC, V2290, P319
   CERI S, 2000, WWW9 C AMST
   CONNALLEN J, 1999, COMMUNICATIONS ACM, V42
   DOBRICA L, 2003, INT WORKSH SOFTW VAR, P8
   Gamma E., 1995, DESIGN PATTERNS
   Ginige A., 2001, IEEE Multimedia, V8, DOI 10.1109/93.923949
   GU A, 2002, WWW 2002 11 INT WORL
   GU A, 2002, WEB ODELLING LANGUAG
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   KEEPENCE B, 1999, IEEE SOFTWARE    JUL, P102
   OFFUTT J, 2002, IEEE SOFTWARE    MAR, P25
   ROBAK S, 2003, INT WORKSH SOFTW VAR, P58
   Salicki S, 2002, LECT NOTES COMPUT SC, V2290, P304
   SCHAWBE D, 1995, P ACM WORKSH EFF ABS
NR 23
TC 1
Z9 1
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-20409-1
J9 LECT NOTES COMPUT SC
PY 2003
VL 2869
BP 1035
EP 1042
PG 8
WC Computer Science, Artificial Intelligence; Computer Science, Information
   Systems; Computer Science, Software Engineering; Computer Science,
   Theory & Methods
SC Computer Science
GA BY18X
UT WOS:000188096800128
ER

PT B
AU van der Hoek, A
   Dincel, E
   Medvidovic, N
AF van der Hoek, A
   Dincel, E
   Medvidovic, N
GP IEEE COMPUTER SOCIETY
   IEEE COMPUTER SOCIETY
TI Using service utilization metrics to assess the structure of product
   line architectures
SO NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS
LA English
DT Proceedings Paper
CT 9th International Software Metrics Symposium
CY SEP 03-05, 2003
CL SYDNEY, AUSTRALIA
SP IEEE Comp Soc Tech Council Software Engn, Univ New S Wales, Univ Technol, Natl ICT, Australian Software Metr Assoc
ID SOFTWARE ARCHITECTURE; LANGUAGES
AB Metrics have long been used to measure and evaluate software products and processes. Many metrics have been developed that have lead to different degrees of success. Software architecture is a discipline in which few metrics have been applied, a surprising fact given the critical role of software architecture in software development. Software product line architectures represent one area of software architecture in which we believe metrics can be of especially great use. The critical importance of the structure defined by a product line architecture requires that its properties be meaningfully assessed and that informed architectural decisions be made to guide its evolution. To begin addressing this issue, we have developed a class of closely related metrics that specifically target product line architectures. The metrics are based on the concept of service utilization and explicitly take into account the context in which individual architectural elements are placed. In this paper, we define the metrics, illustrate their use, and evaluate their strengths and weaknesses through their application on three example product line architectures.
C1 Univ Calif Irvine, Inst Software Res, Irvine, CA 92697 USA.
RP van der Hoek, A (reprint author), Univ Calif Irvine, Inst Software Res, Irvine, CA 92697 USA.
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, DOI 10.1145/258077.258078
   BASTANI FB, 1983, COMPSAC 83, P1
   Batory D, 2002, ACM T SOFTW ENG METH, V11, P191, DOI 10.1145/505145.505147
   BAYER J, LIB SYSTEM PRODUCT L
   Bosch J, 2000, DESIGN USE SOFTWARE
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   DAVIS JS, 1988, IEEE T SOFTWARE ENG, V14, P1366, DOI 10.1109/32.6179
   Dix A. J., 1991, FORMAL METHODS INTER
   FENTON NE, 2000, SOFTWARE TESTING QUA, P48
   GANNON JD, 1986, COMMUN ACM, V29, P616, DOI 10.1145/6138.6144
   GARLAN D, 1994, ACM SIGSOFT, P175
   Garlan D., 1996, SOFTWARE ARCHITECTUR
   Halstead M.H., 1977, ELEMENTS SOFTWARE SC
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Hitz M, 1995, P INT S APPL CORP CO, P25
   JOHANSSON E, 2002, P 14 INT C SOFTW ENG
   JONES C, 1986, PROGRAMMING PRODUCTI
   Lorenz M., 1994, OBJECT ORIENTED SOFT
   LUCKHAM DC, 1995, IEEE T SOFTWARE ENG, V21, P717, DOI 10.1109/32.464548
   MAGEE J, 1996, ACM SIGSOFT 96 4 S F, P3
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, DOI 10.1109/TSE.1976.233837
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Medvidovic N., 1999, 21 INT C SOFTW ENG M, P44
   Myers G., 1978, COMPOSITE STRUCTURED
   PANT YR, 1995, SOFTWARE QUALITY PRO
   PERRY DE, 1998, 2 INT WORKSH DEV EV
   Pfleeger S. L., 1997, SOFTWARE METRICS RIG
   SHAW M, 1995, IEEE T SOFTWARE ENG, V21, P314, DOI 10.1109/32.385970
   Simon F., 2001, Proceedings Fifth European Conference on Software Maintenance and Reengineering, DOI 10.1109/CSMR.2001.914965
   TRACZ W, 1995, ACM SIGSOFT SOFTWARE
   VANDERHOEK A, 2001, 6 EUR SOFTW ENG C ES, P1
   van Ommering R, 2000, COMPUTER, V33, P78, DOI 10.1109/2.825699
   WOLF AL, 1989, IEEE T SOFTWARE ENG, V15, P250, DOI 10.1109/32.21753
NR 34
TC 1
Z9 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1987-3
PY 2003
BP 298
EP 308
PG 11
WC Computer Science, Software Engineering
SC Computer Science
GA BX54M
UT WOS:000185645700026
ER

PT B
AU Robak, S
   Pieczynski, A
AF Robak, S
   Pieczynski, A
BE Kawada, S
TI Employing fuzzy logic in feature diagrams to model variability in
   software product-lines
SO ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE
   ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS
LA English
DT Proceedings Paper
CT 10th IEEE International Conference and Workshop on the Engineering of
   Computer-Based Systems
CY APR 07-10, 2003
CL HUNTSVILLE, AL
SP IEEE, Comp Soc Tech Comm Engn Comp Based Syst
AB The possible features of software product line members may vary according to the needs of particular market segments or purposes. The assessment of what will be common and what will be variable may, e.g., result from market strategies. Customer profiles may be used to model an otherwise, anonymous market, each requiring in turn a specific sets of variant features. Identical feature sets may be prioritized in different ways for specific customer groups.
   This paper proposes a system description based on a feature diagram tree, annotated with weighted variant features in the product line context. The principle how some variant features may be described on the basis of fuzzy logic is introduced and discussed. As the proposed description also integrates the external cross-tree constraints, it leads to an improved homogeneity of the descriptive logic. This opens the opportunity to integrate additional tools into the scenario, e.g., generators or support for constraint based reasoning. The use of the proposed approach is demonstrated by the example of a simple car description.
C1 Univ Zielona Gora, Inst Org & Management, PL-65246 Zielona Gora, Poland.
RP Robak, S (reprint author), Univ Zielona Gora, Inst Org & Management, Ul Podgorna 50, PL-65246 Zielona Gora, Poland.
EM s.robak@ioz.uz.zgora.pl; a.pieczynski@issi.uz.zgora.pl
CR BASS I, 1998, SOFTWARE ARCHITECTUR
   CLEMENTS P, 2002, FRAMEWORK SOFTWARE P
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Dubois D, 2002, IEEE T FUZZY SYST, V10, P322, DOI 10.1109/TFUZZ.2002.1006435
   FEDRIZZI M, 1992, STUDIES FUZZINES, V1, P15
   GRISS ML, 1998, IEEE P ICSR 98 VICT, P36
   *I EL EL ENG INC, 1987, SOFTW ENG STAND
   Kacprzyk J., 1986, FUZZY SETS SYSTEM AN
   Kang K., 1990, CMUSEI90TR21
   KANG KC, 1998, ANN SOFTW ENG, V5, P354
   KOWALCZYK R, 2000, LECT NOTES ARTIF INT, V3, P31
   Kruchten P., 1999, RATIONAL UNIFIED PRO
   Luger F. G., 1989, ARTIFICIAL INTELLIGE
   NILSSSON NJ, 1998, ARTIFICIAL INTELLIGE
   Parnas D.L., 1976, IEEE T SOFTWARE ENG, P1
   PIECZYNSKI A, 1998, P 5 INT S MIEDZ POL, V2, P255
   Robak S., 2002, International Journal of Applied Mathematics and Computer Science, V12
   ROBAK S, 2002, LECT NOTES INFORMATI, V21, P138
   ROBAK S, IN PRESS LECT NOTES
   SPECK A, 2002, 16 EUR C OBJ OR PROG
   Szyperski C., 1998, COMPONENT SOFTWARE O
   YAGER F, 1995, ESSENTIALS FUZZY MOD
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
NR 23
TC 1
Z9 1
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1917-2
PY 2003
BP 305
EP 311
PG 7
WC Computer Science, Information Systems; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BW60L
UT WOS:000182548800037
ER

PT J
AU Magdalenic, I
   Radosevic, D
   Orehovacki, T
AF Magdalenic, Ivan
   Radosevic, Danijel
   Orehovacki, Tihomir
TI Autogenerator: Generation and execution of programming code on demand
SO EXPERT SYSTEMS WITH APPLICATIONS
LA English
DT Article
DE Autogenerator; Dynamic frames; Generation on demand
ID SOFTWARE PRODUCT LINES; MODEL; XVCL
AB While generating program files that can be executed afterwards is widely established in Automatic programming, the generation of programming code and its execution on demand without creating program files is still a challenge. In the approach presented in this paper a generator entitled Autogenerator uses the ability of scripting languages to evaluate programming code from a variable. The main benefits of this approach lie in facilitating the application change during its execution on the one hand and in dependencies update on the other. Autogenerator can be useful in the development of a common Generative programming application for previewing the application before the generation of the final release. With the aim of examining specific facets of the autogeneration process, we also conducted performance tests. Finally, the presented model of Autogenerator is verified through the development of an application for the creation and handling of Universal Business Language documents. (C) 2012 Elsevier Ltd. All rights reserved.
C1 [Magdalenic, Ivan] Univ Zagreb, Fac Org & Informat, Varazhdin 42000, Croatia.
RP Magdalenic, I (reprint author), Univ Zagreb, Fac Org & Informat, Pavlinska 2, Varazhdin 42000, Croatia.
EM ivan.magdalenic@foi.hr
RI Radosevic, Danijel/C-8742-2009
OI Radosevic, Danijel/0000-0001-6022-2973
CR Bassett P.G., 1997, FRAMING SOFTWARE REU
   Bassett PG, 2007, IEEE SOFTWARE, V24, P90, DOI 10.1109/MS.2007.119
   BATORY D, 1994, IEEE SOFTWARE, V11, P89, DOI 10.1109/52.311067
   Classen A, 2008, LECT NOTES COMPUT SC, V4961, P16, DOI 10.1007/978-3-540-78743-3_2
   Clements P, 2002, SOFTWARE PRODUCT LIN
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3566, P326
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K., 2006, P 10 INT SOFTW PROD, P41
   de Lara J, 2004, J VISUAL LANG COMPUT, V15, P309, DOI 10.1016/j.jvlc.2004.01.005
   Emrich M., 2003, OBJEKTSPEKTRUM, V5, P55
   Fowler M, 2010, DOMAIN SPECIFIC LANG
   Fuentes L., 2009, P FOR 21 INT C ADV I, P67
   Greenfield J, 2004, SOFTWARE FACTORIES A
   Grigorenko P., 2005, P JOINT 10 EUR SOFTW, P249, DOI 10.1145/1081706.1081747
   Groher I, 2009, LECT NOTES COMPUT SC, V5560, P111, DOI 10.1007/978-3-642-03764-1_4
   Grossman I., 1994, TECHNICAL REPORT
   Guo S., 2010, P 2010 INT C COMP IN, P1, DOI 10.1145/1878537.1878699
   Haase A., 2007, INTRO OPENARCHITECTU
   Heradio R, 2012, EXPERT SYST APPL, V39, P12885, DOI 10.1016/j.eswa.2012.05.004
   Jarzabek S., 2001, P 5 IEEE INT S REQ E, P166
   Jarzabek S, 2003, PROC INT CONF SOFTW, P810, DOI 10.1109/ICSE.2003.1201298
   Kang K., 1990, TECHNICAL REPORT
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220
   Lai A., 2000, WORKSH MULT SEP SOFT
   Lemaire C., 2010, CODEWORKER PARSING T
   Loughran N., 2004, WORKSH ASP COMP PATT
   Magdalenic I, 2009, INFORMATICA-LITHUAN, V20, P397
   Minsky M., 1975, PSYCHOL COMPUTER VIS
   Muller J., 2008, P WORKSH MOD COMP GE
   Neto V. V. G., 2011, P 2011 INT WORKSH EA, P7
   OASIS, 2006, UN BUS LANG 2 0
   Olson A. M., 2005, SERVICE ORIENTED SOF, P68
   Radokvic D., 2012, P 35 MIPRO JUB INT C, P1257
   Radosevic D., 2011, P 22 CENTR EUR C INF, P181
   Radosevic D., 2010, P 21 CENTR EUR C INF, P87
   Radosevic D., 2011, J INFORM ORG SCI, V35, P73
   Radosevic D., 2008, J INFORM ORG SCI, V32, P137
   Radosevic D., 2011, P 34 MIPRO INT CONV, P369
   Radosevic D., 2007, P 30 MIPRO INT CONV, P167
   Rosenmuller M., 2008, GPCE 08
   Schlee M., 2004, P WORK C ADV VIS INT, P403, DOI 10.1145/989863.989936
   Stuikys V., 2000, Informatica, V11
   Tolvanen J. P., 2003, OOPSLA 2003 DEM
   Voelter M, 2006, MODEL DRIVEN SOFTWAR
   WARMER J, 1998, OBJECT CONSTRAINT LA
   Yuan L, 2006, ASPEC 2006: 13TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P209
   Zhang HY, 2004, SCI COMPUT PROGRAM, V53, P381, DOI 10.1016/j.scico.2003.04.007
NR 49
TC 1
Z9 1
PU PERGAMON-ELSEVIER SCIENCE LTD
PI OXFORD
PA THE BOULEVARD, LANGFORD LANE, KIDLINGTON, OXFORD OX5 1GB, ENGLAND
SN 0957-4174
J9 EXPERT SYST APPL
JI Expert Syst. Appl.
PD JUN 15
PY 2013
VL 40
IS 8
BP 2845
EP 2857
DI 10.1016/j.eswa.2012.12.003
PG 13
WC Computer Science, Artificial Intelligence; Engineering, Electrical &
   Electronic; Operations Research & Management Science
SC Computer Science; Engineering; Operations Research & Management Science
GA 111LN
UT WOS:000316522900008
ER

PT B
AU Jain, A
   Sarnobat, R
   Simpson, TW
AF Jain, Avanti
   Sarnobat, Rahul
   Simpson, Timothy W.
GP ASME
TI DEVELOPMENT OF A PRODUCT FAMILY ANALYSIS TOOLKIT FOR SYSTEMATIC
   BENCHMARKING
SO PROCEEDINGS OF THE ASME INTERNATIONAL DESIGN ENGINEERING TECHNICAL
   CONFERENCES AND COMPUTERS AND INFORMATION IN ENGINEERING CONFERENCE
   2010, VOL 1, PTS A AND B
LA English
DT Proceedings Paper
CT ASME International Design Engineering Technical Conferences / Computers
   and Information in Engineering Conference
CY AUG 15-18, 2010
CL Montreal, CANADA
SP Amer Soc Mech Engineers, Design Engn Div, Amer Soc Mech Engineers, Comp & Informat Engn Div
ID DESIGN; COMMONALITY; DECOMPOSITION
AB As global markets saturate and competition intensifies, many manufacturers are focusing on benchmarking families of products alongside individual products to gain valuable insight and strategic advantage over their competitors. Unfortunately, the advantages of benchmarking families of products are often undermined by the limited capability of current benchmarking tools to assist in this process. While methods have been proposed for product family analysis and benchmarking, a major problem is the way in which the component details are collected, and few of the methods have been integrated together. Benchmarking and product family analysis is also time-consuming and subject to human variability since the process is typically done manually without the aid of software. To address these problems, we introduce the Product Family Analysis Toolkit (PFA Toolkit), which combines several popular benchmarking tools to streamline and standardize the process of product family benchmarking. We describe the toolkit's features and capabilities and then discuss its functionality and usability. The advantages of automating the product family benchmarking process are discussed along with future work.
C1 [Jain, Avanti; Sarnobat, Rahul; Simpson, Timothy W.] Penn State Univ, Harold & Inge Marcus Dept Ind & Mfg Engn, University Pk, PA 16802 USA.
RP Simpson, TW (reprint author), Penn State Univ, Harold & Inge Marcus Dept Ind & Mfg Engn, University Pk, PA 16802 USA.
EM tws8@psu.edu
CR Bhutta K. S., 1999, BENCHMARKING INT J, V6, P254, DOI 10.1108/14635779910289261
   Browning TR, 2001, IEEE T ENG MANAGE, V48, P292, DOI 10.1109/17.946528
   Camp R., 1989, BENCHMARKING SEARCH
   Cooper R. G., 2001, WINNING NEW PRODUCTS, P178
   David H., 1998, COMPUT AIDED DESIGN, V30, P105
   Dobberfuhl A., 2009, ASME INT DES ENG TEC
   Eckert C, 2004, RES ENG DES, V15, P1, DOI 10.1007/s00163-003-0031-7
   Farrell R. S., 2008, J MECH DESIGN, V130
   Halman J. I. M., 2005, PRODUCT PLATFORM PRO, P27
   Halman J. I. M., 2006, PRODUCT PLATFORM PRO, P107
   Harrington H. J., 1996, COMPLETE BENCHMARKIN
   HAUSER JR, 1988, HARVARD BUS REV, V66, P63
   Hoffman C., 2006, WIRED, V14, P136
   Huang CC, 1998, IEEE T SYST MAN CY A, V28, P66
   Jose A, 2005, J INTELL MANUF, V16, P371, DOI 10.1007/s10845-005-7030-7
   Korpela J, 1996, IEEE T ENG MANAGE, V43, P323, DOI 10.1109/17.511842
   Kota S, 2000, J MECH DESIGN, V122, P403, DOI 10.1115/1.1320820
   KUSIAK A, 1995, J MECH DESIGN, V117, P17
   Martin M. V., 2002, Research in Engineering Design, V13, DOI 10.1007/s00163-002-0020-2
   McKinsey&Co, 1991, MAN PROD CREAT MAN O
   Melnyk S. A., 2000, BACK BASICS YOUR GUI
   Otto KN, 1998, RES ENG DES, V10, P226, DOI 10.1007/s001639870003
   Pimmler T.U., 1994, ASME DE, P343
   RISSANEN J, 1978, AUTOMATICA, V14, P465, DOI 10.1016/0005-1098(78)90005-5
   Rogers J. L., 2006, TM200621429 NASA
   Sansone F. P., 1993, APPLIANCE MANUFACTUR, V41, P71
   Sheridan D., 2001, APPLIANCE MANUFACTUR, V49, P82
   Spendolini M. J., 1992, BENCHMARKING BOOK
   Swift K. G., 1997, PROCESS SELCTION DES
   Thabeau R. E., 2001, THESIS MIT CAMBRIDGE
   Thevenot H. J., 2007, ASME INT DES ENG TEC
   Thevenot H. J., 2009, J MECH DESIGN, V131
   Thevenot HJ, 2007, DESIGN STUD, V28, P175, DOI 10.1016/j.destud.2006.07.004
   Thevenot HJ, 2006, J ENG DESIGN, V17, P99, DOI 10.1080/09544820500275693
   THOMAS LD, 1991, OPER RES, V39, P677, DOI 10.1287/opre.39.4.677
   Thompson I., 1997, SUPPLY MANAGEMENT, P40
   ULRICH K, 1995, RES POLICY, V24, P419, DOI 10.1016/0048-7333(94)00775-3
   Ulrich KT, 1998, MANAGE SCI, V44, P352, DOI 10.1287/mnsc.44.3.352
   WHITFIELD R, 2002, 7 INT C ART INT DES
   Whitney D. E., 2004, MECH ASSEMBLIES THEI
   Ye XL, 2009, INT J PROD RES, V47, P3559, DOI 10.1080/00207540802183646
   Yu T., 2003, ASME INT DES ENG TEC
   Yu TL, 2007, RES ENG DES, V18, P91, DOI 10.1007/s00163-007-0030-1
NR 43
TC 1
Z9 1
PU AMER SOC MECHANICAL ENGINEERS
PI NEW YORK
PA THREE PARK AVENUE, NEW YORK, NY 10016-5990 USA
BN 978-0-7918-4409-0
PY 2010
BP 857
EP 867
PG 11
WC Automation & Control Systems; Engineering, Manufacturing; Engineering,
   Mechanical
SC Automation & Control Systems; Engineering
GA BFJ25
UT WOS:000320093200078
ER

PT S
AU Gomaa, H
AF Gomaa, H
BE Nord, RL
TI Designing software product lines with the Unified Modeling Language
   (UML)
SO SOFTWARE PRODUCT LINES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Software Product Lines (SPLC 2004)
CY AUG 30-SEP 02, 2004
CL Boston, MA
C1 George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
RP Gomaa, H (reprint author), George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
EM hgomaa@gmu.edu
NR 0
TC 1
Z9 1
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-22918-3
J9 LECT NOTES COMPUT SC
PY 2004
VL 3154
BP 317
EP 317
PG 1
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BAU85
UT WOS:000223656200029
ER

PT B
AU Ahmed, F
   Capretz, LF
AF Ahmed, Faheem
   Capretz, Luiz Femando
GP IEEE
TI Best practices of RUP (R) in software product line development
SO 2008 INTERNATIONAL CONFERENCE ON COMPUTER AND COMMUNICATION ENGINEERING,
   VOLS 1-3
LA English
DT Proceedings Paper
CT International Conference on Computer and Communication Engineering
CY MAY 13-15, 2008
CL Kuala Lumpur, MALAYSIA
SP Int Islam Univ Malaysia, Fac Engn
AB Software industry has always been tried to figure out the best practices of software development in order to increase the success rate of software projects. Rational Unified Process presents and incorporates the six best practices of software industry to achieve the goals of high quality, reliable, cost effective and within schedule software projects. We present the concept of managing RUP (R) best practices in the development of software product lines. This concept further strengthens the core activities present in the process of software product line development. We implemented this approach in developing an E-Commerce Software Product Line presented as case study in this paper.
C1 [Ahmed, Faheem] United Arab Emirates Univ, Coll Informat Technol, Abu Dhabi, U Arab Emirates.
RP Ahmed, F (reprint author), United Arab Emirates Univ, Coll Informat Technol, POB 17555, Abu Dhabi, U Arab Emirates.
EM f.ahmed@uaeu.ac.ae; lcapretz@uwo.ca
RI Capretz, Luiz/K-5944-2013
OI Capretz, Luiz/0000-0001-6966-2369
CR AHMED F, 2002, P 5 INT C ENT INF SY, P523
   Clements P, 2002, SOFTWARE PRODUCT LIN
   *IBM, RUP BEST PRACT SOFTW
   KRUEGER CW, 2000, P 3 IEEE S APPL SPEC
   *SEI, 2008, SOFTW PROD LIN
NR 5
TC 1
Z9 1
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
BN 978-1-4244-2357-6
PY 2008
BP 1363
EP 1366
DI 10.1109/ICCCE.2008.4580828
PG 4
WC Computer Science, Theory & Methods; Engineering, Electrical &
   Electronic; Telecommunications
SC Computer Science; Engineering; Telecommunications
GA BIH97
UT WOS:000259601400273
ER

PT J
AU Damasevicius, R
   Stuikys, V
AF Damasevicius, Robertas
   Stuikys, Vytautas
TI High-Level Models for Transformation-Oriented Design of Hardware and
   Embedded Systems
SO ADVANCES IN ELECTRICAL AND COMPUTER ENGINEERING
LA English
DT Article
DE design automation; transformation; hardware and embedded system design
ID COMPONENT DESIGN; PRODUCT LINE
AB Evolution of design methodologies follows a common trail: technology scaling leads to growing design complexity and rising abstraction level in the domain. Introduction of new (higher) abstraction levels emphasizes the importance of reuse and transformations. The design process can be seen as a sequence of high-level transformations from the higher-level specification to the lower-level one. We analyze high-level modeling and metaprogramming techniques for supporting transformations based on domain variability models. Next, we present a reuse evolution model for domain component design at a higher abstraction level to support the transformation-oriented approaches. Finally, high-level modeling techniques (UML-domain language metamodels for domain code generation, parameterized UML classes for template metaprogramming, feature models for explicit representation of variability) for specification of transformations and metaprograms are analyzed.
C1 [Damasevicius, Robertas; Stuikys, Vytautas] Kaunas Univ Technol, Kaunas, Lithuania.
RP Damasevicius, R (reprint author), Kaunas Univ Technol, Kaunas, Lithuania.
EM robertas.damasevicius@ktu.lt
CR Aarts E., 2003, Proceedings Design, Automation and Test in Europe Conference and Exhibition
   Abrahams D., 2004, C TEMPLATE METAPROGR
   AKEHURST DH, 2002, 5 INT C SPRING VERL, P243
   Bailey B., 2005, TAXONOMIES DEV VERIF
   BEIERLEIN T, 2004, 2 RTAS WORKSH MOD DR
   Boehm B. W., 1988, IEEE COMPUT, V21, P61
   CARLONI LP, 2002, P 28 EUR SOL STAT CI, P25
   CZARNECKI K, 2003, OOPSLA 03 WORSKH GEN
   Damasevicius R, 2003, INFORMATICA-LITHUAN, V14, P3
   Damasevicius R., 2005, Information Technology and Control, V34
   Damasevicius R, 2004, ASIA S PACIF DES AUT, P244, DOI 10.1109/ASPDAC.2004.1337574
   Damasevicius R., 2006, INT J COMPUTER SCI I, V1, P67
   DAMASEVICIUS R, 2008, ELECT ELECT ENG, V8, P9
   Damasevicius R., 2003, Proceedings 2003. Design Automation Conference (IEEE Cat. No.03CH37451)
   Damasevicius R, 2008, LECT NOTES COMPUT SC, V5292, P338, DOI 10.1007/978-3-540-88030-1_32
   DEELSTRA S, 2003, P WORKSH MOD DRIV AR, P109
   de Moor O, 1999, LECT NOTES COMPUT SC, V1608, P116
   Doucet F., 2003, Proceedings Design, Automation and Test in Europe Conference and Exhibition
   Edwards M, 2003, UML REAL DESIGN EMBE, P127
   ENTRENA L, 2001, FORUM DESIGN LANGUAG
   FAVRE JM, 2003, ELISA 2003 ASS ICSM
   Gerstlauer A., 2002, P 15 INT S SYST SYNT, P231
   GITZEL R, 2005, TAXONOMY METAMODEL H
   GOGOLLA M, 2002, WORKSH SOFTW MOD ENG
   JANTSH A, 2001, IEEE DESIGN TEST COM
   JONG G, 2002, P DES AUT TEST EUR D, P776
   JUDSON SR, 2003, WISME UML 2003 UML W
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Karsai G, 2004, IEEE T CONTR SYST T, V12, P263, DOI 10.1109/TCST.2004.824311
   KEATING M, 2001, REUSE METHODOLOGY MA
   Kim HK, 2006, LECT NOTES COMPUT SC, V3982, P163
   KOVSE J, 2002, OOPSLA 2002 WORKSH G
   Kuulusa M, 1997, IEEE DES TEST COMPUT, V14, P60, DOI 10.1109/54.632882
   KUZNIARZ L, 2003, SOFTWARE ENG APPL 03
   LAU KK, 2005, 31 EUR C SOFTW ENG A
   Lavagno L., 2003, UML REAL DESIGN EMBE
   Ledeczi A, 2001, PROCEEDINGS OF THE 2001 IEEE INTERNATIONAL CONFERENCE ON CONTROL APPLICATIONS (CCA'01), P756, DOI 10.1109/CCA.2001.973959
   Lee EA, 1998, IEEE T COMPUT AID D, V17, P1217, DOI 10.1109/43.736561
   Levendovszky T, 2002, LECT NOTES COMPUT SC, V2319, P166
   Martin G., 2002, Proceedings 2002 Design, Automation and Test in Europe Conference and Exhibition, DOI 10.1109/DATE.2002.998386
   MARTIN G, 2004, MPSOC 04
   Mens T, 2005, P LANG ENG MOD DRIV
   MULLER PA, 2004, OOPSLA GPCE WORKSH B
   Muller W., 2003, SYSTEMC METHODOLOGIE
   NCDUNURI S, 2004, OOPSLA GPCE WORKSH B
   *OMG, MOF METAOBJECT FAC
   ORR D, 2005, OOPSLA WORKSH BEST P
   Rowson J. A., 1997, Proceedings 1997. Design Automation Conference, 34th DAC
   Sangiovanni-Vincentelli A, 2001, IEEE DES TEST COMPUT, V18, P23, DOI 10.1109/54.970421
   SCHATTKOWSKY T, 2004, P 7 IEEE INT S OBJ O, P121
   Schatz B, 2002, SPRINGER LNCS
   SEYLER F, 2002, WORKSH SOFTW MOD ENG
   Sgroi M., 2001, Proceedings of the 38th Design Automation Conference (IEEE Cat. No.01CH37232), DOI 10.1109/DAC.2001.935591
   SHEARD T, 2001, LECT NOTES COMPUTER, V2196, P2
   Stuikys V, 2004, INFORMATICA-LITHUAN, V15, P111
   Stuikys V, 2002, SYSTEM ON CHIP DESIGN LANGUAGES, P235
   Stuikys V, 2007, INF TECHNOL CONTROL, V36, P16
   Stuikys V, 2003, AMBIENT INTELLIGENCE: IMPACT ON EMBEDDED SYSTEM DESIGN, P229
   Tratt L, 2005, J SOFTWARE SYSTEMS M, V4, P112
   VANWIJNGAARDEN J, 2003, UUCS2003048 I INF CO
   WU W, 2000, FORUM DESIGN LANGUAG
   ZHU Q, 2002, P 15 INT S SYST SYNT, P249
   2005, DOMAIN ENG DOMAIN AN
NR 63
TC 1
Z9 1
PU UNIV SUCEAVA, FAC ELECTRICAL ENG
PI SUCEAVA
PA UNIV SUCEAVA, FAC ELECTRICAL ENG, STEFAN CEL MARE, UNIVERSITATII 13,
   SUCEAVA, 720229, ROMANIA
SN 1582-7445
J9 ADV ELECTR COMPUT EN
JI Adv. Electr. Comput. Eng.
PY 2008
VL 8
IS 2
BP 86
EP 94
PG 9
WC Computer Science, Artificial Intelligence; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA 427YM
UT WOS:000264815000016
ER

PT S
AU Murguzur, A
   Sagardui, G
   Intxausti, K
   Trujillo, S
AF Murguzur, Aitor
   Sagardui, Goiuria
   Intxausti, Karmele
   Trujillo, Salvador
BE Franch, X
   Soffer, P
TI Process Variability through Automated Late Selection of Fragments
SO ADVANCED INFORMATION SYSTEMS ENGINEERING WORKSHOPS (CAISE)
SE Lecture Notes in Business Information Processing
LA English
DT Proceedings Paper
CT 25th International Conference on Advanced Information Systems
   Engineering (CAiSE)
CY JUN 17-21, 2013
CL Valencia, SPAIN
DE Business Process Flexibility; Late Binding; Runtime Variability; Process
   Mining
ID SOFTWARE PRODUCT LINES; FEATURE MODELS; FRAMEWORK
AB Process-aware information systems must encompass business process flexibility support due to business needs and factors coming from assorted sources, changing market conditions, customer needs, and regulations. However, flexibility may not be always achieved by pre-specified processes whereby, when context information is only available at runtime, decision making should be deferred to execution time. The late selection pattern defers the selection of placeholder activities' implementations, binding applicable process fragments at runtime. This paper presents the foundations of a novel approach for an end-to-end variability management of process models through late selection of fragments by means of: (i) managing process fragments separately from the base model, (ii) resolving variation points automatically considering constraints and context data at runtime, and (iii) enabling process fragment recommendations based on experience logs.
C1 [Murguzur, Aitor; Intxausti, Karmele; Trujillo, Salvador] IK4 IKERLAN Res Ctr, Arrasate Mondragon, Spain.
RP Murguzur, A (reprint author), IK4 IKERLAN Res Ctr, Arrasate Mondragon, Spain.
EM amurguzur@ikerlan.es; gsagardui@mondragon.edu; kintxausti@ikerlan.es;
   strujillo@ikerlan.es
CR Adams M, 2006, LECT NOTES COMPUT SC, V4275, P291
   Ardagna D, 2011, IEEE SOFTWARE, V28, P61, DOI 10.1109/MS.2011.28
   Ayora C., 2012, VARY
   Baresi L, 2012, COMPUTER, V45, P42, DOI 10.1109/MC.2012.289
   Bayer J., 2006, SPLC
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Burkhart T., 2011, COMPUTING INFORM, V30
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Charfi A., 2009, ICWS JUL
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Hallerbach A, 2010, J SOFTW MAINT EVOL-R, V22, P519, DOI 10.1002/smr.491
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Kemsley S., 2011, LNCS, V6896, P2
   Koning M., 2009, INFORM SOFTWARE TECH, V51
   Lanz A, 2011, LECT NOTES BUS INF P, V72, P174
   Pesic M, 2007, LECT NOTES COMPUT SC, V4803, P77
   Reichert M., 2011, LNCS, V6747, P2
   Reichert M., 2012, ENABLING FLEXIBILITY
   Rosemann M., 2008, INT J BUSINESS PROCE
   Salfner F., 2010, CSUR, V42
   Santos Rocha R.D., 2013, INFORM SOFTWARE TECH
   Schonenberg M. H., 2008, ADV ENTERPRISE ENG, VI, P16
   Valenca G., 2013, IJCSIT, V5
   van der Aalst W.M.P., 2013, ISRN SOFTWARE ENG
   van der Aalst WMP, 2010, LECT NOTES COMPUT SC, V6051, P38, DOI 10.1007/978-3-642-13094-6_5
   Weber B., 2011, INF SYSTEMS EVOLUTIO
   Weber Barbara, 2009, Computer Science - Research and Development, V23, DOI 10.1007/S00450-009-0069-5
   Weske M., 2007, BUSINESS PROCESS MAN, V1st
NR 29
TC 1
Z9 1
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 1865-1348
BN 978-3-642-38490-5; 978-3-642-38489-9
J9 LECT NOTES BUS INF P
PY 2013
VL 148
BP 371
EP 385
PG 15
WC Computer Science, Artificial Intelligence; Computer Science, Information
   Systems; Computer Science, Software Engineering
SC Computer Science
GA BB7AM
UT WOS:000345280400035
ER

PT J
AU Guo, JM
   Czarnecki, K
   Apel, S
   Siegmund, N
   Wasowski, A
AF Guo, Jianmei
   Czarnecki, Krzysztof
   Apel, Sven
   Siegmund, Norbert
   Wasowski, Andrzej
GP IEEE
TI Variability-Aware Performance Prediction: A Statistical Learning
   Approach
SO 2013 28TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE
   ENGINEERING (ASE)
SE IEEE ACM International Conference on Automated Software Engineering
LA English
DT Proceedings Paper
CT 28th IEEE/ACM International Conference on Automated Software Engineering
   (ASE)
CY NOV 11-15, 2013
CL Palo Alto, CA
SP IEEE, Assoc Comp Machinery, IEEE Comp Soc, Tech Council Software Engn, Special Interest Grp Software Engn, Assoc Comp Machinery, SIGART, NASA, Stinger Ghaffarian Technologies, Google, Microsoft, D Risq Software Syst
ID SOFTWARE PRODUCT LINES; SELECTION
AB Configurable software systems allow stakeholders to derive program variants by selecting features. Understanding the correlation between feature selections and performance is important for stakeholders to be able to derive a program variant that meets their requirements. A major challenge in practice is to accurately predict performance based on a small sample of measured variants, especially when features interact. We propose a variability-aware approach to performance prediction via statistical learning. The approach works progressively with random samples, without additional effort to detect feature interactions. Empirical results on six real-world case studies demonstrate an average of 94% prediction accuracy based on small random samples. Furthermore, we investigate why the approach works by a comparative analysis of performance distributions. Finally, we compare our approach to an existing technique and guide users to choose one or the other in practice.
C1 [Guo, Jianmei; Czarnecki, Krzysztof] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
RP Guo, JM (reprint author), Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Apel S., 2009, J OBJECT TECHNOLOGY, V8, P49
   Batory D, 2006, COMMUN ACM, V49, P45, DOI 10.1145/1183236.1183264
   Berk RA, 2008, SPRINGER SER STAT, P1, DOI 10.1007/978-0-387-77501-2_1
   Breiman L, 1984, CLASSICATION REGRESS
   Chen SP, 2005, J SYST SOFTWARE, V74, P35, DOI 10.1016/j.jss.2003.05.005
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Happe J, 2011, IEEE SOFTWARE, V28, P27, DOI 10.1109/MS.2011.25
   Hastie T., 2009, ELEMENTS STAT LEARNI
   Herzig K., 2013, P ICSE
   Kang K., 1990, SEI90TR021 CMU
   Liebig J., 2013, P ESEC FSE
   Murashkin A., 2013, P SPLC
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Ramirez A., 2011, P MODELS
   Sayyad A., 2013, P ICSE
   Siegmund N., 2012, P ICSE
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Sincero J., 2010, P APSEC
   Tawhid R., 2011, P SPLC
   Thereska E., 2010, P SIGMETRICS
   Westermann D., 2012, P ASE
   Williams G, 2011, USE R, P3, DOI 10.1007/978-1-4419-9890-3
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stvr.430, 10.1002/stv.430]
NR 27
TC 1
Z9 1
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
SN 1527-1366
BN 978-1-4799-0215-6
J9 IEEE INT CONF AUTOM
PY 2013
BP 301
EP 311
PG 11
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA BA0EP
UT WOS:000331090200031
ER

PT J
AU Pascual, GG
   Pinto, M
   Fuentes, L
AF Pascual, Gustavo G.
   Pinto, Monica
   Fuentes, Lidia
BE Litoiu, M
   Mylopoulos, J
TI Run-Time Adaptation of Mobile Applications using Genetic Algorithms
SO PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING
   FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013)
LA English
DT Proceedings Paper
CT 8th International Symposium on Software Engineering for Adaptive and
   Self-Managing Systems (SEAMS)
CY MAY 20-21, 2013
CL San Francisco, CA
SP IEEE, Assoc Comp Machinery, Assoc Comp Machinery Special Interest Grp Software Engn, IEEE Comp Soc, IEEE Comp Soc Tech Council Software Engn
DE Dynamic Reconfiguration; Context; Middleware; Feature Models; Genetic
   Algorithms; Autonomic Computing
ID SOFTWARE PRODUCT LINES; MIDDLEWARE
AB Mobile applications run in environments where the context is continuously changing. Therefore, it is necessary to provide support for the run-time adaptation of these applications. This support is usually achieved by middleware platforms that offer a context-aware dynamic reconfiguration service. However, the main shortcoming of existing approaches is that both the list of possible configurations and the plans to adapt the application to a new configuration are usually specified at design-time. In this paper we present an approach that allows the automatic generation at run-time of application configurations and of reconfiguration plans. Moreover, the generated configurations are optimal regarding the provided functionality and, more importantly, without exceeding the available resources (e. g. battery). This is performed by: (1) having the information about the application variability available at runtime using feature models, and (2) using a genetic algorithm that allows generating an optimal configuration at runtime. We have specified a case study and evaluated our approach, and the results show that it is efficient enough as to be used on mobile devices without introducing an excessive overhead.
C1 [Pascual, Gustavo G.; Pinto, Monica; Fuentes, Lidia] Univ Malaga, CAOSD Grp, E-29071 Malaga, Spain.
RP Pascual, GG (reprint author), Univ Malaga, CAOSD Grp, E-29071 Malaga, Spain.
EM gustavo@lcc.uma.es; pinto@lcc.uma.es; lff@lcc.uma.es
RI Pinto, Monica/G-1891-2015
OI Pinto, Monica/0000-0002-5376-742X
CR Acher M, 2010, LECT NOTES COMPUT SC, V6138, P3, DOI 10.1007/978-3-642-13595-8_3
   Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   Barbosa EA, 2011, LECT NOTES COMPUT SC, V6903, P139
   [Anonymous], 2009, J SYSTEMS SOFTWARE, V82, P1268
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benavides D., 2005, ADV INFORM SYSTEMS E, P381
   Blouin A., 2011, ACM SIGCHI S ENG INT, P85
   Brataas G., 2007, P INT WORKSH DYN SOF, P23
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   Choi Y., 2005, COMP INF SCI 2005 4, P258
   Cuervo E, 2010, P 8 INT C MOB SYST A, P49, DOI [10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   Gamez N, 2011, LECT NOTES COMPUT SC, V6903, P164, DOI 10.1007/978-3-642-23798-0_16
   Gu T, 2005, J NETW COMPUT APPL, V28, P1, DOI 10.1016/j.jnca.2004.06.002
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   IBM, 2005, AUT COMP WHIT PAP AR
   Janik A, 2010, INFORM SOFTWARE TECH, V52, P380, DOI 10.1016/j.infsof.2009.10.006
   Kang K. C., 1990, FEATURE ORIENTED DOM
   Kastner C, 2009, PROC INT CONF SOFTW, P611, DOI 10.1109/ICSE.2009.5070568
   Matinlassi M, 2004, PROC INT CONF SOFTW, P127, DOI 10.1109/ICSE.2004.1317435
   Morin B, 2009, LECT NOTES COMPUT SC, V5795, P690
   Pascual G. G., 2011, P CAISE DOCT CONS, V731
   Pashov I., 2004, ENG COMPUTER BASED S, P406
   Paspallis N., 2009, MIDDLEWARE BASED DEV
   Robak S., 2002, International Journal of Applied Mathematics and Computer Science, V12
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164
   Trumler W, 2006, PERS UBIQUIT COMPUT, V10, P7, DOI 10.1007/s00779-005-0029-4
   Ziadi T., 2006, SOFTWARE PRODUCT LIN, P557, DOI 10.1007/978-3-540-33253-4_15
NR 29
TC 1
Z9 2
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
BN 978-1-4673-4401-2
PY 2013
BP 73
EP 82
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BIF10
UT WOS:000327972300008
ER

PT B
AU Faulk, SR
   Harmon, RR
   Raffo, DM
AF Faulk, SR
   Harmon, RR
   Raffo, DM
BE Donohoe, P
TI Value-based software engineering (VBSE) - A value-driven approach to
   product-line engineering
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE software product line; product line economics; value driver; customer
   value; value-based software engineering
AB We consider a set of programs a family when it pays to look at their common aspects before looking at their differences. For commercial software developers the implications are twofold: First, making rational decisions about product-line processes and products requires the ability to answer the question: "Does it pay?" Second, whether or not something pays is ultimately a business (rather than software engineering) question. In short, making sound software engineering decisions requires understanding the business implications of those decisions, and vice versa. This paper describes work in progress to develop a product-line process model and common value metric that adequately link product value drivers (what it pays) with the software engineering decisions that affect those drivers. We describe a systematic approach to quantifying the return on both product and process improvements, based on common software engineering principles and a common value metric, customer value.
C1 Univ Oregon, Eugene, OR 97403 USA.
RP Faulk, SR (reprint author), Univ Oregon, Eugene, OR 97403 USA.
CR BASS FM, 1972, J MARKETING RES 0209, P93
   Bass L., 1998, SOFTWARE ARCHITECTUR
   Belk R., 1974, J MARKETING RES, P156
   BELK RW, 1975, J CONSUM RES, V2, P157, DOI 10.1086/208627
   CAMPBELL G, 1990, INTRO SYNTHESIS INTR
   CAMPBELL GR, 1994, IEEE SOFTWARE    SEP
   CONWAY M, 1968, DATAMATION       APR, P37
   Cuka D. A., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685727
   DEBAUD JM, 1999, P 21 INT C SOFTW ENG
   Dijkstra E. W., 1972, STRUCTURED PROGRAMMI
   FAULK SR, 2000, P 22 INT C SOFTW ENG
   HARMON RR, 1997, P PROTL INT C MAN EN, P896
   HARMON RR, 1982, J MARKETING RES  MAY, P255
   Hauser J.R., 1988, HARVARD BUSINESS MAY, P63
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   MCCONNELL S, 1996, RAPID DEV TANTING WI
   MILLINGTON D, 1995, IEEE SOFTWARE    SEP, P54
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, DOI 10.1109/TSE.1976.233797
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Raffo DM, 1996, THESIS CARNEGIE MELL
   RAFFO DM, 1999, J SYSTEMS SOFTWA APR, V46
   RAFFO DM, 2000, IN PRESS J SYSTEMS S
   Urban G. L., 1991, ADV MARKETING STRATE
NR 24
TC 1
Z9 1
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 205
EP 223
PG 19
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500012
ER

PT B
AU Schnieders, A
   Weske, M
AF Schnieders, Arnd
   Weske, Mathias
BE Doumeingts, G
   Muller, J
   Morel, G
   Vallespir, B
TI Activity diagram based process family architectures for enterprise
   application families
SO ENTERPRISE INTEROPERABILITY: NEW CHALLENGES AND APPROACHES
LA English
DT Proceedings Paper
CT 2nd International Conference on Interoperability for Enterprise Software
   and Applications
CY MAR 20-24, 2006
CL Bordeaux, FRANCE
SP ESA, Interop, LAPS, IFAC, IFIP, Univ Bordeaux, Aquitaine, GdR MACS, Athena, CNRS, Adeiso, ENSEIRB
DE process family engineering; business process variability; process
   configuration; software product lines; variability mechanisms
C1 Univ Potsdam, Hasso Plattner Inst IT Syst Engn, D-14482 Potsdam, Germany.
RP Schnieders, A (reprint author), Univ Potsdam, Hasso Plattner Inst IT Syst Engn, Prof Dr Helmert Str 2-3, D-14482 Potsdam, Germany.
EM arnd.schnieders@hpi.uni-potsdam.de; mathias.weske@hpi.uni-potsdam.de
CR BACHMAN F, 2001, P 2001 S SOFTW REUS
   Bosch J, 2000, DESIGN USE SOFTWARE
   Clements P.C., 2001, SEI SERIES SOFTWARE
   Gamma E, 1995, DESIGN PATTERNS ELEM, V1st
   GOMAA H., 2004, DESIGNING SOFTWARE P
   GOMAA H, 2004, P 37 ANN HAW INT C S
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   *OMG, 2003, UML 2 0 SUPERSTRUCTU
   Pender T., 2003, UML BIBLE
   PLOTNER D, 2005, 202005 PESOA
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Puhlmann F., 2005, 172005 PESOA
   SCHNIEDERS A, 2006, IN PRESS P 13 ANN IE
   SCHNIEDERS A, 2005, P 8 INT C BUS INF SY
   SVAHNBERG M, 2003, LECTURE NOTES COMPUT, V146
NR 16
TC 1
Z9 1
PU SPRINGER-VERLAG LONDON LTD
PI GODALMING
PA SWEETAPPLE HOUSE CATTESHALL RD FARNCOMBE, GODALMING GU7 1NH, SURREY,
   ENGLAND
BN 978-1-84628-713-8
PY 2007
BP 67
EP 76
DI 10.1007/978-1-84628-714-5_7
PG 10
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering
SC Computer Science
GA BGB64
UT WOS:000245920500007
ER

PT J
AU Neto, PADS
   Machado, ID
   McGregor, JD
   de Almeida, ES
   Meira, SRD
AF da Mota Silveira Neto, Paulo Anselmo
   Machado, Ivan do Carmo
   McGregor, John D.
   de Almeida, Eduardo Santana
   de Lemos Meira, Silvio Romero
TI A systematic mapping study of software product lines testing (vol 53, pg
   407, 2011)
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Correction
C1 [da Mota Silveira Neto, Paulo Anselmo; Machado, Ivan do Carmo; de Almeida, Eduardo Santana; de Lemos Meira, Silvio Romero] RiSE, Recife, PE, Brazil.
   [da Mota Silveira Neto, Paulo Anselmo; Machado, Ivan do Carmo; de Lemos Meira, Silvio Romero] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
   [de Almeida, Eduardo Santana] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [McGregor, John D.] Clemson Univ, Dept Comp Sci, Clemson, SC USA.
RP Neto, PADS (reprint author), RiSE, Recife, PE, Brazil.
EM pauloadmsn@gmail.com; ivanmachado@gmail.com; esa@dcc.ufba.br
RI Machado, Ivan/E-7228-2013
OI Machado, Ivan/0000-0001-9027-2293
CR Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
NR 1
TC 1
Z9 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUL
PY 2012
VL 54
IS 7
BP 802
EP 802
DI 10.1016/j.infsof.2012.01.003
PG 1
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA 946WG
UT WOS:000304387600009
ER

PT J
AU Wei, JX
   Ma, YS
AF Wei, Jingxing
   Ma, Y. -S.
TI Design of a feature-based order acceptance and scheduling module in an
   ERP system
SO COMPUTERS IN INDUSTRY
LA English
DT Article
DE Order acceptance and scheduling; Customer feature; Unified feature
   modeling; Feature-based informatics; ERP
ID PRODUCT DEVELOPMENT; MASS CUSTOMIZATION; SUPPLY CHAIN; JOB-SHOP;
   CUSTOMER; MANAGEMENT; CLASSIFICATION; METHODOLOGY; ENVIRONMENT;
   INTEGRATION
AB Customer-oriented manufacturing competes on timely responses to customer requirements, and precise scheduling control for delivery. This challenge demands engineering design and production planning to be fully integrated via advanced enterprise resource planning (ERP) systems. This paper proposes a generic feature association method and a detailed framework that can unify product and process models in order to satisfy customer orders with small batch sizes and high variations. A conceptual solution is introduced by integrating two traditionally separate feature domains: design configuration features and manufacturing process features. To achieve the proposed method, a customer feature class is suggested for the characterization of customers' profiles related to the manufacturer. An instantiated customer feature object functionally tracks each customer's selection of product configurations related to its requirements, specific orders, and production schedules with dynamic associations to the live manufacturing capacity. With the new associative integration method, a preliminary order acceptance system (OAS) prototype system has been implemented within an ERP order management system and its conceptual structure model is demonstrated within a multi-facet feature framework. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Wei, Jingxing; Ma, Y. -S.] Univ Alberta, Dept Mech Engn, Edmonton, AB T6G 2G8, Canada.
RP Ma, YS (reprint author), Univ Alberta, Dept Mech Engn, Edmonton, AB T6G 2G8, Canada.
EM yongsheng.ma@ualberta.ca
FU Canada NSERC [355454-09]; MITACS
FX The authors would like to acknowledge the funding support from a Canada
   NSERC discovery grant (No. 355454-09) and MITACS for supporting Mr.
   Jingxing Wei's industrial internship at McCoy Drilling and Completions
   Farr in Edmonton, Alberta, Canada. We would also like to declare that
   the case study carried out was based on a product from McCoy. The
   authors appreciate very much the assistance from Mr. Bin Ma, a senior
   engineer at McCoy, who introduced the tong assembly working mechanism.
CR Akkermans HA, 2003, EUR J OPER RES, V146, P284, DOI 10.1016/S0377-2217(02)00550-7
   Chen J, 2012, ADV INTEL SYS RES, V19, P120
   Chen JQ, 2012, APPL MECH MATER, V190-191, P156, DOI 10.4028/www.scientific.net/AMM.190-191.156
   Delbressine F.L.M., 1993, CIPR ANN MANUFACTURI, V42, P527, DOI 10.1016/S0007-8506(07)62501-3
   Ebben MJR, 2005, OR SPECTRUM, V27, P107, DOI 10.1007/s00291-004-0171-9
   Gao J, 2004, ROBOT CIM-INT MANUF, V20, P457, DOI 10.1016/j.rcim.2004.05.001
   Gao JX, 2002, INT J PROD RES, V40, P2041, DOI 10.1080/00207540210128170
   Helander MG, 2002, TECHNOVATION, V22, P717, DOI 10.1016/S0166-4972(01)00074-8
   Hohn W., 2012, P 14 WORKSH ALG ENG
   Jiao J, 2006, COMPUT IND, V57, P231, DOI 10.1016/j.compind.2005.12.001
   Lee C, 2011, INT J ADV MANUF TECH, V53, P399, DOI 10.1007/s00170-010-2833-x
   Li CH, 1999, INFORM SYST MANAGE, V16, P31, DOI 10.1201/1078/43197.16.3.19990601/31313.5
   Lin JT, 2010, COMPUT IND ENG, V59, P720, DOI 10.1016/j.cie.2010.07.026
   Ma YS, 2007, INT J ADV MANUF TECH, V32, P434, DOI 10.1007/s00170-005-0371-8
   Ma YS, 2008, J INTELL MANUF, V19, P625, DOI 10.1007/s10845-008-0128-y
   Mielke A, 2006, PERFORM EVALUATION, V63, P635, DOI 10.1016/j.peva.2005.05.006
   Moreira MRA, 2009, INT J PROD RES, V47, P2805, DOI 10.1080/00207540701725083
   Ngai EWT, 2009, EXPERT SYST APPL, V36, P2592, DOI 10.1016/j.eswa.2008.02.021
   Piller FT, 2004, PROD PLAN CONTROL, V15, P435, DOI [10.1080/0953728042000238773, 10.1080/095372804200238773]
   Qian ZG, 2006, INT J PROD RES, V44, P2913, DOI 10.1080/00207540600632240
   QIAO LH, 1994, COMPUT IND, V25, P83, DOI 10.1016/0166-3615(94)90035-3
   Reichhart A, 2007, INT J OPER PROD MAN, V27, P1144, DOI [10.1108/01443570710830575, 10.1108/0144357071WO575]
   Roundy R, 2005, IIE TRANS, V37, P1093, DOI 10.1080/07408170500288042
   Slotnick SA, 2011, EUR J OPER RES, V212, P1, DOI 10.1016/j.ejor.2010.09.042
   Thimm G, 2006, COMPUT IND, V57, P331, DOI 10.1016/j.compind.2005.09.003
   van't Erve A.H., 1986, CIPR ANN MANUFACTURI, V35, P325, DOI 10.1016/S0007-8506(07)61899-X
   Wang CB, 2005, COMPUT IND, V56, P305, DOI 10.1016/j.compind.2004.10.003
   Wei J., 2012, P 8 IEEE INT C AUT S, P968
   WESTER FAW, 1992, INT J PROD RES, V30, P1313, DOI 10.1080/00207549208942959
   Willaert SSA, 1998, J ENG TECHNOL MANAGE, V15, P87, DOI 10.1016/S0923-4748(97)00026-X
   Yang SM, 2006, INT J ADV MANUF TECH, V28, P1031, DOI 10.1007/s00170-004-2450-7
   Zhang L., 2004, ASIA PACIFIC MANAGEM, V9, P851
   Zhang LL, 2010, COMPUT IND, V61, P213, DOI 10.1016/j.compind.2009.09.003
NR 33
TC 1
Z9 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0166-3615
EI 1872-6194
J9 COMPUT IND
JI Comput. Ind.
PD JAN
PY 2014
VL 65
IS 1
BP 64
EP 78
DI 10.1016/j.compind.2013.07.009
PG 15
WC Computer Science, Interdisciplinary Applications
SC Computer Science
GA 268PJ
UT WOS:000328182700005
ER

PT J
AU Laguna, MA
   Marques, JM
   Rodriguez-Cano, G
AF Laguna, Miguel A.
   Marques, Jose M.
   Rodriguez-Cano, Guillermo
TI Feature Diagram Formalization Based on Directed Hypergraphs
SO COMPUTER SCIENCE AND INFORMATION SYSTEMS
LA English
DT Article
DE feature diagram; hypergraph; feature diagram configuration
ID FEATURE MODELS
AB Feature models are used to represent the variability and commonality of software product lines (SPL), and to decide on the configuration of specific applications. Several variants based on tree or graph hierarchical structures have been proposed. These structures are completed with additional constraints, generally expressed in parallel with the feature diagram. This paper proposes the use of hypergraphs to integrate both concepts in a unique characterization. Therefore, the definition, validation and selection of feature configurations can be internally based on the hypergraph properties and well-known algorithms, while the concrete visual syntax remains unchanged for domain engineers. The implemented hypergraph algorithms have been tested using a complete set of feature diagrams. Finally a feature meta-model can be derived directly from the formal definitions, providing the foundations for building feature modeling tools.
C1 [Laguna, Miguel A.; Marques, Jose M.] Univ Valladolid, Dept Comp Sci, E-47011 Valladolid, Spain.
RP Laguna, MA (reprint author), Univ Valladolid, Dept Comp Sci, Campus M Delibes, E-47011 Valladolid, Spain.
EM mlaguna@infor.uva.es; jmmc@infor.uva.es; wileeam@acm.org
RI Laguna, Miguel A./F-9886-2010; Rodriguez Cano, Guillermo/
OI Rodriguez Cano, Guillermo/0000-0003-1025-826X
CR Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Bosch J, 2000, DESIGN USE SOFTWARE
   Cechticky V, 2004, LECT NOTES COMPUT SC, V3107, P101
   CZARNECKI, 2005, SOFTWARE PROCESS IMP, V10, P7
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.225
   Gallo G., 1998, DECISIONS EC FINANCE, V21, P97, DOI 10.1007/BF02735318
   GALLO G, 1993, DISCRETE APPL MATH, V42, P177, DOI 10.1016/0166-218X(93)90045-P
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   Kang K., 1990, CMUSEI90TR21
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Laguna M., 2007, 6 INT C GEN PROGR CO
   LAGUNA MA, 2009, IEEE P EUROMICRO SEE
   Lau S. Q., 2006, THESIS U WATERLOO CA
   Mendonca M., 2008, J SOFTWARE, V3, P69
   Mendonca M., 2009, 24 ANN ACM SIGPLAN C, P761
   RIEBISCH M, 2002, P 6 C INT DES PROC T
   RODRIGUEZCANO G, 2010, THESIS DEP INFORM TE
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
NR 20
TC 1
Z9 1
PU COMSIS CONSORTIUM
PI NOVI SAD
PA UNIV NOVI SAD, FAC TECH SCI, TRG DOSITEJA OBRADOVICA 6, NOVI SAD, 21000,
   SERBIA
SN 1820-0214
J9 COMPUT SCI INF SYST
JI Comput. Sci. Inf. Syst.
PD JUN
PY 2011
VL 8
IS 3
BP 611
EP 633
DI 10.2298/CSIS100804016L
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA 823MX
UT WOS:000295127500006
ER

PT J
AU Dogan, S
   Betin-Can, A
   Garousi, V
AF Dogan, Serdar
   Betin-Can, Aysu
   Garousi, Vahid
TI Web application testing: A systematic literature review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Systematic literature review; Web application; Testing
ID SOFTWARE PRODUCT LINES; DATABASE APPLICATIONS; INPUT-VALIDATION;
   COVERAGE; FRAMEWORK; AUTOMATE
AB Context: The web has had a significant impact on all aspects of our society. As our society relies more and more on the web, the dependability of web applications has become increasingly important. To make these applications more dependable, for the past decade researchers have proposed various techniques for testing web-based software applications. Our literature search for related studies retrieved 193 papers in the area of web application testing, which have appeared between 2000 and 2013.
   Objective: As this research area matures and the number of related papers increases, it is important to systematically identify, analyze, and classify the publications and provide an overview of the trends and empirical evidence in this specialized field.
   Methods: We systematically review the body of knowledge related to functional testing of web application through a systematic literature review (SLR) study. This SLR is a follow-up and complimentary study to a recent systematic mapping (SM) study that we conducted in this area. As part of this study, we pose three sets of research questions, define selection and exclusion criteria, and synthesize the empirical evidence in this area.
   Results: Our pool of studies includes a set of 95 papers (from the 193 retrieved papers) published in the area of web application testing between 2000 and 2013. The data extracted during our SLR study is available through a publicly-accessible online repository. Among our results are the followings: (1) the list of test tools in this area and their capabilities, (2) the types of test models and fault models proposed in this domain, (3) the way the empirical studies in this area have been designed and reported, and (4) the state of empirical evidence and industrial relevance.
   Conclusion: We discuss the emerging trends in web application testing, and discuss the implications for researchers and practitioners in this area. The results of our SLR can help researchers to obtain an overview of existing web application testing approaches, fault models, tools, metrics and empirical evidence, and subsequently identify areas in the field that require more attention from the research community. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Dogan, Serdar; Betin-Can, Aysu; Garousi, Vahid] Middle E Tech Univ, Dept Informat Syst, Inst Informat, TR-06531 Ankara, Turkey.
   [Dogan, Serdar] ASELSAN AS, Ankara, Turkey.
   [Garousi, Vahid] Univ Calgary, Dept Elect & Comp Engn, Schulich Sch Engn, Software Qual Engn Res Grp SoftQual, Calgary, AB, Canada.
   [Garousi, Vahid] Atilim Univ, Dept Software Engn, Ankara, Turkey.
RP Garousi, V (reprint author), Univ Calgary, Dept Elect & Comp Engn, Schulich Sch Engn, Software Qual Engn Res Grp SoftQual, Calgary, AB, Canada.
EM serdardogan@aselsan.com.tr; betincan@metu.edu.tr; vgarousi@ucalgary.ca
RI Betin Can, Aysu/C-2035-2013
FU Visiting Scientist Fellowship Program of the Scientific and
   Technological Research Council of Turkey (TUBITAK) [2221]; University of
   Calgary; Natural Sciences and Engineering Research Council of Canada
   (NSERC)
FX This work was supported by the Visiting Scientist Fellowship Program
   (#2221) of the Scientific and Technological Research Council of Turkey
   (TUBITAK). Vahid Garousi was additionally supported by the University of
   Calgary and the Natural Sciences and Engineering Research Council of
   Canada (NSERC).
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alalfi M.H., 2010, EUR C SOFTW MAINT RE, P51
   Alalfi MH, 2009, SOFTW TEST VERIF REL, V19, P265, DOI 10.1002/stvr.401
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alshahwan N., 2011, INT C AUT SOFTW ENG, P3
   Alshahwan N., 2009, IEEE INT S WEB SYST, P49
   Alshahwan N., 2012, IEEE INT C SOFTW TES, P151
   Amalfitano D, 2010, Proceedings of the 12th IEEE International Symposium on Web Systems Evolution (WSE 2010), DOI 10.1109/WSE.2010.5623569
   Amalfitano D., 2010, ICST WORKSH, P274
   Amyot D, 2005, LECT NOTES COMPUT SC, V3530, P247
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI 10.1007/s10270-004-0077-7
   Andrews AA, 2010, INFORM SOFTWARE TECH, V52, P52, DOI 10.1016/j.infsof.2009.06.002
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], IEEE INT C SOFTW MAI, P587
   Artzi S., 2010, P 32 ACM IEEE INT C, V1, P265, DOI 10.1145/1806799.1806840
   Artzi S, 2008, P INT S SOFTW TEST A, P261, DOI 10.1145/1390630.1390662
   Artzi S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P571, DOI 10.1145/1985793.1985871
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Barmi ZA, 2011, P 2011 IEEE 4 INT C, P476
   Bellettini C., 2005, P 2005 ACM S APPL CO, P1694, DOI 10.1145/1066677.1067060
   Benedikt M., 2002, P INT WORLD WID WEB
   Binder R.V., 1996, P TOOLS 23 TECHN OBJ, pp374
   Bordbar B, 2006, LECT NOTES COMPUT SC, V3888, P44
   Bozkurt M., 2010, TR1001 KINGS COLL DE
   Canfora G., 2008, ISSSE, P78
   Castelluccia D., 2006, ELECT NOTES THEORETI, V157, P61, DOI 10.1016/j.entcs.2006.01.023
   Choudhary S.R., 2012, INT C SOFTW TEST VER, P171
   Choudum SA, 2011, INT J COMPUT MATH, V88, P1, DOI 10.1080/00207160903406554
   Cooper H., 2009, HDB RES SYNTHESIS ME
   Cruzes D. S., 2011, Proceedings of the 2011 5th International Symposium on Empirical Software Engineering and Measurement (ESEM 2011), DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Cruzes D.S., 2010, P ACM IEEE INT S EMP
   Dallmeier V, 2013, LECT NOTES BUS INF P, V133, P55
   Deng Y., 2004, ACM SIGSOFT SOFTWARE, V29, P1, DOI 10.1145/1022494.1022528
   Di Lucca G.A., 2006, IEEE INT S WEB SIT E, P7
   Di Sciascio E, 2005, LECT NOTES COMPUT SC, V3579, P69
   Dobolyi K., 2010, P 19 INT S SOFTW TES, P97, DOI 10.1145/1831708.1831720
   Dobolyi K., 2010, INT J SOFTWARE TOOLS, V13, P111
   Dogan S., 2013, ONLINE SLR DATA WEB
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Elberzhager F, 2012, INFORM SOFTWARE TECH, V54, P1, DOI 10.1016/j.infsof.2011.06.003
   Eldh S, 2006, TAIC PART - Testing: Academic & Industrial Conference - Practice and Research Techniques, Proceedings, P159, DOI 10.1109/TAIC-PART.2006.1
   Emits J., 2009, P IFIP WG INT C TEST, V5826, P211
   Endo A.T., 2010, BRAZ WORKSH SYST AUT, P89
   Engstrom E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Engstrom E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Ettema T., 2010, P IEEE ACM INT C AUT, P235
   Feldt R., 2010, P SOFTW ENG KNOWL EN
   Garousi V, 2013, INFORM SOFTWARE TECH, V55, P1374, DOI 10.1016/j.infsof.2013.02.006
   Garousi V., 2012, ONLINE PAPER REPOSIT
   Gerlits Y., 2010, P 4 SPRING SUMM YOUN, P50
   Grindal M., 2005, SOFTWARE TESTING VER, V15
   Halfond W.G.J., 2008, P ACM SIGSOFT INT S, P181
   Halfond W.G.J., 2007, P 6 JOINT M EUR SOFT, P145, DOI 10.1145/1287624.1287646
   Halfond WGJ, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P285
   Halfond WGJ, 2006, IEEE INT CONF AUTOM, P69
   Hao J., 2006, P 6 INT C WEB ENG IC, P17, DOI 10.1145/1145581.1145585
   Harman M., 2008, 2008 INT C SOFTW TES, P298, DOI 10.1109/ICST.2008.56
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, DOI 10.1145/152388.152391
   Hellmann T.D., 2010, AGILE SOFTWARE DEV C
   Hu W.I.C.C., 2002, J INF SCI ENG, V18, P59
   Insfran E, 2008, LECT NOTES COMPUT SC, V5176, P81, DOI 10.1007/978-3-540-85200-1_10
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jensen S. H., 2011, P ACM SIGSOFT S EUR, P59
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jia Y., 2013, MUTATION TESTING PAP
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kallepalli C, 2001, IEEE T SOFTWARE ENG, V27, P1023, DOI 10.1109/32.965342
   Kam B., 2009, P INT C INF TECHN NE
   Kitchenham B., 2007, EVIDENCE BASED SOFTW
   Koopman P., 2007, LNCS, V4902, P299
   Li N, 2010, J SYST SOFTWARE, V83, P2263, DOI 10.1016/j.jss.2010.07.007
   Liborg N.K., 2004, STUDY THREATS VALIDI
   Licata D. R., 2004, Proceedings. 19th International Conference on Automated Software Engineering, DOI 10.1109/ASE.2004.1342734
   Liu CH, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84
   Liu CH, 2006, INFORM SOFTWARE TECH, V48, P1137, DOI 10.1016/j.infsof.2006.06.003
   Liu H, 2008, J SYST SOFTWARE, V81, P222, DOI 10.1016/j.jss.2007.05.007
   Lucca G. A. D., 2006, INFORM SOFTWARE TECH, V48, P1172
   Lucca G.D., 2002, P INT C SOFTW MAINT, P310
   Luo XM, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P336, DOI 10.1109/ICST.2009.51
   Mansour N, 2006, INFORM SOFTWARE TECH, V48, P31, DOI 10.1016/j.infsof.2005.02.007
   Marback A., 2012, IEEE INT C VER VAL, P221
   Marchetto A., 2008, ICST 08, P121
   Marchetto A., 2010, EMPIR SOFTW ENG, V16, P103
   Marchetto A., 2007, IEEE INT WORKSH WEB, P31
   Marchetto A, 2008, SERA 2008: 6TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P161
   Marchetto Alessandro, 2008, International Journal on Software Tools for Technology Transfer, V10, DOI 10.1007/s10009-008-0086-x
   Matos E.C.B., 2010, INNOVATIONS SYSTEMS, V6, P163
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Memon AM, 2010, ADV COMPUT, V80, P121, DOI 10.1016/S0065-2458(10)80003-8
   Mesbah A, 2012, IEEE T SOFTWARE ENG, V38, P35, DOI 10.1109/TSE.2011.28
   Mesbah A, 2009, PROC INT CONF SOFTW, P210, DOI 10.1109/ICSE.2009.5070522
   Mesbah A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/1985793.1985870
   Minamide Y., 2005, P 14 INT WORLD WID W, P432, DOI 10.1145/1060745.1060809
   Mirshokraie S., 2013, IEEE INT C SOFTW TES
   Mirshokraie S., 2012, WEB ENG, V1, P238
   Neto C.R.L., 2012, P INT C SOFTW ENG KN
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Neto PADS, 2011, IEEE SOFTWARE, V28, P16
   Offutt J., 2009, SOFTWARE SYSTEMS MOD, V9, P257
   Offutt J., 2004, IEEE INT S SOFTW REL, P187
   Ozkinaci Mehmet Erdal, 2011, Proceedings of the 6th International Conference on Software and Database Technologies. ICSOFT 2011
   Palacios M, 2011, INFORM SOFTWARE TECH, V53, P171, DOI 10.1016/j.infsof.2010.11.014
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, DOI 10.1007/s10009-009-0118-1
   Pattabiraman K., 2010, IEEE INT S SOFTW REL, P191
   Peng X., 2011, J PHYS SCI, V6, P3232
   Petersen K., 2008, P 12 INT C EV ASS SO
   Praphamontripong U., 2010, INT C SOFTW TEST VER, P132
   Qi Y, 2006, INFORM SOFTWARE TECH, V48, P1159, DOI 10.1016/j.infsof.2006.06.005
   Raffelt H., 2008, P 2008 WORKSH TEST A, P1, DOI 10.1145/1390832.1390833
   Ran LH, 2009, INFORM SOFTWARE TECH, V51, P460, DOI 10.1016/j.infsof.2008.05.016
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Ricca F, 2002, ANN SOFTW ENG, V14, P93, DOI 10.1023/A:1020549507418
   Ricca F., 2002, Proceedings Second IEEE International Workshop on Source Code Analysis and Manipulation, DOI 10.1109/SCAM.2002.1134112
   Roest Danny, 2010, ICST, P127
   Sakamoto K, 2013, LECT NOTES COMPUT SC, V7793, P343, DOI 10.1007/978-3-642-37057-1_25
   Sampath S, 2006, ISSRE 2006:17th International Symposium on Software Reliability Engineering, Proceedings, P266
   Sampath S, 2004, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSM.2004.1357795
   Sampath S., 2008, INT C SOFTW TEST VER, V1, P141
   Sampath S., 2005, COMPUTER INFORM SCI
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   Sampath S., 2006, P WORKSH TEST AN VER
   Saxena P, 2010, P IEEE S SECUR PRIV, P513, DOI 10.1109/SP.2010.38
   Shull F., 2008, GUIDE ADV EMPIRICAL
   Song B, 2009, THIRD INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P174, DOI 10.1109/TASE.2009.54
   Souzas SRS, 2011, P WORKSH PAR DISTR S, P1
   Sprenkle S., 2005, P 20 INT C AUT SOFTW, P253, DOI 10.1145/1101908.1101947
   Sprenkle S., 2012, IEEE INT C SOFTW TES, P161
   Sprenkle S, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P117
   Sprenkle S., 2011, IEEE INT C SOFTW TES, P230
   Sprenkle S., 2005, INT C SOFTW ENG KNOW, P488
   Sprenkle S, 2008, TACI PART 2008:TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI [10.1109/TAIC-PART.2008.19, 10.1109/TAIC.PART.2008.19]
   Stepien Bernard, 2008, International Journal on Software Tools for Technology Transfer, V10, DOI 10.1007/s10009-008-0082-1
   Thummalapenta S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P162
   Tian J., 2006, ADV COMPUT, V67, P178
   TONELLA P, 2004, IWWE, P11
   Tonella P., 2005, Automated Software Engineering, V12, DOI 10.1007/s10515-005-6208-8
   Tonella P, 2004, J SOFTW MAINT EVOL-R, V16, P103, DOI 10.1002/smr.284
   Tonella P., 2002, Proceedings Fourth International Workshop on Web Site Evolution. WSE 2002, DOI 10.1109/WSE.2002.1134088
   Torsel A.M., 2013, IEEE INT C SOFTW TES
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Weyuker E. J., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), DOI 10.1109/METRIC.1993.263796
   Xiong WL, 2005, LECT NOTES COMPUT SC, V3579, P87
   Zakaria Z, 2009, ASIA PAC SOFWR ENG, P316, DOI 10.1109/APSEC.2009.72
   Zhang Y., 2013, REPOSITORY PUBLICATI
   Zheng Y., 2011, DISTRIBUTION, V195, P805
NR 146
TC 1
Z9 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2014
VL 91
SI SI
BP 174
EP 201
DI 10.1016/j.jss.2014.01.010
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA AE5BA
UT WOS:000334001600013
ER

PT J
AU Chou, SC
   Chen, YC
AF Chou, SC
   Chen, YC
TI Retrieving reusable components with variation points from software
   product
SO INFORMATION PROCESSING LETTERS
LA English
DT Article
DE software product line; variation point; reuse; retrieval; feature;
   software engineering
AB Reusing software through software product lines has been recognized as useful. To improve reuse efficiency, retrieving proper systems or subsystems from software product lines for reuse is an important issue. This paper proposes a technique to retrieve reusable software systems/subsystems from software product lines. (c) 2006 Elsevier B.V. All rights reserved.
C1 Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Hualien 974, Taiwan.
RP Chou, SC (reprint author), Natl Dong Hwa Univ, Dept Comp Sci & Informat Engn, Hualien 974, Taiwan.
EM scchou@mail.ndhu.edu.tw
CR Clements P, 2002, SOFTWARE PRODUCT LIN
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Fey D, 2002, P 2 SOFTW PROD LIN C, P198
   Gurp J.V., 2001, P WORK IEEE IFIP C S, P45
   Hemer D., 2001, Proceedings 2001 Australian Software Engineering Conference, DOI 10.1109/ASWEC.2001.948517
   HONG SB, 1997, P INT C INF COMM SIG, V3, P9
   JARING M, 2002, P 2 SOFTW PROD LIN C, P15
   KANG KC, CMUSEI90TR21 ESD90TR
   KRUEGER CW, 2002, P 2 INT SOFTW PROD L, P37
   Penix J., 1995, Proceedings. The 10th Knowledge-Based Software Engineering Conference (Cat. No.95TB100008), DOI 10.1109/KBSE.1995.490128
   Sugumaran V., 2003, ACM SIGMIS DATABASE, V34, P8, DOI 10.1145/937742.937745
   YAO H, 2004, P 42 ANN SE REG C, P110, DOI 10.1145/986537.986564
NR 12
TC 1
Z9 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0020-0190
J9 INFORM PROCESS LETT
JI Inf. Process. Lett.
PD AUG 16
PY 2006
VL 99
IS 3
BP 106
EP 110
DI 10.1016/j.ipl.2006.02.015
PG 5
WC Computer Science, Information Systems
SC Computer Science
GA 055VI
UT WOS:000238478300006
ER

PT S
AU Althoff, KD
   Decker, B
   Hanft, A
   Manz, J
   Newo, R
   Nick, M
   Rech, J
   Schaaf, M
AF Althoff, Klaus-Dieter
   Decker, Bjoern
   Hanft, Alexandre
   Maenz, Jens
   Newo, Regis
   Nick, Markus
   Rech, Joerg
   Schaaf, Martin
BE Perner, P
TI Intelligent information systems for knowledge work(ers)
SO ADVANCES IN DATA MINING: APPLICATIONS IN MEDICINE, WEB MINING,
   MARKETING, IMAGE AND SIGNAL MINING
SE LECTURE NOTES IN ARTIFICIAL INTELLIGENCE
LA English
DT Article; Proceedings Paper
CT 6th Industrial Conference on Data Mining (ICDM 2006)
CY JUL 14-15, 2006
CL Leipzig, GERMANY
AB Our society needs and expects more high-value services. Such "knowledge-intensive" services can only be delivered if the necessary organizational and technical requirements are fulfilled. In addition, the cost-benefit analysis from the service provider point of view needs to be positive. Continuous improvement and goal-directed (partial) automation of such services is therefore of crucial importance. As a contribution to this we describe our current research vision for (partially) automated support of knowledge work(ers) based on intelligent information systems focusing on the use of experience. For the implementation of such a vision we base on the integration of approaches from artificial intelligence and software engineering. A "deep" integration of case-based reasoning and experience factory is a first successful step in this direction [33,28]. We envision the further integration of software product-lines and multi-agent systems as the next one.
C1 Univ Hildesheim, Inst Comp Sci, Lab Intelligent Informat Syst, Hildesheim, Germany.
   Fraunhofer Inst Expt Software Engn, Dept Experience Management, Kaiserslautern, Germany.
RP Althoff, KD (reprint author), Univ Hildesheim, Inst Comp Sci, Lab Intelligent Informat Syst, Hildesheim, Germany.
EM althoff@iis.uni-hildesheim.de; decker@iese.fraunhofer.de;
   hanft@iis.uni-hildesheim.de; maenz@iis.uni-hildesheim.de;
   newo@iis.uni-hildesheim.de; nick@iese.fraunhofer.de;
   rech@iese.fraunhofer.de; schaaf@iis.uni-hildesheim.de
CR AAMODT A, 1994, AI COMMUN, V7, P39
   AHA DW, 1999, P ICCBR 99 WORKSH TU
   Althoff K. D., 2005, P 6 WORKSH DAYS GERM
   Althoff K., 1989, 5. Osterreichische Artifical-Intelligence Tagung. Proceedings (5th Austrian Artificial Intelligence Meeting. Proceedings)
   Althoff K.-D., 1995, REV IND CASE BASED R
   ALTHOFF KD, IN PRESS LECT NOTES
   Althoff Klaus-Dieter, 2001, HDB SOFTWARE ENG KNO, V1, P549
   BARTSCHSPORL B, 1987, KI, V4, P32
   Basili V., 1994, ENCY SOFTWARE ENG, V1, P528
   BASILI VR, 1992, P 14 INT C SOFTW ENG
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   BASILI VR, 1985, P 1 PANP COMP C MELB
   Basili VR, 1994, ENCY SOFTWARE ENG, V1, P469
   Bergmann R., 2003, LNAI, V1612
   Bibel W., 2004, CONVERGING TECHNOLOG
   BULLINGER HJ, 2003, WIRTSCHAFTSINF, V1, P1
   BURKHARD HD, HDB KUNSTLICHEN INTE, V4, P943
   CRAMER J, MANAGEMENT WISSENSIN, P179
   DECKER B, P LERN WISS AD 2004, P138
   DUCATEL K, 2001, SCENARIOS AMBIENT IN
   HERMANN S, 2003, INTEGRIERTER SCHLUSS
   HERMANN S, PRODUKTIVE WISSENSAR, P204
   KIEHL M, 2003, ARBEITSMARKETENTWICK
   Kolodner J, 1993, CASE BASED REASONING
   MUTHIG D, KI 2 2005, P5
   NICK M, 2005, THESIS U KAISERSLAUT
   RECH J, ARTIFICIAL INTELLIGE, P5
   Schank R. C., 1982, DYNAMIC MEMORY THEOR
   SCHMID K, ARTIFICIAL INTELLIGE, P33
   Schmid K., 2002, THESIS U KAISERSLAUT
   TAUTZ C, 2000, THESIS U KAISERSLAUT
   Watson I., 2003, APPL KNOWLEDGE MANAG
   WEI G, 1999, MULTIAGENT SYSTEMS M
   Willke H, 1998, Z SOZIOL, V27, P161
NR 34
TC 1
Z9 1
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-36036-0
J9 LECT NOTES ARTIF INT
PY 2006
VL 4065
BP 539
EP 547
PG 9
WC Computer Science, Artificial Intelligence; Computer Science, Information
   Systems
SC Computer Science
GA BEV61
UT WOS:000239623700042
ER

PT J
AU Lopez-Herrejon, RE
   Linsbauer, L
   Galindo, JA
   Parejo, JA
   Benavides, D
   Segura, S
   Egyed, A
AF Lopez-Herrejon, Roberto E.
   Linsbauer, Lukas
   Galindo, Jose A.
   Parejo, Jose A.
   Benavides, David
   Segura, Sergio
   Egyed, Alexander
TI An assessment of search-based techniques for reverse engineering feature
   models
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Feature model; Reverse engineering; Search Based Software Engineering
ID ALGORITHMS
AB Successful software evolves from a single system by adding and changing functionality to keep up with users' demands and to cater to their similar and different requirements. Nowadays it is a common practice to offer a system in many variants such as community, professional, or academic editions. Each variant provides different functionality described in terms of features. Software Product Line Engineering (SPLE) is an effective software development paradigm for this scenario. At the core of SPLE is variability modelling whose goal is to represent the combinations of features that distinguish the system variants using feature models, the de facto standard for such task. As SPLE practices are becoming more pervasive, reverse engineering feature models from the feature descriptions of each individual variant has become an active research subject. In this paper we evaluated, for this reverse engineering task, three standard search based techniques (evolutionary algorithms, hill climbing, and random search) with two objective functions on 74 SPLs. We compared their performance using precision and recall, and found a clear trade-off between these two metrics which we further reified into a third objective function based on F-beta, an information retrieval measure, that showed a clear performance improvement. We believe that this work sheds light on the great potential of search-based techniques for SPLE tasks. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Lopez-Herrejon, Roberto E.; Linsbauer, Lukas; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, A-4040 Linz, Austria.
   [Galindo, Jose A.; Parejo, Jose A.; Benavides, David; Segura, Sergio] Univ Seville, Dept Comp Languages & Syst, E-41012 Seville, Spain.
RP Lopez-Herrejon, RE (reprint author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Altenbergerstr 69, A-4040 Linz, Austria.
EM roberto.lopez@jku.at; lukas.linsbauer@jku.at; jagalindo@us.es;
   japarejo@us.es; benavides@us.es; sergiosegura@us.es;
   alexander.egyed@jku.at
RI Parejo Maestre, Jose Antonio/A-2822-2009
OI Parejo Maestre, Jose Antonio/0000-0002-4708-4606
FU Austrian Science Fund (FWF) project [P 25289-N15]; Lise Meitner
   Fellowship [M1421-N15]; Marie Curie Actions - Intra-European Fellowship
   (IEF) [254965]; European Commission (FEDER); Spanish Government under
   TAPAS [TIN2012-32273]; Andalusian Government under the Talentia program;
   COPAS project [TIC-1867]
FX This research is partially funded by the Austrian Science Fund (FWF)
   project P 25289-N15 and Lise Meitner Fellowship M1421-N15, and Marie
   Curie Actions - Intra-European Fellowship (IEF) project number 254965.
   This work has been partially supported by the European Commission
   (FEDER), by the Spanish Government under TAPAS (TIN2012-32273) project
   and by the Andalusian Government under the Talentia program, and COPAS
   project (TIC-1867). We thank Michael Affenzeller and his team for their
   support with HeuristicLab for the earlier implementation of our work.
CR Acher M., 2012, 6 INT WORKSH VAR MOD, P45
   Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   Acher M., 2013, SOFTWARE SYSTEMS MOD, P1, DOI 10.1007/s10270-013-0364-2
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Benavides D., 2013, SEMINAL CONTRIBUTION, P361
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benavides D., 2007, VAMOS, V2007-01, P129
   Berger T., 2012, SPLC, P233
   Coello Coello C. A., 2007, GENETIC EVOLUTIONARY, V2nd
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K., 2007, FEATURE DIAGRAMS LOG, P23
   Davril J.-M., 2013, P 2013 9 JOINT M FDN, P290, DOI DOI 10.1145/2491411.2491455
   de Oliveira Barros M., 2011, 00062011 U FED EST R
   Deb K., 2001, MULTIOBJECTIVE OPTIM
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Eiben AE, 2003, INTRO EVOLUTIONARY C
   Frank J., 1951, J AM STAT ASSOC, V46, P68
   Harman M., 2014, SPLC, P5
   Haslinger E. N., 2011, WORK C REV ENG WCRE, P308
   Haslinger EN, 2013, LECT NOTES COMPUT SC, V7793, P53, DOI 10.1007/978-3-642-37057-1_5
   Hetrick W.A., 2006, OOPSLA 2006, P798
   Kang K., 1990, CMUSEI90TR21
   Krueger C.W., 2001, LECT NOTES COMPUTER, V2290, P282
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Lopez-Herrejon R.E., 2014, COMP ANAL CLASSICAL, P387
   Lopez-Herrejon R.E., 2014, CORR
   Lopez-Herrejon R.E., 2012, LNCS, V7515, P168
   Lopez-Herrejon Roberto Erick, 2014, GECCO, P1255
   Luke S., 2009, ESSENTIALS METAHEURI
   Manning CD, 2008, INTRO INFORM RETRIEV
   Mendonca M., 2009, ACM INT C P SERIES, V446, P231
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Poli R., 2008, FIELD GUIDE GENETIC
   Sannier N, 2013, IEEE INT CONF AUTOM, P580, DOI 10.1109/ASE.2013.6693116
   Segura S., 2012, 6 INT WORKSH VAR MOD, P63
   Segura S, 2014, EXPERT SYST APPL, V41, P3975, DOI 10.1016/j.eswa.2013.12.028
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.2307/2333709
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   THUM T, 2009, ICSE, P254
   van der Linden F., 2007, SOFTWARE PRODUCT LIN
   Weston N., 2009, ACM INT C P SERIES, V446, P211
   Yi Li, 2012, REQ ENG C RE 2012 20, P141, DOI DOI 10.1109/RE.2012.6345798
   Zave P., FAQ SHEET FEATURE IN
NR 48
TC 1
Z9 1
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 353
EP 369
DI 10.1016/j.jss.2014.10.037
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA CE6TQ
UT WOS:000351971500024
ER

PT J
AU Wolter, K
   Hotz, L
   Krebs, T
AF Wolter, Katharina
   Hotz, Lothar
   Krebs, Thorsten
BE Blecker, T
   Friedrich, G
TI MODEL-BASED CONFIGURATION SUPPORT FOR SOFTWARE PRODUCT FAMILIES
SO MASS CUSTOMIZATION: CHALLENGES AND SOLUTIONS
SE International Series in Operations Research & Management Science
LA English
DT Proceedings Paper
CT International Mass Customization Meeting
CY JUN, 2005
CL Klagenfurt, AUSTRIA
HO Univ Klagenfurt
DE Product Derivation; Software Product Families; Application Engineering;
   Model-based Configuration; Software Configuration
AB In this paper, we present main aspects of the ConIPF methodology which can be used to derive customer-specific software products. The methodology is based on software product families and model-based configuration. First results from using the methodology in an industrial context are presented.
C1 [Wolter, Katharina; Krebs, Thorsten] Univ Hamburg, Dept Informat, D-22527 Hamburg, Germany.
EM kwolter@informatik.uni-hamburg.de; hotz@informatik.uni-hamburg.de;
   krebs@informatik.uni-hamburg.de
CR ATKINSON C, 2000, P 1 INT SOFTW PROD L
   BAYER J, 2000, 7 IEEE INT C WORKSH, P237
   Bayer J, 1999, P 5 S SOFTW REUS
   Bosch J., 2001, P 4 INT WORKSH PROD
   Davis SM, 1987, FUTURE PERFECT
   GUNTER A, 1999, P CONF AAAI WORKSH, P10
   GUNTER A, 2001, KI, V15, P33
   GUNTER A, 1999, P XPS 99 KNOWL BAS S
   GUNTER A, 1995, WISSENSBASIERTES KON
   HEIN A, 2001, P ECCOP 2001 WORKSH
   HEIN A, 2003, P WORKSH SOFTW VAR M
   HOLLMANN O, 2000, P CONF ECAI 2000 WOR, P94
   HOTZ L, 2003, P SOFTW VAR MAN WORK, P136
   HOTZ L, 2004, P WORKSH PLANN CONF
   HOTZ L, 2005, CONFIGURATI IN PRESS
   Kang K, 1990, CMUSEI90TR021
   KANG K, 2002, IEEE SOFTWARE, V7, P58
   Kiczales Gn., 1991, ART METAOBJECT PROTO
   KREBS T, 2004, P CONF ECAI 2004 WOR, P31
   KREBS T, 2004, P INT C EC TECHN ORG, P79
   Krueger C. W., 2001, SOFTWARE MASS CUSTOM
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   O YL, 2002, 15 EUR C ART INT CON
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, DOI 10.1109/TSE.1976.233797
   Piller F.T., 2003, MASS CUSTOMIZATION N, V6
   RANZE K, 2000, 14 C INN APPL AI
   SEI, FRAM SOFTW PROD LIN
   SOININEN T, 1998, ARTIF INTELL, P357
   Thiel S., 2001, P IN VEH SOFTW 2001, P43
   WOLTER K, 2004, P IFIP 18 WORLD COMP, P323
   2003, VARIANT MANAGEMENT P
NR 31
TC 1
Z9 1
PU SPRINGER
PI NEW YORK
PA 233 SPRING STREET, NEW YORK, NY 10013, UNITED STATES
SN 0884-8289
BN 978-0-387-32224-7
J9 INT SER OPER RES MAN
PY 2006
VL 87
BP 43
EP 61
DI 10.1007/0-387-32224-8_3
PG 19
WC Business; Engineering, Industrial; Engineering, Manufacturing;
   Operations Research & Management Science
SC Business & Economics; Engineering; Operations Research & Management
   Science
GA BLT77
UT WOS:000270992600003
ER

PT S
AU Pankratius, V
   Stucky, W
AF Pankratius, Victor
   Stucky, Wolffried
BE Inverardi, P
   Jazayeri, M
TI A strategy for content reusability with product lines derived from
   experience in Online education
SO Software Engineering Education in the Modern Age
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 27th International Conference on Software Engineering (ICSE 2005)
CY MAY 15-21, 2005
CL St Louis, MO
SP ACM, SIGSOFT, IEEE, IEEE Comp Soc
AB We present our experience made in the course "Information Systems Development" which is entirely taught online at the Virtual Global University (VGU). We identify current technical, economic, and pedagogical problems as well as challenges in online education, which are of interest to educators teaching software engineering online. We argue that despite the existing standards in the area of online learning, the reuse concepts of educational content are still immature, especially with respect to a reuse strategy. Building upon our own experience, we therefore present a proactive strategy to develop and reuse educational content, which is based on concepts that come from the area of software product lines.
C1 Univ Karlsruhe, AIFB Inst, D-76128 Karlsruhe, Germany.
RP Pankratius, V (reprint author), Univ Karlsruhe, AIFB Inst, Kaiserstr 12, D-76128 Karlsruhe, Germany.
CR Adelsberger H., 2002, HDB INFORM TECHNOLOG
   Bosch J, 2000, DESIGN USE SOFTWARE
   BREALEY RA, 2003, FUNDAMENTALS CORPORA
   Clements P., 2002, SEI SERIES SOFTWARE
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Filman R., 2004, ASPECT ORIENTED SOFT
   Jazayeri M., 2000, SOFTWARE ARCHITECTUR
   Kang K., 1990, CMUSEI90TR21
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kotler P., 2005, PRINCIPLES MARKETING, V4th
   LAUDON J, 2003, MANAGEMENT INFORM SY
   MURATA T, 1989, P IEEE, V77, P541, DOI 10.1109/5.24143
   Najjar J., 2003, P 3 ANN ARIADNE C AR, P1
   OBERWEIS A, 2005, 501 U KARLSR I APPL
   PANKRATIUS V, 2005, ICSE 05 P 27 INT C S
   Pankratius V., 2005, INT J KNOWLEDGE LEAR, V1, P229, DOI 10.1504/IJKL.2005.007758
   Pankratius V., 2003, IEEE WORKSH KNOWL GR, P4
   PANKRATIUS V, 2004, S PROF PRACT AI IFIP
   PARNAS D. L., 2001, SOFTWARE FUNDAMENTAL, P193
   Petersonn J., 1977, ACM COMPUT SURV, V9, P223, DOI DOI 10.1145/356698.356702
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Ward J., 2003, Proceedings 2003 Joint Conference on Digital Libraries
NR 22
TC 1
Z9 1
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 978-3-540-68203-5
J9 LECT NOTES COMPUT SC
PY 2006
VL 4309
BP 128
EP 146
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Education, Scientific Disciplines
SC Computer Science; Education & Educational Research
GA BFU83
UT WOS:000244726400009
ER

PT J
AU Pascual, GG
   Pinto, M
   Fuentes, L
AF Pascual, Gustavo G.
   Pinto, Monica
   Fuentes, Lidia
TI Self-adaptation of mobile systems driven by the Common Variability
   Language
SO FUTURE GENERATION COMPUTER SYSTEMS-THE INTERNATIONAL JOURNAL OF GRID
   COMPUTING AND ESCIENCE
LA English
DT Article
DE Architectural variability; CVL; Dynamic reconfiguration; Genetic
   algorithm; Context; Pervasive systems
ID SOFTWARE PRODUCT LINES; MIDDLEWARE
AB The execution context in which pervasive systems or mobile computing run changes continually. Hence, applications for these systems require support for self-adaptation to the continual context changes. Most of the approaches for self-adaptive systems implement a reconfiguration service that receives as input the list of all possible configurations and the plans to switch between them. In this paper we present an alternative approach for the automatic generation of application configurations and the reconfiguration plans at runtime. With our approach, the generated configurations are optimal as regards different criteria, such as functionality or resource consumption (e.g. battery or memory). This is achieved by: (1) modelling architectural variability at design-time using the Common Variability Language (CVL), and (2) using a genetic algorithm that finds nearly-optimal configurations at run-time using the information provided by the variability model. We also specify a case study and we use it to evaluate our approach, showing that it is efficient and suitable for devices with scarce resources. (C) 2014 The Authors. Published by Elsevier B.V. This is an open access article under the CC BY-NC-ND license (http://creativecommons.org/licenses/by-nc-nd/3.0/).
C1 [Pascual, Gustavo G.; Pinto, Monica; Fuentes, Lidia] Univ Malaga, Andalucia Tech, E-29071 Malaga, Spain.
RP Pascual, GG (reprint author), Univ Malaga, Andalucia Tech, E-29071 Malaga, Spain.
EM gustavo@lcc.uma.es; pinto@lcc.uma.es; lff@lcc.uma.es
RI Pinto, Monica/G-1891-2015
OI Pinto, Monica/0000-0002-5376-742X
FU [P09-TIC-5231];  [P12-TIC1814];  [TIN2012-34840];  [INTER-TRUST
   FP7-317731]
FX This work is supported by the projects P09-TIC-5231, P12-TIC1814,
   TIN2012-34840 and INTER-TRUST FP7-317731.
CR Barbosa EA, 2011, LECT NOTES COMPUT SC, V6903, P139
   Ayora C., 2012, P VARIABILITY WORKSH, P26
   Benavides D., 2005, ADV INFORM SYSTEMS E, P381
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Blouin A., 2011, ACM SIGCHI S ENG INT, P85
   Brataas G., 2011, P 15 INT SOFTW PROD, V2, P37
   Brataas G., 2007, SPLC, P23
   Cetina C, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P117, DOI 10.1109/SPLC.2008.13
   Chan ATS, 2003, IEEE T SOFTWARE ENG, V29, P1072, DOI 10.1109/TSE.2003.1265522
   Cheng SW, 2005, LECT NOTES COMPUT SC, V3460, P158
   Cheng SW, 2009, LECT NOTES COMPUT SC, V5525, P71
   Cuervo E, 2010, P 8 INT C MOB SYST A, P49, DOI [10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   Didonet M., 2006, ECL MOD S ECL SUMM E
   Gamez N, 2011, LECT NOTES COMPUT SC, V6903, P164, DOI 10.1007/978-3-642-23798-0_16
   Gomaa H., 2006, 10 INT SOFTW PROD LI, P218, DOI 10.1109/SPLINE.2006.1691600
   Gomaa H., 2010, P ACM S APPL COMP, P462, DOI DOI 10.1145/1774088.1774185
   Gomaa Hassan, 2011, P 15 INT SOFTW PROD, V2
   Gu T, 2005, J NETW COMPUT APPL, V28, P1, DOI 10.1016/j.jnca.2004.06.002
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Haber A., 2011, P 5 EUR C SOFTW ARCH, P6
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   IBM, 2005, AUT COMP WHIT PAP AR
   Janik A, 2010, INFORM SOFTWARE TECH, V52, P380, DOI 10.1016/j.infsof.2009.10.006
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   KRAMER J, 1990, IEEE T SOFTWARE ENG, V16, P1293, DOI 10.1109/32.60317
   Pascual G. G., TECHNICAL REPORT
   Pascual G. G., 2011, P CAISE DOCT CONS CE, V731
   Pascual Gustavo G., 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, DOI 10.1007/978-3-642-38977-1_9
   Paspallis N., MIDDLEWARE BASED DEV
   ROSENMULLER M, 2011, P INT C GEN PROGR CO, P3
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164
   Shen L., 2011, TOP PRODUCTIVITY SOF, P52
   Trinidad P., 2007, SOFTW PROD LIN 11 IN, P51
   Vandewoude Y, 2007, IEEE T SOFTWARE ENG, V33, P856, DOI 10.1109/TSE.2007.70733
   Vassev E., 2012, P C C COMP SCI SOFTW, P113
   White J, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P129
   White J, 2009, J SYST SOFTWARE, V82, P1268, DOI 10.1016/j.jss.2009.02.011
NR 37
TC 1
Z9 1
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0167-739X
EI 1872-7115
J9 FUTURE GENER COMP SY
JI Futur. Gener. Comp. Syst.
PD JUN
PY 2015
VL 47
BP 127
EP 144
DI 10.1016/j.future.2014.08.015
PG 18
WC Computer Science, Theory & Methods
SC Computer Science
GA CE9OW
UT WOS:000352174300010
ER

PT B
AU Kuloor, C
   Eberlein, A
AF Kuloor, C
   Eberlein, A
BE Kawada, S
TI Aspect-oriented requirements engineering for software product lines
SO ECBS 2003: 10TH IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE
   ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS
LA English
DT Proceedings Paper
CT 10th IEEE International Conference and Workshop on the Engineering of
   Computer-Based Systems
CY APR 07-10, 2003
CL HUNTSVILLE, AL
SP IEEE, Comp Soc Tech Comm Engn Comp Based Syst
AB Requirements Engineering (RE) helps to identify, analyze and document system requirements. Proper analysis and understanding of system requirements is important because it helps to discover any requirements defects or mistakes in the early stages of development. Several processes and techniques have been developed to assist requirements engineering activities for product development. However, most Of the existing product line practices do not comprise all the RE activities required for proper identification, analysis and understanding of product line requirements. In this paper, we propose a systematic and iterative RE approach for product line development. The approach includes all the activities required for proper identification, analysis, modeling and specification of product line requirements. In addition to this, it proposes several specific techniques such as aspect-orientation or separation of concerns, product maps and extensible markup language (XML) to assist different RE activities. The concept of aspect-oriented programming is used for analyzing the common and variable requirements. Product maps are used for determining the scope and characteristics of the product family. Extensible markup language (XML) is used for requirements specification and traceability.
C1 Univ Calgary, Dept Elect & Comp Engn, Calgary, AB T2N 1N4, Canada.
RP Kuloor, C (reprint author), Univ Calgary, Dept Elect & Comp Engn, 2500 Univ Dr NW, Calgary, AB T2N 1N4, Canada.
CR BAYER J, 1999, FRAUNHOFER I EXPT SO
   Boehm B, 1981, SOFTWARE ENG EC
   GUPTA NK, 1995, LUCENT TECHNOLOGIES
   Harold Elliotte Rusty, 2001, XML BIBLE, P11
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   Kuloor C., 2002, REQUIREMENTS ENG SOF
   LADDAD R, 2002, JAVA WORLD FUELING I
   Macaulay L. A., 1996, REQUIREMENTS ENG
   Regina M.M Braga., 2001, ODYSSEY REUSE ENV BA
   *SEI, FRAM SOFT PROD LIN P
   Sholom G.Cohen, 1990, CMUSEI90TR21
   *SOFT PROD CONS IN, 1996, SYNTH REUS DRIV SOFT
   SOMMERVILLE GK, 1998, REQUIREMENTS ENG PRO
   SUCCI G, 1999, SENG09 08 CLASS SHER
   WEISS DM, 1997, LUCENT TECHNOLOGIES
   *WORLD WID WEB CON, 2000, EXT MARK LANG XML 1
NR 16
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1917-2
PY 2003
BP 98
EP 107
PG 10
WC Computer Science, Information Systems; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BW60L
UT WOS:000182548800013
ER

PT B
AU Specht, T
   Spath, D
   Weisbecker, A
AF Specht, T
   Spath, D
   Weisbecker, A
BE Salem, MA
   ElHadidi, MT
TI Franiework-based it service engineering
SO Enabling Technologies for the New Knowledge Society
LA English
DT Proceedings Paper
CT ITI 3rd International Conference on Information and Communications
   Technology (ICICT 2005)
CY DEC, 2005
CL Cairo, EGYPT
SP Informat Technol Inst
AB Up to now, IT based online services are mostly developed within singular projects due to the lack of suitable engineering methodologies. Cooperation and reuse between projects are low, and development cost and time prolongate accordingly. The Domain Engineering approach [2] copes with this problem by separating between a general modeling of the whole application domain and a specific application or service within this domain. However, even this approach does not cooperate very well with the later end users, and it takes a rather long time until the first pilot service becomes available. Objective of this paper is to describe a new, two-phased framework-based engineering methodology, which integrates the later users throughout the whole engineering cycle and combines methodological approaches from software and service engineering. Thus software and service become much better interlocked, and whole product lines can be developed efficiently.
C1 Fraunhofer IAO, D-70569 Stuttgart, Germany.
RP Specht, T (reprint author), Fraunhofer IAO, Nobelstr 12, D-70569 Stuttgart, Germany.
CR Beck K, 2004, EXTREME PROGRAMMING, V2nd
   Booch G, 2005, UNIFIED MODELING LAN, V2nd
   BORUSAN A, 2003, TECHNISCHE INFORMATI
   Chrissis M.B., 2003, CMMI GUIDELINES PROC
   Clements P, 2002, SOFTWARE PRODUCT LIN
   FAHNRICH KP, 2003, PRODUCT MODELS SERVI
   JACOBSEN GB, 1999, UNIFIED SOFTWARE DEV
   KOLB R, 2005, OBJECTSPEKTRUM, P74
   MEIREN T, PRODUCTIVITY QUALITY
   MUTHIG D, 2004, OBJECTSPEKTRUM, P66
   SHOSTACK L, EUROPEAN J MARKETING, V16, P49
   SPECHT T, 2005, IEEE C E COMM TECHN
   SPECHT T, 2003, KIVS LEIPZ GERM
NR 13
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
BN 0-7803-9270-1
PY 2005
BP 21
EP 38
PG 18
WC Computer Science, Hardware & Architecture; Computer Science, Information
   Systems; Computer Science, Software Engineering
SC Computer Science
GA BDZ47
UT WOS:000236349800002
ER

PT B
AU Selby, RW
AF Selby, RW
GP IEEE
TI Measurement-driven dashboards enable leading indicators for requirements
   and design of large-scale systems
SO 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS)
LA English
DT Proceedings Paper
CT 11th International Symposium on Software Metrics
CY SEP 19-22, 2005
CL Como, ITALY
ID SOFTWARE PRODUCT LINES; CLASSIFICATION TREES; ARCHITECTURES; PATTERNS
AB Measurement-driven dashboards provide a unifying mechanism for understanding, evaluating, and predicting the development, management, and economics of large-scale systems and processes. Dashboards enable interactive graphical displays of complex information and support flexible analytic capabilities for user customizability and extensibiliry. Dashboards commonly include software requirements and design metrics because they provide leading indicators for project size, growth, and stability. This paper focuses on dashboards that have been used on actual large-scale projects as well as example empirical relationships revealed by the dashboards. The empirical results focus on leading indicators for requirements and design of large-scale systems. In the first set of 14 projects focusing on requirements metrics, the ratio of software requirements to source-lines-of-code averaged 1:46 Projects that far exceeded the 1:46 requirements-to-code ratio tended to be more effort-intensive and fault-prone during verification. In the second set of 16 projects focusing on design metrics, the components in the top quartile of the number of component internal states had 62 times more faults on average than did the components in the bottom quartile, after normalization by si:e. The components in the top quartile of the number of component interactions had 4.3 times more faults on average than did the components in the bottom quartile, after normalization by size. When the number of component internal states was in the bottom quartile, the component fault-proneness was low even when the number of component interactions was in the upper quartiles, regardless of size normalization. Measurement-driven dashboards reveal insights that increase visibility into large-scale systems and provide feedback to organizations and projects.
C1 Northrop Grumman Space Technol, Redondo Beach, CA 90278 USA.
RP Selby, RW (reprint author), Northrop Grumman Space Technol, 1 Space Pk, Redondo Beach, CA 90278 USA.
EM Rick.Selby@NGC.com
CR Bockle G, 2004, IEEE SOFTWARE, V21, P23
   Boehm B, 1981, SOFTWARE ENG EC
   BOEHM B, 1987, IEEE SOFTWARE, V4, P84
   Bosch J, 2003, PROC INT CONF SOFTW, P757, DOI 10.1109/ICSE.2003.1201273
   Bosch J., 2002, Proceedings of the 24th International Conference on Software Engineering. ICSE 2002, DOI 10.1109/ICSE.2002.1008027
   BOSCH J, 1999, P C TECHN OBJ OR LAN, P404, DOI 10.1109/TOOLS.1999.779093
   Bosch J, 2001, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2001.919084
   Box G. E. P., 1978, STAT EXPT
   Brooks Frederick, 1975, MYTHICAL MAN MONTH
   BROOKS WD, 1981, J SYST SOFTWARE, V2, P3, DOI 10.1016/0164-1212(81)90041-8
   Clements P, 2003, PROC INT CONF SOFTW, P740, DOI 10.1109/ICSE.2003.1201264
   Cochran W. G., 1950, EXPT DESIGNS
   Gustafsson J., 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, DOI 10.1109/CSMR.2002.995795
   HUMPHREY WS, 1988, IEEE SOFTWARE, V5, P73, DOI 10.1109/52.2014
   Kazman R, 1996, IEEE SOFTWARE, V13, P47, DOI 10.1109/52.542294
   Klein J, 2003, PROC INT CONF SOFTW, P751, DOI 10.1109/ICSE.2003.1201270
   Mak JKH, 2004, PROC INT CONF SOFTW, P252, DOI 10.1109/ICSE.2004.1317447
   Osterweil L., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3)
   PORTER AA, 1990, J SYST SOFTWARE, V12, P209, DOI 10.1016/0164-1212(90)90041-J
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   Scheffe H, 1959, ANAL VARIANCE
   SELBY RW, 1988, IEEE T SOFTWARE ENG, V14, P1743, DOI 10.1109/32.9061
   Selby R. W., 1989, Proceedings: Conference on Software Maintenance (Cat. No.89CH2744-1), DOI 10.1109/ICSM.1989.65202
   SELBY RW, 1991, P 13 INT C SOFTW ENG
   Soundarajan N, 2004, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2004.1317488
   Vosburgh J., 1984, Proceedings of the 7th International Conference on Software Engineering (cat. no. 84CH2011-5)
   WALSTON CE, 1977, IBM SYST J, V16, P54
NR 27
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
BN 0-7695-2691-8
PY 2005
BP 191
EP 200
PG 10
WC Computer Science, Software Engineering
SC Computer Science
GA BDT32
UT WOS:000235214600021
ER

PT S
AU Clements, P
AF Clements, P
BE Obbink, H
   Pohl, K
TI A competition of software product line economic models
SO SOFTWARE PRODUCT LINES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 9th International Software Product Lines Conference (SPLC 2005)
CY SEP 26-29, 2005
CL Rennes, FRANCE
AB Proponents of different software product line and software reuse economic models will be given a real-world software product line scenario and asked to predict alternate outcomes and to justify - with hard data from their models - some of the difficult choices that need to be made in the scenario. The audience will have a chance to compare, side by side, the predictions, recommendations, insights, intuitive fidelity and ease-of-use of the different models.
C1 Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
RP Clements, P (reprint author), Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
EM clements@sei.cmu.edu
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-28936-4
J9 LECT NOTES COMPUT SC
PY 2005
VL 3714
BP 136
EP 136
PG 1
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BDG27
UT WOS:000233358200015
ER

PT B
BE OBrien, L
TI Software Product Line Hall of Fame
SO SPLC 2006: 10th International Software Product Line Conference,
   Proceedings
LA English
DT Proceedings Paper
CT 10th International Software Product Line Conference (SPLC 2006)
CY AUG 21-24, 2006
CL Baltimore, MD
SP Carnegie Mellon, Software Engn Inst, Philips, MDESystems, Avaya, BigLever Software Inc, Integrated Dynam Inc, MetaCase, Nokia, Pure Syst GmbH
NR 0
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-2599-7
PY 2006
BP 237
EP 237
PG 1
WC Computer Science, Software Engineering
SC Computer Science
GA BFB54
UT WOS:000240796800043
ER

PT B
AU Kolb, R
   Muthig, D
AF Kolb, Ronny
   Muthig, Dirk
BE OBrien, L
TI Architecture-centric quatity engineering for software product lines
SO SPLC 2006: 10th International Software Product Line Conference,
   Proceedings
LA English
DT Proceedings Paper
CT 10th International Software Product Line Conference (SPLC 2006)
CY AUG 21-24, 2006
CL Baltimore, MD
SP Carnegie Mellon, Software Engn Inst, Philips, MDESystems, Avaya, BigLever Software Inc, Integrated Dynam Inc, MetaCase, Nokia, Pure Syst GmbH
C1 Fraunhofer Inst Expt Software Engn, D-67661 Kaiserslautern, Germany.
RP Kolb, R (reprint author), Fraunhofer Inst Expt Software Engn, Fraunhofer Pl 1, D-67661 Kaiserslautern, Germany.
NR 0
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-2599-7
PY 2006
BP 226
EP 226
PG 1
WC Computer Science, Software Engineering
SC Computer Science
GA BFB54
UT WOS:000240796800037
ER

PT B
AU Braganca, A
   Machado, RJ
AF Braganca, Alexandre
   Machado, Ricardo J.
BE OBrien, L
TI Extending UML 2.0 metamodel for complementary usages of the "extend"
   relationship within use case variability specification
SO SPLC 2006: 10th International Software Product Line Conference,
   Proceedings
LA English
DT Proceedings Paper
CT 10th International Software Product Line Conference (SPLC 2006)
CY AUG 21-24, 2006
CL Baltimore, MD
SP Carnegie Mellon, Software Engn Inst, Philips, MDESystems, Avaya, BigLever Software Inc, Integrated Dynam Inc, MetaCase, Nokia, Pure Syst GmbH
AB Software product lines and related approaches, like software factories, are starting to capture the attention of the industry practitioners. Nevertheless, their adoption outside the research community and big companies is still very restricted. We believe that model-driven approaches, like OMG's MDA, with proper tool support, can bring the advantages of product lines to a broader audience. For this to become a reality, model-driven methods should integrate requirements models into the software development process. In this paper, we discuss the semantics Of use case relationships and their formalization using activity diagrams to support variability specification. Particularly, we propose an extension to the << extend >> relationship that supports the adoption of UML 2.0 use case diagrams into model-driven methods. Our proposal results from our work with 4SRS ((4) under bar (S) under bar tep (R) under bar ule (S) under bar et), a model-driven method in which use cases are the central model for requirements specification and model transformation.
C1 IPP, ISEP, Dept Informat Engn, Oporto, Portugal.
RP Braganca, A (reprint author), IPP, ISEP, Dept Informat Engn, Oporto, Portugal.
RI Machado, Ricardo J./B-9487-2011; Braganca, Alexandre/
OI Machado, Ricardo J./0000-0002-3626-2569; Braganca,
   Alexandre/0000-0002-4882-9497
CR BRAGANCA A, 2005, 2 INT WORKSH MOD BAS
   Cockburn A., 2001, WRITING EFFECTIVE US
   ERIKSSON M, 2005, SPLC 2005
   FANTECHI A, 2004, SPLC 2004
   Gomaa H., 2005, DESIGNING SOFTWARE P
   Greenfield J., 2004, SOFTWARE FACTORIES
   GRISS ML, 1998, 5 INT C SOFTW REUS V
   Hurlbut RR, 1998, THESIS ILLINOIS I TE
   Kang K., 1990, CMUSEI90TR21
   LEDECZI A, 2001, WISP 200U BUD HUNG I
   MACHADO RJ, 2005, ECBS INT C WORKSH EN
   METZ P, 2004, J OBJECT TECHNOL MAR
   *OMG UML, 2006, UNIFIED MODELING LAN
   OVERGAARD G, 1998, UML 98 NOT
   PORRES I, 2001, THESIS ABO AKAD U
   STEVENS P, 2001, FASE 01
NR 16
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-2599-7
PY 2006
BP 123
EP 127
PG 5
WC Computer Science, Software Engineering
SC Computer Science
GA BFB54
UT WOS:000240796800013
ER

PT B
AU Apel, S
   Sichting, H
   Leich, T
   Plack, M
AF Apel, Sven
   Sichting, Helge
   Leich, Thomas
   Plack, Marco
BE Callaos, N
   Lesso, W
TI The FATIMA middleware for mobile and pervasive computing
SO WMSCI 2005: 9th World Multi-Conference on Systemics, Cybernetics and
   Informatics, Vol 3
LA English
DT Proceedings Paper
CT 9th World Multi-Conference on Systemics, Cybernetics and Informatics
CY JUL 10-13, 2005
CL Orlando, FL
DE middleware; mobile computing; feature oriented; domain analysis; program
   families
AB Due to the advances in wireless network technology as well as in mobile devices and sensors, a new type of applications is approaching, which can change our every day life. However, there are several open questions in the field of data management, distribution and infrastructures. In this context middleware technology plays a key role. Nowadays middleware technology as CORBA or DCOM cannot deal with the arising problems of resource constraints, heterogeneity and differing application requirements. Due to the growing importance of a pervasive availability of persistent storage, management and retrieval of information, it is important to integrate mobile DBMS and a communication middleware inside a whole infrastructure. This article features a discussion about a program family-based approach: At first, we present our analysis of the domain of mobile and pervasive middleware. Based on the resulting domain feature models, we introduce a basic family-based middleware architecture. Our results show that the degree of configurability of the proposed middleware family is extremely high: at least 36 server and 192 client configurations. Finally, we discuss these approaches to implement more complex middleware functionalities.
C1 Otto Von Guericke Univ, Dept Comp Sci, D-39106 Magdeburg, Germany.
RP Apel, S (reprint author), Otto Von Guericke Univ, Dept Comp Sci, D-39106 Magdeburg, Germany.
CR APEL S, 2005, LECT NOTES COMPUTER, V3437
   APEL S, 2003, LECT NOTES INFORM LN, V43
   APEL S, 2005, P 9 WORLD MULT SYST
   BEUCHE D, 1999, P 2 IEEE INT S OBJ O
   BLAIR GS, 2002, P 1 WORKSH SELF HEAL
   CAPRA L, 2003, IEEE T SOFTWARE ENG, V29
   COLYER A, 2004, P 3 INT C ASP OR SOF
   Czarnecki K., 2000, GENERATIVE PROGRAMIN
   EIDE E, 2004, 10 IEEE REAL TIM EMB
   GILL C, 2003, P 8 INT WORKSH OBJ O
   Kang K., 1990, CMUSEI90TR21
   KON F, 2000, P MIDDL 2000 NEW YOR
   LEDOUX T, 1999, P 2 INT C MET ARCH R
   MCKINNON AD, 2003, P 2 IEEE INT S NETW
   Parnas D.L., 1979, IEEE T SOFTWARE ENG, V5
   ROMAN GC, 2000, P 22 C SOFTWE NG
   Schmidt D.C., 2002, IEEE DISTRIBUTED SYS, V3
   SUBRAMONIAN V, 2004, 10 IEEE REAL TIM EMB
   ZHANG C, 2003, IEEE T PARALLEL DIST, V14
NR 19
TC 0
Z9 0
PU INT INST INFORMATICS & SYSTEMICS
PI ORLANDO
PA 14269 LORD BARCLAY DR, ORLANDO, FL 32837 USA
BN 978-980-6560-55-0
PY 2005
BP 374
EP 379
PG 6
WC Computer Science, Artificial Intelligence; Computer Science,
   Cybernetics; Computer Science, Software Engineering; Computer Science,
   Theory & Methods; Telecommunications
SC Computer Science; Telecommunications
GA BFP83
UT WOS:000243670400069
ER

PT S
AU Snook, C
   Poppleton, M
   Johnson, I
AF Snook, Colin
   Poppleton, Michael
   Johnson, Ian
BE Butler, M
   Jones, C
   Romanovsky, A
   Troubitsyna, E
TI Towards a method for rigorous development of generic requirements
   patterns
SO Rigorous Development of Complex Fault-Tolerant Systems
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT Workshop on Rigorous Open Development Environment for Complex Systems
CY 2005
CL Newcastle upon Tyne, ENGLAND
HO Newcastle Univ
ID REFINEMENT
AB We present work in progress' on a method for the engineering, validation and verification of generic requirements using domain engineering and formal methods. The need to develop a generic requirement set for subsequent system instantiation is complicated by the addition of the high levels of verification demanded by safety-critical domains such as avionics. Our chosen application domain is the failure detection and management function for engine control systems: here generic requirements drive a software product line of target systems.
   A pilot formal specification and design exercise is undertaken on a small (two-sensor) system element. This exercise has a number of aims: to support the domain analysis, to gain a view of appropriate design abstractions, for a B novice to gain experience in the B method and tools, and to evaluate the usability and utility of that method. We also present a prototype method for the production and verification of a generic requirement set in our UML-based formal notation, UML-B, and tooling developed in support. The formal verification both of the structural generic requirement set, and of a particular application, is achieved via translation to the formal specification language, B, using our U2B and ProB tools.
C1 Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
RP Snook, C (reprint author), Univ Southampton, Sch Elect & Comp Sci, Southampton SO17 1BJ, Hants, England.
CR Amey P, 2004, PRACTICAL ELEMENTS OF SAFETY, P3
   Araki K, 2003, LNCS, V2805
   BANACH R, 2003, REQUIREMENTS ENG J, V8
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   BELCASTRO CM, 2001, P AM CONTR C, V4, P2623
   Booch G., 1998, UNIFIED MODELING LAN
   CANSELL D, 2004, B4FREE SET TOOLS B D
   DEHBONEI B, 1995, APPL FORMAL METHODS, P227
   FAULK SR, 2000, P 5 IEEE INT S REQ E
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   Hayes IJ, 2003, LECT NOTES COMPUT SC, V2805, P154
   Jean-Raymond Abrial, 1996, B BOOK ASSIGNING PRO
   Laibinis L, 2004, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING AND FORMAL METHODS, P346, DOI 10.1109/SEFM.2004.1347539
   Laibinis L, 2004, LECT NOTES COMPUT SC, V3219, P254
   Lam W, 1997, J SYST SOFTWARE, V38, P197, DOI 10.1016/S0164-1212(96)00151-3
   Leuschel M, 2003, LECT NOTES COMPUT SC, V2805, P855
   MACALA R, 1996, IEEE SOFTWARE    MAY, P57
   MUTHIG D, 2002, LNCS, V2379, P110
   MUTHIG D, 2004, 02504E IESE FRAUNH I
   PARNAS D, 1976, IEEE T SOFTWARE ENG, V2
   SCHNEIDER S, 2001, B METHOD
   SNOOK C, 2006, UNPUB RIGOROUS ENG P
   Snook C., 2004, UML B SPECIFICATION
   SNOOK C, 2005, P 11 INT WORKSH REQ, P145
   SNOOK C, 2004, P 3 INT WORKSH CRIT, P115
   TRACS W, 1995, ACM SOFTWARE ENG NOT, P49
   *UK MIN DEF, DEF STAN 00 55 REQ S
   Wasowski A, 2004, LECT NOTES COMPUT SC, V3154, P73
NR 28
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 978-3-540-48265-9
J9 LECT NOTES COMPUT SC
PY 2006
VL 4157
BP 326
EP 342
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BFU38
UT WOS:000244663400017
ER

PT B
AU Yao, L
   Yang, B
AF Yao Lan
   Yang Bo
BE Zhang, SY
   Wang, F
TI Approach of prediction and assessment of system quality for software
   product lines based on fuzzy neural network
SO Proceedings of 2006 Chinese Control and Decision Conference
LA Chinese
DT Proceedings Paper
CT 18th Chinese Control and Decision Conference
CY JUL 27-30, 2006
CL Tianjin, PEOPLES R CHINA
DE software product lines; CAD; quality attributes; fuzzy neural network
ID LOGIC
AB The complex and nonlinear relationships between system variants and quality attributes, limits the conventional approaches. Thus, CAD production line is took as an example to introduce a fuzzy neural network based approach of this problem. The simulation results show that this method is good at prediction and assessment of system quality for software product lines, moreover, it has the advantage of working on both precise and fuzzy dada system.
C1 Univ Elect Sci & Technol China, Chengdu 610054, Peoples R China.
RP Yao, L (reprint author), Univ Elect Sci & Technol China, Chengdu 610054, Peoples R China.
CR Bernd T, 1999, NEURAL COMPUT APPL, V8, P151, DOI 10.1007/s005210050017
   Chen YJ, 1996, FUZZY SET SYST, V82, P161, DOI 10.1016/0165-0114(95)00252-9
   Chung L., 2000, NONFUNCTIONAL REQUIR, P472
   CLEMENTS P, 2002, SOFTWARE PRODUCT LIN, P564
   ISHIBUCHI H, 1995, INT J APPROX REASON, V13, P327
   LIN CT, 1991, IEEE T COMPUT, V40, P1320, DOI 10.1109/12.106218
   Yang YP, 2000, FUZZY SET SYST, V114, P325, DOI 10.1016/S0165-0114(98)00098-0
   ZHANG H, 2003, P 15 INT C ADV INF S, P681
NR 8
TC 0
Z9 0
PU NORTHEASTERN UNIV SHENGYANG
PI SHENGYANG
PA PO BOX 125, SHENGYANG, 110004, PEOPLES R CHINA
BN 978-7-81102-262-9
PY 2006
BP 581
EP 584
PG 4
WC Automation & Control Systems; Computer Science, Artificial Intelligence
SC Automation & Control Systems; Computer Science
GA BFR71
UT WOS:000244066100155
ER

PT J
AU Bockle, G
AF Bockle, G
TI Calculating ROI for software product lines (vol 21, pg 23, 2004)
SO IEEE SOFTWARE
LA English
DT Correction
CR Bockle G, 2004, IEEE SOFTWARE, V21, P23
NR 1
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0740-7459
J9 IEEE SOFTWARE
JI IEEE Softw.
PD SEP-OCT
PY 2004
VL 21
IS 5
BP 14
EP 14
PG 1
WC Computer Science, Software Engineering
SC Computer Science
GA 848WM
UT WOS:000223498800010
ER

PT B
AU Polancic, G
   Horvat, RV
AF Polancic, Gregor
   Horvat, Romana Vajde
BE LuzarStiffler, V
   Dobric, VH
TI Towards an integrated acceptance model for software frameworks
   literature review and proposed solution
SO ITI 2006: Proceedings of the 28th International Conference on
   Information Technology Interfaces
LA English
DT Proceedings Paper
CT 28th International Conference on Information Technology Interfaces
CY JUN 19-22, 2006
CL Cavtat, CROATIA
SP Univ Zagreb, Univ Comp Ctr, Republic Croatia, Minist Sci, Educ & Sports, Univ Zagreb, IEEE Reg 8
DE software frameworks; software product lines; success; acceptance; use;
   TAM
ID INFORMATION-TECHNOLOGY; PRODUCTIVITY; SUCCESS; REUSE; WEB
AB Software frameworks have potential to substantially improve software developer productivity and software quality when applying product line approach. Beside costly development of in-house frameworks, many qualitative proprietary and open source frameworks are available on the web. Framework users should be able to review and select the best available framework, to maximize number of reuses and consequently get better framework's cost/benefit ratio.
   On the other side, framework developers need to develop highly acceptable frameworks, which is a precondition for their (economic) effectiveness. Acceptance is related to the number of framework users and is critical for the success of increasingly important and popular open source frameworks.
   This paper presents insights into the importance and scientific explanation of understanding the acceptance of frameworks.
C1 Univ Maribor, Fac Elect Engn & Comp Sci, SI-2000 Maribor, Slovenia.
RP Polancic, G (reprint author), Univ Maribor, Fac Elect Engn & Comp Sci, Smetanova 17, SI-2000 Maribor, Slovenia.
CR [Anonymous], 2001, 9126 ISO
   Bockle G, 2004, IEEE SOFTWARE, V21, P23
   Boehm B, 1999, COMPUTER, V32, P111, DOI 10.1109/2.789755
   Chang MK, 2001, INFORM MANAGE, V39, P1, DOI 10.1016/S0378-7206(01)00075-1
   Crowston K., 2003, DEFINING OPEN SOURCE
   Davis F. D., 1989, MIS Q, V13, P318, DOI DOI 10.2307/249008
   DeLone W., 1992, INFORMATION SYSTEMS, V3, P60, DOI DOI 10.1287/ISRE.3.1.60
   DeLone WH, 2002, 35 HAW INT C SYST SC
   Dishaw MT, 1999, INFORM MANAGE, V36, P9, DOI 10.1016/S0378-7206(98)00101-3
   Garrity EJ, 2005, DECIS SUPPORT SYST, V39, P485, DOI 10.1016/j.dss.2004.06.015
   Johnson R, 2005, COMPUTER, V38, P107, DOI 10.1109/MC.2005.22
   JOHNSON RE, 1988, J OBJECT-ORIENT PROG, V1, P22
   KONTIO J, 1995, COTS SELECTION METHO
   Lederer AL, 2000, DECIS SUPPORT SYST, V29, P269, DOI 10.1016/S0167-9236(00)00076-2
   Legris P, 2003, INFORM MANAGE-AMSTER, V40, P191, DOI 10.1016/S0378-7206(01)00143-4
   McFarland DJ, 2006, COMPUT HUM BEHAV, V22, P427, DOI 10.1016/j.chb.2004.09.009
   MEIER P, 1998, STJA 98
   Moser S, 1996, COMPUTER, V29, P45, DOI 10.1109/2.536783
   PHILIPPOW I, 2001, 8 ANN IEEE INT C WOR
   RAYMOND ES, 2000, COMPUT MATH APPL, V39, P263
   ROBERTS D, 1996, EVOLVING FRAMEWORKS
   Seddon PB, 1997, INFORM SYST RES, V8, P240, DOI 10.1287/isre.8.3.240
   SEDDON PB, 1999, COMMUN ASS INFORM SY, P2
   SINDRE G, 1995, J SYST SOFTWARE, V30, P201, DOI 10.1016/0164-1212(94)00134-9
   SO H, 2002, IS BAZAAR MODEL INDI
   TAYLOR S, 1995, INFORM SYST RES, V6, P144, DOI 10.1287/isre.6.2.144
   Venkatesh V, 2003, MIS QUART, V27, P425
NR 27
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
BN 953-7138-05-4
PY 2006
BP 153
EP 158
PG 6
WC Computer Science, Artificial Intelligence; Computer Science, Information
   Systems
SC Computer Science
GA BEV06
UT WOS:000239576000028
ER

PT B
AU Haddad, HM
AF Haddad, HM
BE Callaos, N
   Lefebvre, V
   Hansen, E
   Dickopp, T
   Su, JS
TI Applications of atomic domain framework for component-based development
SO 8TH WORLD MULTI-CONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS,
   VOL IV, PROCEEDINGS: INFORMATION SYSTEMS, TECHNOLOGIES AND APPLICATIONS:
   I
LA English
DT Proceedings Paper
CT 8th World Multi-Conference on Systemics, Cybernetics and Informatics
CY JUL 18-21, 2004
CL Orlando, FL
SP Int Inst Informat & System, Amer Soc Cybernet, Acad Non Linear Sci, Univ Las Palmas Gran Canaria, Telemat Engn Dept, Concurrency & Architecture Grp, CUST, Blaise Pascal Univ, Engn Sci Inst, Cybernet & Human Knowing, Int Federat Syst Res, Int Syst Inst, Int Soc Syst Sci, Italian Soc System, Univ Nacl San Luis, Lab Res Computac Intelligence, Dept Informat, Polish Syst Soc, Slovenian Artificial Intelligence Soc, Soc Appl Syst Res, Syst Soc Poland, Ctr Syst Studies, Tunisian Sci Soc, World Org System & Cybernet, IEEE Comp Soc, Venezuela Chapter, IEEE, Venezuela Chapter, Natl Res Council Canada, Steacie Inst Mol Sci
DE atomic domain; wrappers; domain engineering; reusable domains
ID REUSABILITY
AB Component-based software engineering has been incorporated in much of the industry. Although the results are encouraging if not very competitive, component-based software engineering still faces a number of significant issues where local component models are concerned. Some of the models in recent literature focus on product lines that follow cues from product line engineering. Others focus on creating various bridges or wrappers between components and the new project by the introduction of various APIs or using new languages or extensions. This paper focuses on domain engineering where previous work had been successful in the creation of a framework for developing domain-specific reusable components. The framework is an improved technique for designing highly reusable domain-specific components. The working model is based around the concepts of Atomic Domain and Wrappers. This paper theoretically applies the model of Atomic Domains and Wrappers to some specific areas of related research in component-based development in attempt to show a normalized or enhanced solution for local component models. The implementation of the model in each case can result in both ease of reuse and encourage high amount of reuse for the programmer and, more importantly, the domain.
C1 Kennesaw State Univ, CSIS Dept, Kennesaw, GA 30144 USA.
RP Haddad, HM (reprint author), Kennesaw State Univ, CSIS Dept, Kennesaw, GA 30144 USA.
CR ALHADDAD H, 2003, P INT C SOFTW ENG RE, P384
   ALHADDAD H, 1999, P 5 INT C INF SYST A, P577
   Atkinson C, 2002, LECT NOTES COMPUT SC, V2319, P93
   Caballero RE, 2002, LECT NOTES COMPUT SC, V2319, P293
   Emmerich W, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P537
   FALBO RD, 2002, SEKE 02, P351
   GUO J, 2003, P 7 IASTED INT C SOF, P441
   HADDAD H, 2002, P ANN ACM S APPL COM
   JARZABECK S, 1997, SSR 97, P65
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   OUYANG YW, 1996, ENHANCING DESIGN REU, P493
   OWENS RL, 1993, DEV IMPLEMENTATION D, P31
   Sillitti A, 2002, LECT NOTES COMPUT SC, V2319, P269
   Sreedhar VC, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P198
   TRISTRAM C, 2003, TECHNOLOGY REV   NOV, P34
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255
   Wang A. I., 2003, P 7 IASTED INT C SOF, P1
   WANG AJA, 2003, DEVICE DRIVERS REUSA, P396
   XIA DL, 2003, P 7 IASTED INT C SOF, P95
NR 19
TC 0
Z9 0
PU INT INST INFORMATICS & SYSTEMICS
PI ORLANDO
PA 14269 LORD BARCLAY DR, ORLANDO, FL 32837 USA
BN 980-6560-13-2
PY 2004
BP 273
EP 276
PG 4
WC Computer Science, Information Systems
SC Computer Science
GA BBT27
UT WOS:000227677800055
ER

PT B
AU Gomaa, H
   Saleh, M
AF Gomaa, Hassan
   Saleh, Mazen
GP IEEE
TI Software product line engineering and dynamic custornization of a radio
   frequency management system
SO 2006 IEEE INTERNATIONAL CONFERENCE ON COMPUTER SYSTEMS AND APPLICATIONS,
   VOLS 1-3
SE International Conference on Computer Systems and Applications
LA English
DT Proceedings Paper
CT 4th IEEE/ACS International Conference on Computer Systems and
   Applications (AICCSA-06)
CY MAR 08-11, 2006
CL Sharjah, U ARAB EMIRATES
SP IEEE, ACS
AB This paper describes a case study of a model driven development approach for software product lines based on Web Services. Feature selection drives the dynamic customization of the product line architecture and implementation to derive the application. During product line modeling, features and their dependencies are described in a feature model. During application engineering, features are selected by the application engineer and used to dynamically customize the product line architecture and implementation. A Radio Frequency Management product line is used to illustrate the approach.
C1 George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
RP Gomaa, H (reprint author), George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
EM hgomaa@gmu.edu; mazensaleh@yahoo.com
CR Clements P, 2002, SOFTWARE PRODUCT LIN
   COHEN S, 1998, P INT C SOFTW REUS V
   Deitel H., 2003, WEB SERVICES TECHNIC
   GOMAA H, 1996, J AUTOMATED SOFTWARE, V3
   Gomaa H., 2000, DESIGNING CONCURRENT
   GOMAA H, 2005, P 3 ACS IEEE INT C C
   GOMAA H, 1999, IEEE P SOFTWARE, V146
   GOMAA H, 2002, P IEEE INT C SOFTW R
   GOMAA H, 2004, P INT C SOFTW REUS M
   Gomaa H., 2005, DESIGNING SOFTWARE P
   GRISS M, 1998, P INT C SOFTW REUS V
   KANG K, 1990, CMUSEI90TR21 SOFTW E
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   PARNAS D, 1979, IEEE T SOFTWARE  MAR
   Rumbaugh J., 2005, UNIFIED MODELING LAN, VSecond
NR 15
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
BN 1-4244-0211-5
J9 I C COMP SYST APPLIC
PY 2006
BP 345
EP 352
DI 10.1109/AICCSA.2006.205112
PG 8
WC Computer Science, Artificial Intelligence; Computer Science, Theory &
   Methods; Telecommunications
SC Computer Science; Telecommunications
GA BFN66
UT WOS:000243337100053
ER

PT B
AU Iwane, N
   Matsubara, Y
   Yoshida, M
AF Iwane, N
   Matsubara, Y
   Yoshida, M
BE Guoping, X
   Osaki, H
TI Web application development model with questionnaire system in software
   product lines
SO ICIM' 2004: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON
   INDUSTRIAL MANAGEMENT
LA English
DT Proceedings Paper
CT 17th International Conference on Industrial Management (ICIM 2004)
CY NOV 15-17, 2004
CL Okayama, JAPAN
SP Beihang Univ, Japan Ind Management Assoc, Chugoku-Shikoku Branch, Natl Nat Sci Fdn China
DE software engineering; software product line; program generator;
   questionnaire
AB In software management system, how to acquire customer's needs and reflecting them immediately into software products are important issues. Currently, several methods for analyzing architectural requirements, such as ATAM (Architecture Tradeoff Analysis Method), CBAM (Cost Benefit Analysis Method), and ADD (Attribute-Driven Design method), are proposed, and the software product line is receiving increasing attention accordingly in industry. However, these methods apply only to the limited areas in software development life cycles, and the software product line limits the application domain. We propose the web-based application development model with the use of questionnaire systems in software product lines. It takes off the above mentioned limitations and produces the efficient customized software systems with reduced time and cost. The KITS (Knowledge based Integrated quesTionnaire Software product line) model is proposed. This paper describes the concept of KITS model which integrates the web questionnaire system and the software product line system through the knowledge base system.
C1 Hiroshima City Univ, Fac Informat Sci, Hiroshima 7313194, Japan.
RP Iwane, N (reprint author), Hiroshima City Univ, Fac Informat Sci, Hiroshima 7313194, Japan.
CR Bass L., 2003, SOFTWARE ARCHITECTUR
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Dobrica L., 2002, IEEE T SOFTWARE ENG, V28
   KAWAMOTO M, 2004, APPL WEB BASED QUEST
   KAZMAN R, 2003, CMUSEI2003TN026
   SAMPAIO JC, 2000, SCENARIO CONSTRUCTIO
   WACHE H, 2001, IJCAI01 WS ONTOLOGIE
   WEIDENHAUPT K, SCENARIO USAGE SYSTE
   YOSHIDA M, 2002, IEEE ICWHN 2002 ICN
NR 9
TC 0
Z9 0
PU CHINA AVIATION INDUSTRY PRESS
PI BEIJING
PA PO BOX 2560 14 XIAOGUAN DONGLI ANDINGMENWAI, BEIJING, PEOPLES R CHINA
BN 7-80183-481-X
PY 2004
BP 806
EP 809
PG 4
WC Engineering, Manufacturing; Management; Operations Research & Management
   Science
SC Engineering; Business & Economics; Operations Research & Management
   Science
GA BBQ17
UT WOS:000227032800133
ER

PT B
AU Yu, B
   Mili, A
   Abdelmoez, W
   Gunnalan, R
   Shereshevsky, M
   Ammar, HH
AF Yu, B
   Mili, A
   Abdelmoez, W
   Gunnalan, R
   Shereshevsky, M
   Ammar, HH
BE Chu, HW
   Savoie, M
   Sanchez, B
TI Assessing and quantifying attributes of product line architectures
SO International Conference on Computing, Communications and Control
   Technologies, Vol 2, Proceedings
LA English
DT Proceedings Paper
CT International Conference on Computing, Communications and Control
   Technologies (CCCT 2004)
CY AUG 14-17, 2004
CL Austin, TX
SP Univ Texas Austin, Int Inst Informat & System, IEEE Comp Soc, Venezuela Chapter, Inter Amer Org Higher Educ
DE product lines; software architectures; software metrics; domain
   engineering; application engineering
AB In this paper we consider Product Line Architectures and propose means to assess/quantify some of their relevant attributes. We will discuss, in turn, attributes that characterize software architectures in general, then attributes that are specific to architectures of product lines. We do not offer research solutions as much as we merely identify research issues and discuss the outline of our approach to these issues.
C1 New Jersey Inst Technol, Coll Comp Sci, Newark, NJ 07102 USA.
RP Yu, B (reprint author), New Jersey Inst Technol, Coll Comp Sci, Newark, NJ 07102 USA.
CR Atkinson C., 2002, COMPONENT BASED PROD
   Bass L., 1998, SOFTWARE ARCHITECTUR
   BAYER J, LIB SYSTEM PRODUCT L
   Bengtsson P, 2004, J SYST SOFTWARE, V69, P129, DOI 10.1016/S0164-1212(03)00080-3
   Boehm B. W., 2000, SOFTWARE COST ESTIMA
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Garmus D., 2001, FUNCTION POINT ANAL
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), DOI 10.1109/ICRE.1994.292398
   Jilani LL, 2001, IEEE T SOFTWARE ENG, V27, P673, DOI 10.1109/32.940565
   NASSAR D, 2002, ESTIMATING ERROR PRO
   Poulin JS, 1999, COMMUN ACM, V42, P98, DOI 10.1145/301353.301440
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Yakimovich D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.841020
NR 13
TC 0
Z9 0
PU INT INST INFORMATICS & SYSTEMICS
PI ORLANDO
PA 14269 LORD BARCLAY DR, ORLANDO, FL 32837 USA
BN 980-6560-17-5
PY 2004
BP 175
EP 181
PG 7
WC Computer Science, Artificial Intelligence; Computer Science, Information
   Systems; Computer Science, Software Engineering; Computer Science,
   Theory & Methods
SC Computer Science
GA BBV05
UT WOS:000227982600034
ER

PT B
AU Ajila, SA
AF Ajila, SA
BE Chu, HW
   Savoie, M
   Sanchez, B
TI Tracing product lines artifacts in FOOM
SO International Conference on Computing, Communications and Control
   Technologies, Vol 4, Proceedings
LA English
DT Proceedings Paper
CT International Conference on Computing, Communications and Control
   Technologies (CCCT 2004)
CY AUG 14-17, 2004
CL Austin, TX
SP Univ Texas Austin, Int Inst Informat & System, IEEE Comp Soc, Venezuela Chapter, Inter Amer Org Higher Educ
DE object oriented; features; domain analysis; software product lines;
   systems design; and evolution
AB Traceability support between the different artifacts of a software product is very important for the purposes of dependency analysis, change propagation, and change impact analysis. This paper examines the traceability supports in FOOM - Feature based Object Oriented Modeling. FOOM deals with three fundamental issues - extract features from a base product, extend the features, and organize them into a product line. Looking at the problem of architecture extraction, implementation and evolution from the perspective of features brings with it a strong aspect of traceability between user requirements and the development of domain, product line, and application architectures. FOOM traceability support is built around three concepts - stereotyping, contracts and artifacts knowledge base. The contracts are expressed in Object Constraint Language (OCL) and they are built by creating a feature list for the product line. A change management model is designed to manage the architectural evolution.
C1 Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
RP Ajila, SA (reprint author), Carleton Univ, Dept Syst & Comp Engn, 1125 Colonel By Dr, Ottawa, ON K1S 5B6, Canada.
CR AJILA S, 1995, INT J SOFTWARE PRACT, V25, P1155
   AJILA S, 2002, P 6 WORLD MULT C SYS, V7, P492
   AJILA SA, 2000, P WORLD MULT SYST CY, V9, P688
   AJILA SA, 2002, INT C SOFTW ENG RES
   AJILA SA, 2000, INT J SOFTWARE PRACT, V9, P688
   AMERICA P, 1999, P 13 EUR C OBJ OR PR
   Bayer J, 2000, LECT NOTES COMPUT SC, V1799, P178
   Booch G, 1999, UNIFIED MODELING LAN
   Bosch J., 2000, ADOPTING EVOLVING PR
   Bruegge B., 2000, OBJECT ORIENTED SOFT
   *CARN SOFTW ENG I, 2002, REENG HORS MOD
   *CARN SOFTW ENG I, 1999, FEAT OR DOM AN
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Jacobson I, 1999, UNIFIED SOFTWARE DEV
   KANG K, 1990, CMUSEI90TR2
   Lam W, 1998, LECT NOTES COMPUT SC, V1413, P219
   Mellado RP, 2003, REC RES DEV MICROBIO, V7, P1
   STEPHENSON Z, 2001, P 2 INT WORKSH SOFTW, P81
   Turner CR, 1999, J SYST SOFTWARE, V49, P3
   WARMER J, 1999, OBJECT CONSTRAINT LA
NR 20
TC 0
Z9 0
PU INT INST INFORMATICS & SYSTEMICS
PI ORLANDO
PA 14269 LORD BARCLAY DR, ORLANDO, FL 32837 USA
BN 980-6560-17-5
PY 2004
BP 302
EP 307
PG 6
WC Automation & Control Systems; Computer Science, Artificial Intelligence;
   Computer Science, Interdisciplinary Applications; Computer Science,
   Theory & Methods
SC Automation & Control Systems; Computer Science
GA BBV07
UT WOS:000227983100056
ER

PT B
AU Botaschanjan, J
   Fleischmann, A
   Pister, M
AF Botaschanjan, J
   Fleischmann, A
   Pister, M
BE Hamza, MH
TI A conceptual model for requirements engineering and management for
   change-intensive software
SO Proceedings of the IASTED International Conference on Software
   Engineering
LA English
DT Proceedings Paper
CT IASTED International Conference on Software Engineering
CY FEB 17-19, 2004
CL Innsbruck, AUSTRIA
SP Int Assoc Sci & Technol Dev, TC Software Engn
DE software requirements; software evolution; requirements tracing;
   software product lines
AB In the development of software with evolving requirements, activities of requirements-engineering and management are present through the whole software development process and affect most of the actors involved. This paper presents a conceptual model which aims to an efficient requirements management by offering a central data structure for requirements that integrates requirements, design and implementation workflow. This conceptual model was developed for change-intensive embedded systems, but can be easily adapted to other domains. This paper presents the model itself, techniques to adapt this model to specific needs, and demonstrates its usage.
C1 Tech Univ Munich, Inst Informat, Lehrstuhl Software & Syst Engn, D-85748 Munich, Germany.
RP Botaschanjan, J (reprint author), Tech Univ Munich, Inst Informat, Lehrstuhl Software & Syst Engn, Boltzmannstr 3, D-85748 Munich, Germany.
CR BOTASCHANJAN J, 2004, FRAMEWORK REQUIREMEN, pCH5
   Fowler M, 1999, UML DISTILLED BRIEF
   GABB A, 1998, P 1 REG S SYST ENG S
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), DOI 10.1109/ICRE.1994.292398
   HUBER F, 2002, P EMB INT NURNB
   HUBER F, 1996, ARBEITSBERICHTE I MA, V29, P165
   ISO/IEC, 2001, 912612001E ISOIEC
   LEITELIER P, 2002, 1 INT WORKSH TRAC EM
   ROBERTSON J, 2003, VOLERE REQUIREMENTS
   SUMMERVILLE I, 2000, SOFTWARE ENG
   Wiegers K. E., 2003, SOFTWARE REQUIREMENT
NR 11
TC 0
Z9 0
PU ACTA PRESS
PI CALGARY
PA B6, STE 101, 2509 DIEPPE AVE SW, CALGARY, ALBERTA T3E 7J9, CANADA
BN 0-88986-410-1
PY 2004
BP 36
EP 41
PG 6
WC Computer Science, Software Engineering
SC Computer Science
GA BCB37
UT WOS:000228511000007
ER

PT B
AU Ganesan, D
   Knodel, J
   Kolb, R
   Flaury, U
   Meier, G
AF Ganesan, Dharmalingarn
   Knodel, Jens
   Kolb, Ronny
   Flaury, Uwe
   Meier, Gerald
GP IEEE Comp Soc
TI Comparing costs and benefits of different test strategies for a software
   product line: A study from Testo AG
SO SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE,
   PROCEEDINGS
LA English
DT Proceedings Paper
CT 11th International Software Product Line Conference
CY SEP 10-14, 2007
CL Kyoto, JAPAN
SP Informat Technol Promot Agcy, Software EngnCtr, HITACHI, Mitsubishi Elect, NEC, RICOH, Nomura Res Inst, TOSHIBA Leading Innovat, Commun Art Technol nSyst, IBM, TOSHIBA Toshiba Solut Corporat, FUJITSU, OMRON
DE product line engineering; PuLSE; software architecture; architecture
   compliance checking; quality assurance; test strategies; economic model
AB Quality assurance in general and testing in particular remains as an unsolved problem in product line engineering. It is unclear, from an economic point of view, whether one should test each product line member separately or test just product-specific parts and compose them with tested core assets from family engineering. While the former strategy introduces redundancy in testing, the latter strategy is also more difficult because of genericity. Ideally, we need to carefully calculate cost-benefits of both cases and define a test strategy accordingly. Currently, there is no economic model for testing in the context of product lines. Thus, we introduce an initial economic model, and then perform Monte-Carlo simulations to calculate cost-benefit of the two test strategies. For the Testo product line of climate and flue gas measurement devices, the results showed that, using an infrastructure-focused test strategy, on average a cost saving of 13% can be expected with 87% certainty.
C1 [Ganesan, Dharmalingarn; Knodel, Jens] Fraunhofer Inst Expt Software Engn, D-67663 Kaiserslautern, Germany.
RP Ganesan, D (reprint author), Fraunhofer Inst Expt Software Engn, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
CR Bayer J, 1999, P 5 ACM SIGSOFT S SO, P122, DOI 10.1145/303008.303063
   BOECKLE G, 2004, IEEE SOFTWARE, V21, P23
   GANESAN D, 2006, P 10 INT SOFTW PROD, P13
   KNAUBER P, 2006, P SPLIT 2006 3 INT W
   KNODEL J, 10 EUR C SOFTW MAINT
   KOLB R, 2006, 10 INT SOFTW PROD LI
   KOLB R, 2005, 05905E IESE
   KOLB R, 2004, 09604E IESE
   Koschke R, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/WCRE.2003.1287235
   MALVIN K, 1986, MONTE CARLO METHODS
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Schmid K, 2005, PROC INT CONF SOFTW, P544
NR 12
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 978-0-7695-2888-5
PY 2007
BP 74
EP 83
PG 10
WC Computer Science, Software Engineering
SC Computer Science
GA BGZ18
UT WOS:000251450700008
ER

PT B
AU Ahmed, F
   Capretz, LF
   Capretz, MMA
AF Ahmed, Faheem
   Capretz, Lutz Fernando
   Capretz, Miriam M. A.
GP IEEE
TI Setting up COTS-Based software product lines
SO ICCBSS 2007: Sixth International IEEE Conference on
   Commercial-off-the-Shelf (COTS)-Based Software Systems, Proceedings
LA English
DT Proceedings Paper
CT 6th International Conference on Commercial-off-Shelf (COTS)-Based
   Software Systems
CY FEB 26-MAR 02, 2007
CL Banff, CANADA
SP IEEE Tech Council Software Engn, Carnegie Mellon Univ, Software Engn Inst, Natl Res Council Canada, Conseil Natl Rech Canada, European Software Inst
C1 Univ Western Ontario, London, ON N6A 5B9, Canada.
RP Ahmed, F (reprint author), Univ Western Ontario, London, ON N6A 5B9, Canada.
RI Capretz, Luiz/K-5944-2013
OI Capretz, Luiz/0000-0001-6966-2369
CR Ahmed F, 2007, INFORM SOFTWARE TECH, V49, P194, DOI 10.1016/j.infsof.2006.05.004
   Clements P, 2001, SOFTWARE PRODUCT LIN
NR 2
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 978-0-7695-2785-7
PY 2007
BP 249
EP 249
PG 1
WC Computer Science, Software Engineering
SC Computer Science
GA BGB43
UT WOS:000245916400025
ER

PT B
AU Philippow I
   Pashov I
AF Philippow, I
   Pashov, I
BE Hamza, MH
TI Feature driven maintenance of product line architectures
SO PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE
   ENGINEERING
LA English
DT Proceedings Paper
CT IASTED International Conference on Software Engineering
CY FEB 17-19, 2004
CL Innsbruck, AUSTRIA
SP Int Assoc Sci & Technol Dev, TC Software Engn
DE maintenance; feature modeling; requirements; refactoring; product line
   architectures
AB Software product lines are long life software systems. Their maintenance requires stable system architectures, which have to be adapted to system domain changes over the years. In the most cases the integration of new and changed requirements into software architectures leads to decreasing of the quality properties of the architectures. In order to avoid an architecture decay a refactoring is required. Comprehensive refactorings are risky and expensive.
   In this paper is described an approach that proposes to integrate early architecture changes and low risk small refactoring steps into the software systems life cycle. The refactoring steps aim a continuous adaptation of product line architectures for new and expected domain requirements. The approach contains feature based requirements engineering and feature driven architecture refactoring activities.
C1 Tech Univ Ilmenau, D-98693 Ilmenau, Germany.
RP Philippow, I (reprint author), Tech Univ Ilmenau, Max Planck Ring 14,POB 100565, D-98693 Ilmenau, Germany.
EM Ilka.Philippow@tu-ilmenau.de; Ilian.Pashov@tu-ilmenau.de
CR BAKER S, 1995, 2 WORK C REV ENG
   Bass L., 1998, SOFTWARE ARCHITECTUR
   Baxter I., 1998, P INT C SOFTW MAINT
   Beck K, 1999, EXTREME PROGRAMMING
   BOELLERT K, 2002, THESIS ILMENAU TU GE
   BOSCH K, 2000, DESIGN USE SOFTWARE
   Carriere SJ, 1999, PROCEEDINGS OF THE THIRD EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P22, DOI 10.1109/CSMR.1999.756679
   CZARNECKI K, 2000, GENEATIVE PROGRAMMIN
   DUCASSE S, 1999, P INT C SOFTW MAINT
   HOFMANN HF, 2000, REQUIREMENTS ENG
   Ibanez M., 1996, EUROPEAN USER SURVEY
   JOHANSSON E, 2002, P 14 INT C SOFTW ENG
   KANG K, 1990, CMUSEI90TR21 CARN U
   Krinke Jens, 2001, P 8 WORK C REV ENG W
   Loucopoulos P., 1995, SYSTEM REQUIREMENTS
   PASHOV I, 2003, P 10 IEEE S WORKSH E
   PHILIPPOW I, 2003, P WORKSH MOD VAR OBJ, P42
   Riebisch M., 2002, P 6 WORLD C INT DES
   RIEBISCH M, 2001, P OOPSLA 2001 WORKSH
   Sommerville I., 1997, REQUIREMENTS ENG
   STREITFERDT D, 2003, P IEEE INT C WORKSH
   1995, STANDISH GROUP CHAOS
NR 22
TC 0
Z9 0
PU ACTA PRESS
PI CALGARY
PA B6, STE 101, 2509 DIEPPE AVE SW, CALGARY, ALBERTA T3E 7J9, CANADA
BN 0-88986-410-1
PY 2004
BP 333
EP 338
PG 6
WC Computer Science, Software Engineering
SC Computer Science
GA BCB37
UT WOS:000228511000056
ER

PT B
AU Ahmed, F
   Capretz, LF
AF Ahmed, F
   Capretz, LF
BE Arabnia, HR
   Reza, H
TI F-2 rules for qualification of developing and managing software product
   line
SO SERP'04: PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON SOFTWARE
   ENGINEERING RESEARCH AND PRACTICE, VOLS 1 AND 2
LA English
DT Proceedings Paper
CT International Conference on Software Engineering Research and Practice
CY JUN 21-24, 2004
CL Las Vegas, NV
SP Comp Sci Res, Educa & Applicat Press, Int Technol Inst, Korean Soc Internet Informat, World Acad Sci Informat Technol
DE software product line; reusability; core asset development; management;
   component-based architecture; requirement engineering; domain
   engineering; configuration management; business case; architecture;
   software scope; COTS
AB Software product line has emerged as a valuable concept of developing software based on reusable software assets. The concept aims on effective utilization of software assets, reduced time to delivery, improved quality and better benefits to cost ratio of products. In this paper we have defined certain rules for the qualification of developing and managing a software product line. An organization must follow these rules in order to establish and manage software product line effectively.
C1 Univ Western Ontario, London, ON N6A 5B9, Canada.
RP Ahmed, F (reprint author), Univ Western Ontario, London, ON N6A 5B9, Canada.
RI Capretz, Luiz/K-5944-2013
OI Capretz, Luiz/0000-0001-6966-2369
CR Bass L., 1998, SOFTWARE ARCHITECTUR
   CLEMENT P, 1999, FRAMEWORK SOFTWARE P
   CLEMENT P, 2002, SOFTWARE PRODUCT LIN
   Comer E. R., 1990, Proceedings. IEEE/AIAA/NASA 9th Digital Avionics Systems Conference (Cat. No.90CH2929-8), DOI 10.1109/DASC.1990.111290
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   DEBAUD J, 1999, P ICSE 99
   GOMMA H, 1999, P 5 S SOFTW REUS, P113
   HALL J, 2001, AEROSPACE ELECT SYST, V16, P20
   KISHI T, 2002, P 2 INT C SPLC2
   Voas J, 1998, IEEE SOFTWARE, V15, P16, DOI 10.1109/52.663777
   2003, FRAMEWORK SOFTWARE P
   2003, RATIONAL UNIFIED PRO
NR 12
TC 0
Z9 0
PU C S R E A PRESS
PI ATHENS
PA 115 AVALON DR, ATHENS, GA 30606 USA
BN 1-932415-30-0
PY 2004
BP 827
EP 833
PG 7
WC Computer Science, Software Engineering
SC Computer Science
GA BBK74
UT WOS:000225905800124
ER

PT S
AU Burgareli, LA
   Melnikoff, SSS
   Ferreira, MGV
AF Burgareli, Luciana Akemi
   Melnikoff, Selma S. S.
   Ferreira, Mauricio G. V.
BE Lee, R
TI A variability management strategy for software product lines of
   Brazilian Satellite Launcher Vehicles
SO SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS
SE STUDIES IN COMPUTATIONAL INTELLIGENCE
LA English
DT Proceedings Paper
CT 6th ACIS International Conference on Software Engineering Research,
   Management and Applications
CY AUG 20-22, 2008
CL Prague, CZECH REPUBLIC
SP Int Assoc Comp & Informat Sci
HO Charles Univ
AB The Product Line approach offers to the software development benefits such as savings, large-scale productivity and increased product quality. ne management of variability is a key and challenging issue in the development of the software product line and product derivation. This work presents a strategy for the variability management for software product line of Brazilian Satellite Launcher Vehicles. After modeling the variability, extracting them from use case diagrams and features, the proposed strategy uses a variation mechanism based on a set of Adaptive Design Patterns as support in the creation of variants. The proposed strategy uses as case study the software system of an existing specific vehicle, the Brazilian Satellite Launcher (BSL).
C1 [Burgareli, Luciana Akemi] Aeronaut & Space Inst, Sao Jose Dos Campos, Brazil.
RP Burgareli, LA (reprint author), Aeronaut & Space Inst, Sao Jose Dos Campos, Brazil.
RI Ferreira, Mauricio/I-3482-2013
CR *AEB, 2006, PROGR NAC AT ESP CON
   Bachmann F., 2005, CMUSEI2005TR012
   CZARNECKI K, 2005, GENERATIVE PROGRAMMI
   GOMAA H, 2005, USE CASES PATTERN BA
   GOMAA H, 2004, P 37 ANN HAW INT C S
   GOMAA H, 2007, P 40 ANN HAW INT C S
   Griss M., 1998, P 5 INT C SOFTW REUS
   JOHNSON R, 1997, PATTERN LANGUAGES PR, V3
   Keepence B, 1999, IEEE SOFTWARE, V16, P102, DOI 10.1109/52.776957
   KIM Y, 2006, P 4 INT C SOFTW ENG
   MORAIS P, 2005, PROGRAMA VEICULOS LA
   Northrop L, 2008, FRAMEWORK SOFTWARE P
   OLIVEIRA EA, 2005, P C CTR ADV STUD COL
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Riehle D., 2000, P 7 C PATT LANG PROG
   van Gurp J., 2001, P WORK IEEE IFIP C S
   Yoder JW, 2001, ACM SIGPLAN NOTICES, V36, P50, DOI 10.1145/583960.583966
   2008, JUDE UML MODELING TO
NR 18
TC 0
Z9 0
PU SPRINGER
PI NEW YORK
PA 233 SPRING STREET, NEW YORK, NY 10013, UNITED STATES
SN 1860-949X
BN 978-3-540-70774-5
J9 STUD COMP INTELL
PY 2008
VL 150
BP 1
EP 14
DI 10.1007/978-3-540-70561-1_1
PG 14
WC Computer Science, Software Engineering
SC Computer Science
GA BIH74
UT WOS:000259567800001
ER

PT S
AU Brown, TJ
   Spence, ITA
   Kilpatrick, P
AF Brown, TJ
   Spence, ITA
   Kilpatrick, P
BE VanDerLinden, F
TI Relational architecture description language for software families
SO SOFTWARE PRODUCT-FAMILY ENGINEERING
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 5th International Workshop on Product Family Engineering (PFE-5)
CY NOV 04-06, 2003
CL Siena, ITALY
SP European Ind
AB Software Product-Line Engineering has emerged in recent years, as an important strategy for maximising reuse within the context of a family of related products. In current approaches to software product-lines, there is general agreement that the definition of a reference-architecture for the product-line is an important step in the software engineering process. In this paper we introduce ADLARS, a new form of architecture Description language that places emphasis on the capture of architectural relationships. ADLARS is designed for use within a product-line engineering process. The language supports both the definition of architectural structure, and of important architectural relationships. In particular it supports capture of the relationships between product features, component and task architectures, interfaces and parameter requirements.
C1 Queens Univ Belfast, Sch Comp Sci, Belfast BT7 1NN, Antrim, North Ireland.
RP Brown, TJ (reprint author), Queens Univ Belfast, Sch Comp Sci, Belfast BT7 1NN, Antrim, North Ireland.
EM tj.brown@qub.ac.uk; i.spence@qub.ac.uk; p.kilpatrick@qub.ac.uk
CR BROWN TJ, 2002, SPRINGER VERLAG LNCS, V2379, P154, DOI 10.1007/3-540-45652-X_10
   CLEMENTS P, 1999, FRAMEWORK SOFTWARE P
   FEY D, 2002, SPRINGER VERLAG LNCS, V2379, P198, DOI 10.1007/3-540-45652-X_13
   Kang K., 1990, CMUSEI90TR21
   Kang KC, 1999, SOFTWARE PRACT EXPER, V29, P875, DOI 10.1002/(SICI)1097-024X(199908)29:10<875::AID-SPE262>3.0.CO;2-W
   Lee K, 2000, SOFTWARE PRACT EXPER, V30, P1025, DOI 10.1002/1097-024X(20000725)30:9<1025::AID-SPE323>3.3.CO;2-N
   MCRITCHIE I, 2003, P 5 INT WORKSH PROD
   MEDVIDOVIC N, UCIICS9702
   VANOMMERING R, 2000, IEEE COMPUTER    MAR, P78
NR 9
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-21941-2
J9 LECT NOTES COMPUT SC
PY 2004
VL 3014
BP 282
EP 295
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BAG00
UT WOS:000222041400021
ER

PT S
AU Kim, K
AF Kim, Kangtae
BE Meersman, R
   Tari, Z
   Herrero, P
TI A Case Study on Architectural Maturity Evaluation: Experience in the
   Consumer Electronics Domain
SO ON THE MOVE TO MEANINGFUL INTERNET SYSTEMS: OTM 2008 WORKSHOPS
SE Lecture Notes in Computer Science
LA English
DT Proceedings Paper
CT On the Move Confederated International Conference and Workshops
CY NOV 09-14, 2008
CL Monterrey, MEXICO
SP RMIT Univ, Vrije Univ, Technol Monterrey, Univ Politec Madrid, Bauch & Navratil
DE SW product line; SW architecture; architecture maturity
AB This paper introduces our experience of applying an architecture evaluation model to enhance quality attributes of product line in the consumer electronics field. We proposed an evaluation model for architecture design and performed assessment on several platforms to evaluate reusability and maintainability as a core asset of product line. Former researches such as PULSE (TM), FEF(Families Evaluation Framework), and PLPF(Product Line Practice Framework) provide the whole spectrum of building, deploying and maintaining software product lines based on the BAPO(Business, Architecture. Process and Organization). But we focused on software architecture design itself further because we are mainly concerned with design and implementation issues thus concentrating on the architecture criteria. In this paper, we will provide the practitioners with an experience Of Our approach, core concept and lessons learned relies on several case studies on design practices.
C1 Samsung Elect, Software Ctr, Suwon, South Korea.
RP Kim, K (reprint author), Samsung Elect, Software Ctr, Maetan 3Dong, Suwon, South Korea.
EM Kangtae.kim@samsung.com
CR Bosch J, 2000, DESIGN USE SOFTWARE
   CHRISSIS MB, 2003, SEI SERIES SOFTWARE
   Clements P, 2002, SOFTWARE PRODUCT LIN
   CLEMENTS P, 2000, FRAMEWORK SOFTWARE P
   EMAM KE, 2002, SPICE THEORY PRACTIC
   Kang KC, 2005, LECT NOTES COMPUT SC, V3714, P45
   KIM K, 2007, P 11 INT SOFTW PROD, P171
   SARKAR S, 2006, 13 AS PAC SOFTW ENG, P165
   SCHMID K, 2007, P 11 INT SOFTW PROD
   SCHMID K, 2000, P 7 EUR WORKSH SOFTW, P221
   Schmid K, 2002, P 24 INT C SOFTW ENG
   VANDERLINDEN F, 2007, SOFTWARE PRODUCT LIN, P79
NR 12
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 978-3-540-88874-1
J9 LECT NOTES COMPUT SC
PY 2008
VL 5333
BP 364
EP 373
PG 10
WC Computer Science, Information Systems; Computer Science, Theory &
   Methods; Telecommunications
SC Computer Science; Telecommunications
GA BIQ31
UT WOS:000261945300051
ER

PT S
AU Krueger, CW
AF Krueger, CW
BE Nord, RL
TI Product line binding times: What you don't know can hurt you
SO SOFTWARE PRODUCT LINES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Software Product Lines (SPLC 2004)
CY AUG 30-SEP 02, 2004
CL Boston, MA
AB Choosing the right variation binding time - the point in the software engineering process at which decisions for variation instantiation are made - is often one of the most critical, most contentious, and least well understood issues for software product line organizations. This panel explores some of the fundamental binding time issues and insights based on the research, best practices, and real world experiences of the panelists.
C1 BigLever Software, Austin, TX 78730 USA.
RP Krueger, CW (reprint author), BigLever Software, 10500 Laurel Hill Cove, Austin, TX 78730 USA.
EM ckrueger@biglever.com
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-22918-3
J9 LECT NOTES COMPUT SC
PY 2004
VL 3154
BP 305
EP 306
PG 2
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BAU85
UT WOS:000223656200020
ER

PT S
AU Krueger, CW
AF Krueger, CW
BE Nord, RL
TI Avoiding, surviving, and prevailing over pitfalls in product line
   engineering
SO SOFTWARE PRODUCT LINES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Software Product Lines (SPLC 2004)
CY AUG 30-SEP 02, 2004
CL Boston, MA
AB In this panel, pioneers from some of the software product line field's best-known success stories share their experiences on how to detect potential pitfalls, how to avoid looming pitfalls, how to survive pitfalls that are unwittingly encountered, and how to turn the negative aspects of pitfalls into positive advantages.
C1 BigLever Software, Austin, TX 78730 USA.
RP Krueger, CW (reprint author), BigLever Software, 10500 Laurel Hill Cove, Austin, TX 78730 USA.
EM ckrueger@biglever.com
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-22918-3
J9 LECT NOTES COMPUT SC
PY 2004
VL 3154
BP 307
EP 307
PG 1
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BAU85
UT WOS:000223656200021
ER

PT B
AU Coz, JR
   Gil, RH
   Somolinos, JAC
   Ruiz, JCL
AF Coz, J. R.
   Gil, R. Heradio
   Somolinos, J. A. Cerrada
   Ruiz, J. C. Lopez
BE Cordeiro, J
   Filipe, J
TI A GENERATIVE APPROACH TO IMPROVE THE ABSTRACTION LEVEL TO BUILD
   APPLICATIONS BASED ON THE NOTIFICATION OFCHANGES IN DATABASES
SO ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON
   ENTERPRISE INFORMATION SYSTEMS, VOL DISI: DATABASES AND INFORMATION
   SYSTEMS INTEGRATION
LA English
DT Proceedings Paper
CT 10th International Conference on Enterprise Information Systems
CY JUN 12-16, 2008
CL Barcelona, SPAIN
SP Inst Syst & Technol Informat, Control & Commun, Workflow Management Coalit, Assoc Adv Artificial Intelligence
DE Generative Programming; Software Product Line (SPL); SQL Procedural
   Extension Language
AB This paper highlights the benefits, in terms of quality, productivity and time-to-market, of applying a generative approach to increase the abstraction level to build applications based on the notification of changes in databases. Most of the databases maintain meta-tables with information about all stored tables; this information is used in an automatic process to define the software product line (SPL) variability. The remaining variability can be specified by means of domain specific languages. Code generators can automatically query the meta-tables, analyze the input specifications and configure the current product. The paper also introduces the Exemplar Driven Development process to incrementally develop code generators and the Exemplar Flexibilization Language that supports the process implementation.
C1 [Coz, J. R.; Gil, R. Heradio; Somolinos, J. A. Cerrada; Ruiz, J. C. Lopez] Univ Nacl Educ Distancia, Dept Ingn Software & Sistemas Informat, E-28040 Madrid, Spain.
RP Coz, JR (reprint author), Univ Nacl Educ Distancia, Dept Ingn Software & Sistemas Informat, Ciudad Univ,Juan del Rosal 16, E-28040 Madrid, Spain.
CR Cleaveland J. C., 2001, PROGRAM GENERATORS X
   Clements P, 2002, SOFTWARE PRODUCT LIN
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Frankel D, 2003, MODEL DRIVEN ARCHITE
   Gamma E., 1994, DESIGN PATTERNS ELEM
   Greenfield J., 2004, SOFTWARE FACTORIES
   *HER, 2008, RYB IMPL EFL RUBYFOR
   HERADIO R, 2007, THESIS UNED ESPANA
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   Thompson AM, 2004, SURG-J R COLL SURG E, V2, P1
   Verlage M, 2005, PROC INT CONF SOFTW, P534
   Weis T, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1231151
NR 14
TC 0
Z9 0
PU INSTICC-INST SYST TECHNOLOGIES INFORMATION CONTROL & COMMUNICATION
PI SETUBAL
PA AVENIDA D MANUEL L, 27A 2 ESQUERDO, SETUBAL, 2910-595, PORTUGAL
BN 978-989-8111-36-4
PY 2008
BP 421
EP 424
PG 4
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA BIH46
UT WOS:000259488200064
ER

PT S
AU Krueger, CW
   Geppert, B
AF Krueger, CW
   Geppert, B
BE Nord, RL
TI How can testing keep pace with accelerated development in software
   product line engineering?
SO SOFTWARE PRODUCT LINES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Software Product Lines (SPLC 2004)
CY AUG 30-SEP 02, 2004
CL Boston, MA
AB This panel explores the topic of software product line testing. Techniques for accelerated product development are widely published, but what are the implications to product testing in a software product line organization?
C1 BigLever Software, Austin, TX 78730 USA.
   Avaya Labs Res, Basking Ridge, NJ 07920 USA.
RP Krueger, CW (reprint author), BigLever Software, 10500 Laurel Hill Cove, Austin, TX 78730 USA.
EM ckrueger@biglever.com; bgeppert@research.avayalabs.com
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-22918-3
J9 LECT NOTES COMPUT SC
PY 2004
VL 3154
BP 308
EP 309
PG 2
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BAU85
UT WOS:000223656200022
ER

PT S
AU Kolb, R
   Muthig, D
AF Kolb, R
   Muthig, D
BE Nord, RL
TI Quality assurance for software product lines
SO SOFTWARE PRODUCT LINES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Software Product Lines (SPLC 2004)
CY AUG 30-SEP 02, 2004
CL Boston, MA
C1 Fraunhofer Inst Expt Software Engn, D-67661 Kaiserslautern, Germany.
RP Kolb, R (reprint author), Fraunhofer Inst Expt Software Engn, Sauerwiesen 6, D-67661 Kaiserslautern, Germany.
EM kolb@iese.fraunhofer.de; muthig@iese.fraunhofer.de
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-22918-3
J9 LECT NOTES COMPUT SC
PY 2004
VL 3154
BP 312
EP 312
PG 1
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BAU85
UT WOS:000223656200025
ER

PT S
AU Cohen, S
   Zubrow, D
   Chastek, G
AF Cohen, S
   Zubrow, D
   Chastek, G
BE Nord, RL
TI Developing a measurement program tor software product lines
SO SOFTWARE PRODUCT LINES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Software Product Lines (SPLC 2004)
CY AUG 30-SEP 02, 2004
CL Boston, MA
C1 Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
RP Cohen, S (reprint author), Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
EM sgc@sei.cmu.edu; dz@sei.cmu.edu; gjc@sei.cmu.edu
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-22918-3
J9 LECT NOTES COMPUT SC
PY 2004
VL 3154
BP 318
EP 318
PG 1
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BAU85
UT WOS:000223656200030
ER

PT B
AU Classen, A
   Hubaux, A
   Heymans, P
AF Classen, Andreas
   Hubaux, Arnaud
   Heymans, Patrick
GP IEEE
TI Analysis of Feature Configuration Workflows
SO PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING
   CONFERENCE
LA English
DT Proceedings Paper
CT 17th IEEE International Requirements Engineering Conference
CY AUG 30-SEP 04, 2009
CL Atlanta, GA
SP Cisco, ABB, Siemens, IBM, Atlanta Spin, Int Requirements Engn Board, Springer, Inst Support, IEEE Comp Soc, ACM SIGSOFT, INCOSE, IFIP WG 2 9, LERO, Georgia State Univ, NSF
AB We recently introduced feature configuration workflows, a formalism for modelling the complex configuration processes in software product line engineering. In earlier work we identified obstacles to efficient tool support for which we now outline the main concepts of a solution. These take the form of a set of analysis tasks that can be performed on feature configuration workflows.
C1 [Classen, Andreas; Hubaux, Arnaud; Heymans, Patrick] Univ Namur, Fac Comp Sci, PReCISE Res Ctr, B-5000 Namur, Belgium.
RP Classen, A (reprint author), Univ Namur, Fac Comp Sci, PReCISE Res Ctr, B-5000 Namur, Belgium.
EM acs@info.fundp.ac.be; ahu@info.fundp.ac.be; phe@info.fundp.ac.be
CR Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.225
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   HUBAUX A, 2009, P SPLC 09 IN PRESS
   Kang K., 1990, CMUSEI90TR21
   Lang J, 2008, ARTIF INTELL, V172, P991, DOI 10.1016/j.artint.2007.12.003
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Schobbens PY, 2006, RE'06: 14th IEEE International Requirements Engineering Conference, Proceedings, P139
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
NR 8
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 978-0-7695-3761-0
PY 2009
BP 381
EP 382
DI 10.1109/RE.2009.55
PG 2
WC Computer Science, Theory & Methods; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BVA27
UT WOS:000290885300050
ER

PT J
AU Dong, JL
AF Dong, Jianli
BE Yu, F
   Yue, G
   Shu, J
   Liu, Y
TI Research Survey on Integrated Software Engineering Environment Based on
   Product Line
SO PROCEEDINGS OF INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND
   COMPUTATIONAL TECHNOLOGY (ISCSCT 2009)
LA English
DT Proceedings Paper
CT International Symposium on Computer Science and Computational Technology
CY DEC 26-28, 2009
CL Huangshan, PEOPLES R CHINA
SP Univ Jiaxing, Univ Russia, Peoples Friendship, Univ Nanchang Hangkong, Univ Feng Chia, Qingdao Univ Sci & Technol, Univ Human Agr, Guangdong Univ Business Studies, Acad Publisher
DE integrated software engineering environment; software components;
   software architecture; software product line; core assets; environment
   database platform
ID REQUIREMENTS; SUPPORT; FRAMEWORK
AB Through research and analysis on the software engineer process and the life cycle model based on product line, integrated software engineering environment model, core resource and the environment database platform, the technology of automation of modern manufacturing industry production line and so on, a novel multi-layers and multi-dimensional integrated software engineering environment model and realizing framework based on product line is proposed, this model takes the product line core assets components as the middleware and bus. At the same time, with the unified conceptual model, data model and behavior model, the integrated mechanism of the environment interfaces, tools and data in the model is systematically studied and discussed. The models, theories, technologies and methods mentioned in this paper have significant reference and guidance effect on the research and development of current product line software engineering and integrated software engineering environment.
C1 HuaiHai Inst Technol, Sch Comp Engn, Lianyungang 222005, Peoples R China.
RP Dong, JL (reprint author), HuaiHai Inst Technol, Sch Comp Engn, Lianyungang 222005, Peoples R China.
EM dongjl1019@sina.com
CR Ajila SA, 2008, J SYST SOFTWARE, V81, P1784, DOI 10.1016/j.jss.2007.12.797
   BROWN P, 2001, COMPONENT DATABASE S, P29, DOI 10.1016/B978-155860642-5/50003-1
   CHEN M, 1992, IEEE SOFTWARE, V9, P18, DOI 10.1109/52.120597
   CHEN S, 1993, INFORM SOFTWARE TECH, V35, P149, DOI 10.1016/0950-5849(93)90052-5
   CLEMENTS P., 2003, SOFTWARE PRODUCT LIN
   Dong Jian-li, 2008, Computer Engineering and Design, V29
   DONG JL, ISCSCT 2008 P IEEE C, V1, P66
   Fei YuKuai, 2005, SOFTWARE COMPONENT T, P4
   HITCHCOCK P, 1987, INFORM SOFTWARE TECH, V29, P15, DOI 10.1016/0950-5849(87)90015-2
   *IEEE INC, 1998, 14621988 IEEE INC
   Kim J, 2008, J SYST SOFTWARE, V81, P37, DOI 10.1016/j.jss.2007.04.011
   LEMPP P, 1986, MICROPROC MICROPROG, V18, P223, DOI 10.1016/0165-6074(86)90048-7
   Mellado D, 2008, COMPUT STAND INTER, V30, P361, DOI 10.1016/j.csi.2008.03.004
   Sun Chang-ai, 2002, Journal of Software, V13
   Yang Fu-Qing, 2005, Journal of Software, V16, DOI 10.1360/jos160001e
NR 15
TC 0
Z9 0
PU ACAD PUBL
PI OULU
PA PO BOX 40, OULU, FIN-90571, FINLAND
BN 978-952-5726-07-7
PY 2009
BP 16
EP 19
PG 4
WC Computer Science, Information Systems; Computer Science, Theory &
   Methods
SC Computer Science
GA BRA62
UT WOS:000282276100004
ER

PT S
AU Northrop, LM
   Clements, PC
AF Northrop, LM
   Clements, PC
BE Nord, RL
TI An introduction to software product lines
SO SOFTWARE PRODUCT LINES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 3rd International Conference on Software Product Lines (SPLC 2004)
CY AUG 30-SEP 02, 2004
CL Boston, MA
C1 Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
RP Northrop, LM (reprint author), Carnegie Mellon Univ, Inst Software Engn, Pittsburgh, PA 15213 USA.
EM lmn@sei.cmu.edu; clements@sei.cmu.edu
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-22918-3
J9 LECT NOTES COMPUT SC
PY 2004
VL 3154
BP 322
EP 322
PG 1
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BAU85
UT WOS:000223656200034
ER

PT B
AU Mannion, M
AF Mannion, M
BE Coallier, F
   Hoffnagle, G
   Layzell, P
   OBrien, L
   Poo, D
TI Organizing for software product line engineering
SO 10TH INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING
   PRACTICE, PROCEEDINGS
LA English
DT Proceedings Paper
CT 10th International Workshop on Software Technology and Engineering
   Practice
CY OCT 06-08, 2002
CL MONTREAL, CANADA
SP Int Workshop Case, Ecole Technol Super
DE Learning Organization; software product line engineering; management
AB Software Product Line Engineering is the discipline of engineering a set of software-intensive systems sharing a common, managed set of features that satisfy the specific needs of a particular market segment or mission and that are developed from a common set of core assets in a prescribed way. The organizational characteristics required to successfully carry out software product line engineering will vary according to an organization's needs. However in general competitive advantage in software product line engineering lies in an organization's capacity to learn and adapt its products accordingly. This paper presents the conditions for a Learning Organization from management theory and argues that these conditions must prevail for software product line engineering to succeed.
C1 Glasgow Caledonian Univ, Sch Comp & Math Sci, Glasgow G4 0BA, Lanark, Scotland.
RP Mannion, M (reprint author), Glasgow Caledonian Univ, Sch Comp & Math Sci, Glasgow G4 0BA, Lanark, Scotland.
CR ARGYRIS, 1976, ADM Q, V21, P363
   BOCKLE G, 2002, P 2 INT SOFTW PROD L, P49
   Bosch J, 2000, DESIGN USE SOFTWARE
   Clements P, 2002, SOFTWARE PRODUCT LIN
   COHEN S, 1990, CMUSEI90TR21 FODA
   Ferber S., 2002, P 2 INT C SOFTW PROD, P235
   GOMAA H, 1995, J SYST SOFTWARE, V28, P189, DOI 10.1016/0164-1212(94)00056-S
   Handy C., 1985, UNDERSTANDING ORG
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   Mabey C., 1998, HUMAN RESOURCE MANAG
   Mannion M., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.841035
   Mili A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, DOI 10.1109/ICSE.2000.870407
   Mili A, 1999, IEEE SOFTWARE, V16, P22, DOI 10.1109/52.795098
   MILLER D, 1986, READINGS STRATEGIC M
   MINTZBERG H, 1978, MANAGE SCI, V24, P934, DOI 10.1287/mnsc.24.9.934
   MUMFORD A, 1994, MANAGING LEARNING, P77
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   *ODM, 1996, STARSVCA02500100 ODM
   PEDLER M, 1988, LEARNING COMPANY
   Poulin J., 1996, MEASURING SOFTWARE R
   Senge P.M., 1990, 5 DISCIPLINE AGE PRA
   Software Productivity Consortium Services Corporation, 1993, SPC92019CMC
   Thiel S., 2002, P 2 SOFTW PROD LIN C, P130
NR 24
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1878-8
PY 2003
BP 55
EP 61
PG 7
WC Computer Science, Software Engineering
SC Computer Science
GA BX49K
UT WOS:000185467600008
ER

PT B
AU Weston, N
   Rashid, A
AF Weston, Nathan
   Rashid, Awais
GP ACM
TI ArborCraft: Automatic Feature Models from Textual Requirements Documents
SO EA'09: EARLY ASPECT WORKSHOP
LA English
DT Proceedings Paper
CT 15th Early Aspect Workshop held at the 8th International Conference on
   Aspect-Oriented Software Development
CY MAR 03, 2009
CL Charlottesville, VA
SP ACM SIGPLAN, ACM SIGSOFT, Carnegie Mellon, Software Engn Inst
HO Univ Virginia
DE Feature Modelling; Natural Language Processing; Product Line
   Engineering; Requirements Engineering
AB One of the tasks facing requirements engineers working in the field of Product Line Engineering is the creation of feature models, which represent the domain of the product line and from which product configurations can be derived. Requirements documents, which are to be mined for this information, are often very large and written in potentially ambiguous natural language, and can be written over a long period of time by various authors. This makes the engineer's task very arduous, and a clear separation of concerns is often difficult to infer from textual documents. We present ArborCraft, a tool which automatically mines textual requirements documents, identifies features based on natural-language processing techniques, and produces a candidate feature model. We show that this can significantly reduce the burden on the requirements engineer and promote separation of concerns early in the Product Line Engineering process.
C1 [Weston, Nathan; Rashid, Awais] Univ Lancaster, Dept Comp, Lancaster, England.
RP Weston, N (reprint author), Univ Lancaster, Dept Comp, Lancaster, England.
EM westonn@comp.lancs.ac.uk; marash@comp.lancs.ac.uk
NR 0
TC 0
Z9 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1515 BROADWAY, NEW YORK, NY 10036-9998 USA
BN 978-1-60558-442-3
PY 2009
BP 45
EP 45
PG 1
WC Computer Science, Software Engineering
SC Computer Science
GA BNX23
UT WOS:000275806100009
ER

PT S
AU Oliveira, D
   Rosa, N
AF Oliveira, Davi
   Rosa, Nelson
GP IEEE
TI Uba: A Software Product Line Architecture for Grid-Oriented Middleware
SO 2009 IEEE 33RD INTERNATIONAL COMPUTER SOFTWARE AND APPLICATIONS
   CONFERENCE, VOLS 1 AND 2
SE PROCEEDINGS - INTERNATIONAL COMPUTER SOFTWARE & APPLICATIONS CONFERENCE
LA English
DT Proceedings Paper
CT IEEE 33rd International Computer Software and Applications Conference
CY JUL 20-24, 2009
CL Seattle, WA
SP IEEE
AB Grid-oriented middleware implements basic operations of the grid infrastructure such as coordination of the access to resources, authentication, discovery, resources, and quality of service management. However, building a grid-oriented middleware is a complex task due to the complexity of the aforementioned operations, the inherent heterogeneity of grid computing environments and the large number of user/devices that use the grid. In this context, we present a Product Line Architecture (PLA), named Uba, for facilitating the development of grid-oriented middleware systems. In order to validate the proposed PLA, it is instantiated in the construction of a middleware for grid computing.
C1 [Oliveira, Davi] Fed Univ Para, BR-66059 Belem, Para, Brazil.
RP Oliveira, D (reprint author), Fed Univ Para, BR-66059 Belem, Para, Brazil.
EM davi@ufpa.br; nsr@cin.ufpe.br
RI Rosa, Nelson/G-5163-2012
CR Apel S., 2005, LNCS, V3437
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice
   DOBRICA L, 2007, SOFTWARE ENG RES PRA, P269
   GOASGUEN S, 2007, 8 IEEE ACM INT C GRI, P1
   Kang K., 1990, CMUSEI90TR21
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   Matinlassi M., 2002, QUALITY DRIVEN ARCHI
   MATINLASSI M, 2002, INT C SOFTW SYST ENG
   PENG L, 2006, P 14 IEEE INT C NETW, P1
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   van der Linden F., 2007, SOFTWARE PRODUCT LIN
   Zhang W., 2007, P 12 IEEE INT C ENG, P148
NR 12
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
SN 0730-3157
BN 978-1-4244-4525-7
J9 P INT COMP SOFTW APP
PY 2009
BP 833
EP 838
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering; Computer Science, Theory & Methods
SC Computer Science
GA BNE37
UT WOS:000274261400131
ER

PT B
AU Laguna, MA
   Marques, JM
AF Laguna, Miguel A.
   Marques, Jose M.
GP IEEE
TI Feature Diagrams and their Transformations
SO 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED
   APPLICATIONS, PROCEEDINGS
LA English
DT Proceedings Paper
CT 35th Euromicro Conference on Software Engineering and Advanced
   Applications
CY AUG 27-29, 2009
CL Patras, GREECE
DE feature diagram; product line; meta-model
ID REUSE
AB Feature models represent the variability and commonality of software product lines and permit the configuration of each specific application to be selected. We use a hypergraph based formalism to define an extensible and comprehensive feature meta-model. As a result, we readily can build a set of modeling tools compatible with the different flavors of these diagrams. Finally, automatic transformations of feature diagrams into UML models of the product line architecture are defined to register model traceability.
C1 [Laguna, Miguel A.; Marques, Jose M.] Univ Valladolid, Dept Comp Sci, E-47002 Valladolid, Spain.
RP Laguna, MA (reprint author), Univ Valladolid, Dept Comp Sci, E-47002 Valladolid, Spain.
EM mlaguna@infor.uva.es; jmmc@infor.uva.es
RI Laguna, Miguel A./F-9886-2010
CR BATORY D, 2005, FEATURE MODELS GRAMM
   Bosch J, 2000, DESIGN USE SOFTWARE
   CECHTICKY V, 2004, ICSR 2004, P101
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.213
   GALLO G, 1993, DISCRETE APPL MATH, V42, P177, DOI 10.1016/0166-218X(93)90045-P
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   Kang K., CMUSEI90TR21
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   LAGUNA MA, 2007, SEAMLESS DEV SOFTWAR
   LAGUNA MA, GIRO20092 TR
   Lee K, 2000, SOFTWARE PRACT EXPER, V30, P1025, DOI 10.1002/1097-024X(20000725)30:9<1025::AID-SPE323>3.3.CO;2-N
   *OMG, 2005, AD20050302 OBJ MAN G
   RIEBISCH M, 2002, P IDPT2002 JUN
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
NR 14
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 978-0-7695-3784-9
PY 2009
BP 97
EP 104
DI 10.1109/SEAA.2009.34
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BNX96
UT WOS:000275857500012
ER

PT S
AU Krueger, CW
AF Krueger, CW
BE Obbink, H
   Pohl, K
TI Change is good. You go first
SO SOFTWARE PRODUCT LINES, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 9th International Software Product Lines Conference (SPLC 2005)
CY SEP 26-29, 2005
CL Rennes, FRANCE
AB There is ample evidence that for many software development organizations, a change to software product line practice would be good. But there is also a reluctance by many of these software development organizations to go first. This panel explores what remains to be done by the SPLC community and others to overcome the inhibitors and to facilitate SPL adoption.
C1 BigLever Software, Austin, TX 78730 USA.
RP Krueger, CW (reprint author), BigLever Software, 10500 Laurel Hill Cove, Austin, TX 78730 USA.
EM ckrueger@biglever.com
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-28936-4
J9 LECT NOTES COMPUT SC
PY 2005
VL 3714
BP 135
EP 135
PG 1
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BDG27
UT WOS:000233358200014
ER

PT B
AU Zheng, L
   Zhang, CA
   Wu, ZW
   Yan, YX
AF Zheng, Li
   Zhang, Chao
   Wu, Zhanwei
   Yan, Yixin
BE Huang, ML
   Nguyen, QV
   Zhang, K
TI Visualized Feature Modeling in Software Product Line
SO VISUAL INFORMATION COMMUNICATION
LA English
DT Proceedings Paper
CT International Conference on Visual Information Communications
CY SEP, 2009
CL Sydney, AUSTRALIA
DE Software Product Line; Feature Modeling; Visualization
AB In the research of commonalities and variations of domain modeling, feature modeling is proved to be an effective and widely used method. But how to visualize the feature models in user interfaces remains to be a problem. In studying the data processing domain, we design rendering rules to combine features to user visible engines in GUI XML and UML based Architecture Description Language (ADL). Furthermore, we visualize the process in our IDE tool based on Eclipse.
C1 [Zheng, Li; Zhang, Chao; Wu, Zhanwei; Yan, Yixin] Tsinghua Univ, Dept Comp Sci & Technol, Beijing, Peoples R China.
RP Zheng, L (reprint author), Tsinghua Univ, Dept Comp Sci & Technol, Beijing, Peoples R China.
EM zhengli.ts@gmail.com; mnchaoster@gmail.com; vincent.ng.thu@gmail.com;
   yanyx06@163.com
CR Batory D., 2005, P 9 INT C SOFTW PROD, P7
   Czarnecki K, 2005, LECT NOTES COMPUT SC, V3676, P422
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23
   Czarnecki K., 2006, P INT C GEN PROGR CO, P211, DOI 10.1145/1173706.1173738
   Heidenreich F., 2007, 2 WORKSH ASP OR PROD
   Heymans P, 2008, IET SOFTW, V2, P281, DOI 10.1049/iet-sen:20070055
   Kang K., 1990, CMUSEI90TR21
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Medvidovic N, 2007, INFORM SOFTWARE TECH, V49, P12, DOI 10.1016/j.infsof.2006.08.006
   Power D.J., 2007, BRIEF HIST DECISION
   NEWS ITEM MANAGEMENT
NR 11
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
BN 978-1-4419-0311-2
PY 2010
BP 299
EP 310
DI 10.1007/978-1-4419-0312-9_20
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Telecommunications
SC Computer Science; Telecommunications
GA BQF10
UT WOS:000280833700020
ER

PT S
AU Azevedo, S
   Machado, RJ
   Braganca, A
   Ribeiro, H
AF Azevedo, Sofia
   Machado, Ricardo J.
   Braganca, Alexandre
   Ribeiro, Hugo
BE Bosch, J
   Lee, JJ
TI The UML "extend" Relationship as Support for Software Variability
SO SOFTWARE PRODUCT LINES: GOING BEYOND
SE Lecture Notes in Computer Science
LA English
DT Proceedings Paper
CT 14th International Software Product Lines Conference
CY SEP 13-17, 2010
CL Jeju Island, SOUTH KOREA
SP Korean Inst Informat Sci & Engn, CoSDEC, Hitachi Ltd, Carnegie Mellon, Software Engn Inst, BigLever Software Inc, IBM, Fraunhofer Inst Appl Informat Technol
DE use case; software product line; variability; "extend"; alternative;
   option; specialization
ID PRODUCT LINES
AB approaches involves dealing with diverse modeling artifacts such as use case diagrams, component diagrams, class diagrams, activity diagrams, sequence diagrams and others. In this paper we focus on use cases for product line development and we analyze them from the perspective of variability. In that context we explore the UML (Unified Modeling Language) extend relationship. This work allows understanding the activity of use case modeling with support for variability.
C1 [Azevedo, Sofia; Machado, Ricardo J.] Univ Minho, P-4719 Braga, Portugal.
RP Azevedo, S (reprint author), Univ Minho, P-4719 Braga, Portugal.
EM sofia.azevedo@dsi.uminho.pt; rmac@dsi.uminho.pt; alex@dei.isep.ipp.pt;
   hugo.ribeiro@primaverabss.com
RI Machado, Ricardo J./B-9487-2011; Braganca, Alexandre/
OI Machado, Ricardo J./0000-0002-3626-2569; Braganca,
   Alexandre/0000-0002-4882-9497
CR Bachmann F, 2004, LECT NOTES COMPUT SC, V3014, P66
   Bayer J., 2006, SOFTWARE PRODUCT LIN, P195, DOI 10.1007/978-3-540-33253-4_6
   Bosch J, 2002, LECT NOTES COMPUT SC, V2290, P13
   BRAGANCA A, 2006, 10 INT SOFTW PROD LI
   BRAGANCA A, 2005, 2 INT WORKSH MOD BAS
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Fowler M., 2004, UML DISTILLED BRIEF
   Gomaa H, 2004, LECT NOTES COMPUT SC, V3107, P274
   GOMAA H., 2004, DESIGNING SOFTWARE P
   Halmans G., 2003, SOFTWARE SYSTEMS MOD, V2, P15, DOI 10.1007/s10270-003-0019-9
   JOHN I, 2002, WORKSH TECHN EXPL CO
   Muthig D., 2004, 02504E IESE
   VANDERMASSEN T, 2002, INT WORKSH REQ ENG P
NR 13
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 978-3-642-15578-9
J9 LECT NOTES COMPUT SC
PY 2010
VL 6287
BP 471
EP 475
PG 5
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BTD71
UT WOS:000286579500039
ER

PT B
AU Geppert, B
   Weiss, DM
AF Geppert, B
   Weiss, DM
GP IEEE COMPUTER SOCIETY
   IEEE COMPUTER SOCIETY
TI Goal-oriented assessment of product-line domains
SO NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS
LA English
DT Proceedings Paper
CT 9th International Software Metrics Symposium
CY SEP 03-05, 2003
CL SYDNEY, AUSTRALIA
SP IEEE Comp Soc Tech Council Software Engn, Univ New S Wales, Univ Technol, Natl ICT, Australian Software Metr Assoc
DE goal-oriented measurement; GQM; product-line metrics; company-specific
   models; decision support
AB Software product-line engineering is a method for improving the efficiency and effectiveness of software development. Introducing such a method into an industrial software development environment is potentially of great benefit, but one cannot afford to stop product development while doing so. Rather, in Avaya we apply an incremental adoption strategy and therefore must identify which part(s) of the product line we will create first. Since we consider a product line to consist of a number of domains, the problem is to identify the right domains to start with. But what does "right" mean? How can we decide if a domain is "right" and worth spending the effort? We identified two driving factors for selecting product-line domains: corporate impact and likelihood of success. Our assessment of candidate domains is driven by these two goals, which we decompose further into a set of domain selection criteria and corresponding questions. The data, i.e., the answers to the questions, are gathered during interview sessions with our domain experts and evaluated according to our goal decomposition formulas. We illustrate the approach by an example application for which we assessed 20 different domains for one of Avaya's major product lines.
C1 Avaya Labs, Software Technol Res, Basking Ridge, NJ 07920 USA.
RP Geppert, B (reprint author), Avaya Labs, Software Technol Res, 233 Mt Airy Rd, Basking Ridge, NJ 07920 USA.
CR Ardis M, 2000, SOFTWARE PRACT EXPER, V30, P825, DOI 10.1002/(SICI)1097-024X(200006)30:7<825::AID-SPE322>3.0.CO;2-1
   ATKINS D, 2000, BELL LABS TECHNI APR
   BASILI V, 1984, IEEE T SOFTWARE  NOV
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   BOSCH J, 2001, 2O INT C SOFTW ENG
   Clements P, 2002, SOFTWARE PRODUCT LIN
   GEPPERT B, 2001, INT WORKSH PROD LIN
   Karlsson J., 1996, 2 INT C REQ ENG
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037//0033-295X.101.2.343
   Parnas D, 2001, SOFTWARE FUNDAMENTAL
   SCHMID K, 2000, SCOPING SOFTWARE PRO
   SCHMID K, 2001, 25 INT COMP SOFTW AP
   WEISS D, 2002, INT C SOFTW ENG MAY
   WITHEY J, 1996, CMUSEI96TR010 CARN S
NR 15
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1987-3
PY 2003
BP 180
EP 188
PG 9
WC Computer Science, Software Engineering
SC Computer Science
GA BX54M
UT WOS:000185645700016
ER

PT B
AU Li, M
AF Li, M
BE Lan, H
TI Study on multiple criteria decision model of mass customization and its
   algorithm
SO PROCEEDINGS OF 2003 INTERNATIONAL CONFERENCE ON MANAGEMENT SCIENCE &
   ENGINEERING, VOLS I AND II
LA English
DT Proceedings Paper
CT International Conference on Management Science and Engineering
CY AUG 15-17, 2003
CL ATLANTA, GA
SP SO Polytechnic State Univ, Harbin Inst Technol, Sch Management, Natl Nat Sci Fdn China
DE mass customization; multiple criteria decision model; neural networks
AB Mass Customization is a product mode which is to organically combine the two paradoxical product modes -- customization product mode and mass product mode, and produce reasonable-priced customization products with speed-to market and low-cost. The paper proposed a multiple criteria decision model of mass customization according to its features, and presented a kind of optimal algorithm based on neural networks. A calculation example was given in the end.
C1 Guilin Inst Elect Technol, Dept Comp, Guilin 541004, Peoples R China.
CR ANDERSON DM, 1998, AGILITY GLOBAL COMPE, V2, P36
   SI X, 1998, J MANAGEMENT SCI CHI, P36
   Svensson C, 2002, COMPUT IND, V49, P77, DOI 10.1016/S0166-3615(02)00060-X
NR 3
TC 0
Z9 0
PU HARBIN INSTITUTE TECHNOLOGY PUBLISHERS
PI HARBIN
PA 16 FUXINGJIE NANGANGQU, HARBIN 150006, HEILONGJIANG, PEOPLES R CHINA
BN 7-5603-1910-6
PY 2003
BP 553
EP 556
PG 4
WC Computer Science, Artificial Intelligence; Computer Science, Information
   Systems; Economics; Engineering, Industrial; Operations Research &
   Management Science
SC Computer Science; Business & Economics; Engineering; Operations Research
   & Management Science
GA BX93Y
UT WOS:000186892000103
ER

PT B
AU Stolle, R
   Rossak, W
AF Stolle, R
   Rossak, W
BE Callaos, N
   HernandezEncinas, L
   Yetim, F
TI ilib - GUI components in web programming
SO 6TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL
   I, PROCEEDINGS: INFORMATION SYSTEMS DEVELOPMENT I
LA English
DT Proceedings Paper
CT 6th World Multi-Conference on Systemics, Cybernetics and Informatics
   (SCI 2002)/8th International Conference on Information Systems Analysis
   and Synthesis (ISAS 2002)
CY JUL 14-18, 2002
CL ORLANDO, FL
SP Int Inst Informat & System, World Org System & Cybernet, Ctr Syst Studies, Syst Soc Poland, Soc Appl Syst Res, Slovenian Artificial Intelligence Soc, Simon Bolivar Univ, Polish Syst Soc, Italian Soc System, Int Soc Syst Sci, Int Syst Inst, Int Federat Syst Res, Cybernet & Human Knowing, Journal Second Order Cybernet & Cybersemiot, Blaise Pascal Univ, Engineer Sci Inst, CUST, Univ Las Palmas Gran Canaria, Concurrency & Architecture Grp, Telemat Engn Dept, Tunisian Sci Soc, Acad Non Linear Sci, San Luis Natl Univ, Lab Res Computat Intelligence, Dept Informat, Amer Soc Cybernet (Canada), Wolfram Res Inc, IEEE Comp Soc, Venezuela Chapter, Steacie Inst Molec Sci, Natl Res Council Canada
DE patterns; CGI; C plus; servlet; HTML; XML; web development
AB Software reuse is still a field of research with a state of the art that is behind expectations. The need for components is as widely acknowledged as the need for appropriating architectures as their living space. However, despite usable technologies these two conditions didn't lead to the desired solution.
   One problem is identified in the wide range of possible components. It is difficult to archive thousands of components for an effective retrieval, even if there is an environment where they could easily be plugged in. Software Product Lines attack this problem by reducing the applicability of components to a specific domain. Instead of building silver bullets for the world, the goal is it to support a small domain consequently and over a long time. The "internet library" ( ilib), described in this paper, follows this approach for the domain of web applications, especially web based information systems. By enabling the ilib namespace in a standard C++ environment and applying some architectural rules, a developer can easily and efficiently build such web applications with high quality, scalability, and performance, running in a standard web server environment (CGI). He/she is also supported in developing and archiving components applicable in many different projects. The main focus on this paper will be on the GUI related components of the ilib.
C1 Univ Jena, Inst Informat, D-07743 Jena, Germany.
RP Stolle, R (reprint author), Univ Jena, Inst Informat, Ernst Abbe Pl 1-4, D-07743 Jena, Germany.
CR BOX D, 2000, XML ESSENTIAL MARKUP
   Gamma E., 1994, DESIGN PATTERNS ELEM
   MUNZ S, 1995, HTML DATEIEN SELBST
   Ray E., 2001, LEARNING XML
   STOLLE R, 2002, ILIB MANUAL
   Stolle R., 2000, Proceedings Seventh IEEE International Conference and Workshop on the Engineering of Computer Based Systems (ECBS 2000), DOI 10.1109/ECBS.2000.839870
   W3C, 2000, XHTML 1 0 EXT HYP MA
NR 7
TC 0
Z9 0
PU INT INST INFORMATICS & SYSTEMICS
PI ORLANDO
PA 14269 LORD BARCLAY DR, ORLANDO, FL 32837 USA
PY 2002
BP 439
EP 444
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BV42E
UT WOS:000178906800079
ER

PT B
AU Ajila, SA
AF Ajila, SA
BE Callaos, N
   Porter, J
   Rishe, N
TI Change management: Modeling software product lines evolution
SO 6TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL
   VII, PROCEEDINGS: INFORMATION SYSTEMS DEVELOPMENT II
LA English
DT Proceedings Paper
CT 6th World Multi-Conference on Systemics, Cybernetics and Informatics
   (SCI 2002)/8th International Conference on Information Systems Analysis
   and Synthesis (ISAS 2002)
CY JUL 14-18, 2002
CL ORLANDO, FL
SP Int Inst Informat & System, World Org System & Cybernet, Ctr Syst Studies, Syst Soc Poland, Soc Appl Syst Res, Slovenian Artificial Intelligence Soc, Simon Bolivar Univ, Polish Syst Soc, Italian Soc System, Int Soc Syst Sci, Int Syst Inst, Int Federat Syst Res, Cybernet & Human Knowing, Journal Second Order Cybernet & Cybersemiot, Blaise Pascal Univ, Engineer Sci Inst, CUST, Univ Las Palmas Gran Canaria, Concurrency & Architecture Grp, Telemat Engn Dept, Tunisian Sci Soc, Acad Non Linear Sci, San Luis Natl Univ, Lab Res Computat Intelligence, Dept Informat, Amer Soc Cybernet (Canada), Wolfram Res Inc, IEEE Comp Soc, Venezuela Chapter, Steacie Inst Molec Sci, Natl Res Council Canada
AB In a traditional software engineering approach (otherwise known as single-product approach), the software architecture is evaluated with respect to the requirements of that product alone. However, a product line approach requires the software designer to consider requirements for a family of systems and the relationships between those requirements. This paper examines three kinds of evolution processes: architecture, component, and product. In modeling software product lines evolution, four distinct change management processes are identified - product change process, component-set change process,framework change process, and product line change integration. These change processes share four strategies - change identification, change impact calculation, change propagation, and change validation. This paper also present an evolution modeling approach based on the dependency relationships structure of the various artifacts involved in product line families. The paper also shows how the relationships between the different artifacts in a product line is captured and used in change management.
C1 Carleton Univ, Dept Syst & Comp Engn, Ottawa, ON K1S 5B6, Canada.
RP Ajila, SA (reprint author), Carleton Univ, Dept Syst & Comp Engn, 1125 Colonel By Dr, Ottawa, ON K1S 5B6, Canada.
EM ajila@sce.carleton.ca
CR AJILA S, 1995, INT J SOFTWARE PRACT, V25, P1155
   AJILA SA, 2000, P SOFTW DEV THEOR PR, P48
   AJILA SA, 1999, PROCESS SUPPORT DIST, V2, P531
   Booch G, 1999, UNIFIED MODELING LAN
   Bosch J, 2000, DESIGN USE SOFTWARE
   BRUEGE B, 2000, OBJECT ORIENTED SOFT
   Clements P, 2002, SOFTWARE PRODUCT LIN
   KABA A, 1996, THESIS I NATL POLYTE
   Lehman MM, 1985, APIC STUDIES DATA PR, V27
   Schach SR, 2000, KLUWER INT SER ENG C, V576, P437
NR 10
TC 0
Z9 0
PU INT INST INFORMATICS & SYSTEMICS
PI ORLANDO
PA 14269 LORD BARCLAY DR, ORLANDO, FL 32837 USA
PY 2002
BP 492
EP 497
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BV42H
UT WOS:000178907200089
ER

PT J
AU Zualkernan, IA
AF Zualkernan, Imran A.
BE Chova, LG
   Belenguer, DM
   Torres, IC
TI TOWARDS A SOFTWARE PRODUCT LINE METHODOLOGY FOR QTI-BASED ASSESSMENT
   SYSTEMS
SO EDULEARN10: INTERNATIONAL CONFERENCE ON EDUCATION AND NEW LEARNING
   TECHNOLOGIES
LA English
DT Proceedings Paper
CT 2nd International Conference on Education and New Learning Technologies
   (EDULEARN)
CY JUL 05-07, 2010
CL Barcelona, SPAIN
DE QTI; assessments; product-line engineering; tangible learning; wearable
   learning
AB This paper develops a specific software product-line framework for IMS-QTI-based assessment systems. In specific, software product line architecture, the core underlying architectural features, product common features and product variable features are developed by using product requirement analysis, product variability analysis and product commonality analysis. This product line framework is validated by applying it to a variety of target platforms including mobile platform using Adobe Flash, a Zigbee-based ubiquitous wearable learning platform called Prete-a-apprendre+, and an adaptive role-playing game (RPG) engine (Neverwinternights).
C1 [Zualkernan, Imran A.] Amer Univ Sharjah, Sharjah, U Arab Emirates.
EM izualkernan@aus.edu
CR Akkerman S, 2009, COMPUT EDUC, V52, P449, DOI 10.1016/j.compedu.2008.09.014
   Brand S., 1994, BUILDINGS LEARN WHAT
   Falmagne J.C., 1999, KNOWLEDGE SPACES
   Gibbons S., 2000, INSTRUCTIONAL USE LE
   van der Linden F, 2002, IEEE SOFTWARE, V19, P41, DOI 10.1109/MS.2002.1020286
   Zualkernan I. A., 2010, 10 IEEE INT C ADV LE
   Zualkernan I. A., 2009, INT C ED RES INN ICE
   Zualkernan I. A., 2010, IEEE 2 C ED TECHN CO
   Zualkernan I. A., 2009, 2 ANN FOR E LEARN EX, P201
   Zualkernan I. A., 2007, P 7 IEEE INT C ADV L
   Zualkernan I. A., 2010, 5 MIT INT LINC C BOS
NR 11
TC 0
Z9 0
PU IATED-INT ASSOC TECHNOLOGY EDUCATION A& DEVELOPMENT
PI VALENICA
PA LAURI VOLPI 6, VALENICA, BURJASSOT 46100, SPAIN
BN 978-84-613-9386-2
PY 2010
BP 1503
EP 1509
PG 7
WC Education & Educational Research
SC Education & Educational Research
GA BEY96
UT WOS:000318781701078
ER

PT B
AU Tierney, PJ
   Ajila, SA
AF Tierney, PJ
   Ajila, SA
BE Callaos, N
   Porter, J
   Rishe, N
TI FOOM - Feature-based object oriented modeling: Implementation of a
   process to extract and extend software product line architecture
SO 6TH WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL
   VII, PROCEEDINGS: INFORMATION SYSTEMS DEVELOPMENT II
LA English
DT Proceedings Paper
CT 6th World Multi-Conference on Systemics, Cybernetics and Informatics
   (SCI 2002)/8th International Conference on Information Systems Analysis
   and Synthesis (ISAS 2002)
CY JUL 14-18, 2002
CL ORLANDO, FL
SP Int Inst Informat & System, World Org System & Cybernet, Ctr Syst Studies, Syst Soc Poland, Soc Appl Syst Res, Slovenian Artificial Intelligence Soc, Simon Bolivar Univ, Polish Syst Soc, Italian Soc System, Int Soc Syst Sci, Int Syst Inst, Int Federat Syst Res, Cybernet & Human Knowing, Journal Second Order Cybernet & Cybersemiot, Blaise Pascal Univ, Engineer Sci Inst, CUST, Univ Las Palmas Gran Canaria, Concurrency & Architecture Grp, Telemat Engn Dept, Tunisian Sci Soc, Acad Non Linear Sci, San Luis Natl Univ, Lab Res Computat Intelligence, Dept Informat, Amer Soc Cybernet (Canada), Wolfram Res Inc, IEEE Comp Soc, Venezuela Chapter, Steacie Inst Molec Sci, Natl Res Council Canada
DE object oriented model; features; domain analysis; software product
   lines; design; and analysis
AB FOOM is a synthesis of the FODA (Feature Oriented Domain Analysis) and Horseshoe models. It includes an Object Oriented approach to Product Line Family architectures. It focuses on identifying user-driven features throughout the product line architecture; organizing the architectural assets to lend them to substantial re-use: and instantiating multiple products from a single architecture. The Unified Software Development Process (USP) is used as a template for describing the architectural transformation from a base product to a product-line. Unified Modeling Language (UML) is used as a notation for the various assets developed in the FOOM process. This paper introduces the notion of a feature class and feature list. The feature list serves as contracts between the product and the features. A simple heuristic based on the definition of user visible objects and non-user visible objects is used in building the feature model. In its entirety, FOOM is a synthesis of FODA and the horseshoe models, but we are concerned with the aspects that integrate and extend the FODA methodology in this paper.
C1 Projexis Inc, Carlisle, ON L0R 1H2, Canada.
RP Tierney, PJ (reprint author), Projexis Inc, Carlisle, ON L0R 1H2, Canada.
CR Atkinson C., 2000, P 1 SOFTW PROD LIN C, P289
   Booch G, 1999, UNIFIED MODELING LAN
   Bosch J, 2000, DESIGN USE SOFTWARE
   Bruegge B., 2000, OBJECT ORIENTED SOFT
   *CARN SOFTW ENG I, FEAT OR DOM AN
   *CARN SOFTW ENG I, REENG HORS MOD
   *CARN SOFTW ENG I, PROD LIN AN
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   KANG K, 1990, CMUSEI90TR2
   KAZMAN R, 1998 WORK C REV ENG
   WARMER J, 1999, OBJECT CONSTRAINT LA
   WING L, 1998, LNCS, V1413, P219
NR 12
TC 0
Z9 0
PU INT INST INFORMATICS & SYSTEMICS
PI ORLANDO
PA 14269 LORD BARCLAY DR, ORLANDO, FL 32837 USA
PY 2002
BP 510
EP 515
PG 6
WC Computer Science, Information Systems; Computer Science, Software
   Engineering; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BV42H
UT WOS:000178907200092
ER

PT B
AU Wall, A
   Norstrom, C
AF Wall, A
   Norstrom, C
BE Dietrich, D
   Neumann, P
   Thomesse, JP
TI A component model for embedded real-time software product-lines
SO FIELDBUS SYSTEMS AND THEIR APPLICATIONOS 2001 (FET'2001)
SE IFAC PROCEEDINGS SERIES
LA English
DT Proceedings Paper
CT 4th IFAC Conference on Fieldbus Systems and Their Applications (FeT
   2001)
CY NOV 15-16, 2001
CL NANCY, FRANCE
SP Int Federat Automat Control, TC Components & Instruments
DE architectures; components; embedded systems; systems design; real-time
AB This paper proposes a component model suitable for use in the development of embedded real-time systems where resources, such as memory and CPUs, usually are very limited. A precise sematics for this model is defined. A precise semantics is necessary to enable architectural analysis of systems specified with such a model. A typical example of such analyses is scheduling where the temporal correctness is verified. The model is constructed with software product-lines in mind. Thus an essential part is how to specify and verify flexibility in the components. The model proposed in this paper is also independent from its infrastructure, i.e. operating system. This since the model makes no assumptions about its environment with regards to task models and component infrastructures such as name servers or object request brokers. Copyright(C) 2001 IFAC.
C1 Malardalen Univ, Malardalen Real Time Res Ctr, Dept Comp Engn, Vasteras, Sweden.
RP Wall, A (reprint author), Malardalen Univ, Malardalen Real Time Res Ctr, Dept Comp Engn, Vasteras, Sweden.
CR Bosch J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.841044
   DIKEL D, 1996, IEEE COMPUT, V30, P49
   *INT EL COMM, 1995, 11313 IEC
   STEVENS P, 1999, USING UML SOFTWARE E
   STEWART DB, 1997, IEEE T SOFTWARE ENG, V23
NR 5
TC 0
Z9 0
PU PERGAMON-ELSEVIER SCIENCE LTD
PI KIDLINGTON
PA THE BOULEVARD, LANGFORD LANE,, KIDLINGTON OX5 1GB, OXFORD, ENGLAND
BN 0-08-044003-7
J9 IFAC P SER
PY 2002
BP 265
EP 271
PG 7
WC Automation & Control Systems; Telecommunications; Transportation Science
   & Technology
SC Automation & Control Systems; Telecommunications; Transportation
GA BW09H
UT WOS:000180832400040
ER

PT J
AU Babar, MA
   Chen, LP
   Shull, F
AF Babar, Muhammad Ali
   Chen, Lianping
   Shull, Forrest
TI Voice of Evidence Managing Variability in Software Product Lines (vol
   27, pg 89, 2010)
SO IEEE SOFTWARE
LA English
DT Correction
CR Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
NR 1
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0740-7459
J9 IEEE SOFTWARE
JI IEEE Softw.
PD NOV-DEC
PY 2010
VL 27
IS 6
BP 19
EP 19
PG 1
WC Computer Science, Software Engineering
SC Computer Science
GA 670RJ
UT WOS:000283444700006
ER

PT B
AU Hantos, P
   Sie, C
AF Hantos, P
   Sie, C
BE Xu, QR
   Wu, X
   Chen, J
TI Tracking action requests for software product line development and
   delivery
SO MANAGEMENT OF TECHNOLOGY AND INNOVATION IN THE 21ST CENTURY, PROCEEDINGS
LA English
DT Proceedings Paper
CT 3rd International Conference on Management of Innovation and Technology
CY OCT 25-27, 2002
CL Hangzhou, PEOPLES R CHINA
SP Zhejiang Univ, Res Ctr Innovat & Dev, Chinese Acad Sci, IEEE Engn Management Soc, NSF, State Econ & Trade Commiss, State Minist Educ, S&T Bur Hangzhou, Tellhow Co, Haier Corp, Eastcom Corp, Baoshan Steel Corp, ZTE Corp, Jiangnan Shipyard Grp Co Ltd, NorthChina Pharmaceut Grp Corp
AB The development of effective and efficient Action Request (AR) 1 systems was already a challenging task in a single product development environment, but the recent, widely embraced product line practices pose new challenges to corporations. To understand the requirements of such a system, we first present an overview of a typical Product Line Development and Delivery Model. Next we discuss the three dimensions of corporate-wide AR tracking. Based on the analysis of these dimensions a generic flow can be determined, starting with the acceptance of an AR from a User, and ending with the resolution of the request by a software developer. Based on our experience with AR tracking for product lines, we discuss some caveats and basic principles that are key to the design of an appropriate AR Tracking System. Finally we describe the recommended logical record structure for an AR Tracking Data Base Management System (A R DBMS). Please note that addressing the selection of an AR tracking software is beyond the scope of this paper.
C1 Xerox Corp, El Segundo, CA 90245 USA.
CR CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   NORTHOP LM, 2000, ARCHITECTURE BASED S
   PAULK MC, 1993, IEEE SOFTWARE
NR 3
TC 0
Z9 0
PU ZHEJIANG UNIV PRESS
PI HANGZHOU
PA YUGU ROAD 20,, HANGZHOU, ZHEJIANG 310027, PEOPLES R CHINA
BN 7-900647-20-1
PY 2002
BP 244
EP 248
PG 5
WC Economics; Engineering, Industrial; Management
SC Business & Economics; Engineering
GA BAK78
UT WOS:000222653000048
ER

PT S
AU Svahnberg, M
   Mattsson, M
AF Svahnberg, M
   Mattsson, M
BE VanderLinden, F
TI Conditions and restrictions for product line generation migration
SO SOFTWARE PRODUCT-FAMILY ENGINEERING
SE Lecture Notes in Computer Science
LA English
DT Article; Proceedings Paper
CT 4th International Workshop on Product Family Engineering (PFE-4)
CY OCT 03-05, 2001
CL BILBAO, SPAIN
SP European Ind
AB In this paper we describe a case study of a company in the domain of automatic guided vehicles (AGVs) that is in the process of migrating from a previous generation of software product line, which has mainly been centered around hardware, into a new product line generation, which will be software-centered. We describe the issues motivating this transition, and the factors that complicate it. Moreover, we present a three stage process for migrating into a new software product line. This process is currently initiated in collaboration with the aforementioned company.
C1 Blekinge Inst Technol, Dept Software Engn & Comp Sci, S-37225 Ronneby, Sweden.
RP Svahnberg, M (reprint author), Blekinge Inst Technol, Dept Software Engn & Comp Sci, POB 520, S-37225 Ronneby, Sweden.
EM Mikael.Svahnberg@bth.se; Michael.Mattsson@bth.se
CR BERGQUIST S, 1999, TEAMGAMES
   Bosch J, 2000, DESIGN USE SOFTWARE
   Bosch J., 2001, Proceedings Fifth European Conference on Software Maintenance and Reengineering, DOI 10.1109/CSMR.2001.914981
   Dager JC, 2000, KLUWER INT SER ENG C, V576, P23
   Doerr BS, 2000, KLUWER INT SER ENG C, V576, P313
   Feare T., 2001, Modern Materials Handling, V56
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   KAZMAN R, 1998, P ICECCS MONT CA AUG
   Kazman R., 1996, IEEE SOFTWARE    NOV, P47
   SVAHNBERG M, 2000, THE4SIS BLEKINGE I T
   Svahnberg M., 1999, Proceedings of the 3rd Annual IASTED International Conference Software Engineering and Applications (SEA'99)
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   Thiel S, 2000, KLUWER INT SER ENG C, V576, P495
NR 13
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43659-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2290
BP 143
EP 154
PG 12
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering
SC Computer Science
GA BW19H
UT WOS:000181140900013
ER

PT S
AU Kakola, TK
AF Kakola, Timo K.
BE DeTroyer, O
   Medeiros, CB
   Billen, R
   Hallot, P
   Simitsis, A
   VanMingroot, H
TI ISO Initiatives on Software Product Line Engineering: Vision and Current
   Status Invited Talk for Variability@ER2011
SO ADVANCES IN CONCEPTUAL MODELING: RECENT DEVELOPMENTS AND NEW DIRECTIONS
SE Lecture Notes in Computer Science
LA English
DT Proceedings Paper
CT Workshop on Software Variability Management
CY OCT 31-NOV 03, 2011
CL Brussels, BELGIUM
C1 Univ Jyvaskyla, SF-40351 Jyvaskyla, Finland.
RP Kakola, TK (reprint author), Univ Jyvaskyla, SF-40351 Jyvaskyla, Finland.
EM timo.kakola@jyu.fi
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 978-3-642-24573-2
J9 LECT NOTES COMPUT SC
PY 2011
VL 6999
BP 119
EP 119
PG 1
WC Computer Science, Information Systems; Computer Science, Software
   Engineering; Computer Science, Theory & Methods
SC Computer Science
GA BZY34
UT WOS:000303359600016
ER

PT S
AU Dobrica, L
   Niemela, E
AF Dobrica, L
   Niemela, E
BE Gacek, C
TI Software architecture quality analysis methods
SO SOFTWARE REUSE: METHODS, TECHNIQUES, AND TOOLS, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 7th International Conference on Software Reuse (ICSR-7)
CY APR 15-19, 2002
CL AUSTIN, TEXAS
SP BigLever Software Inc, Dept Informat PUC-Rio, Fraunhofer IESE, Gener Programming, Op40 Inc, Semant Designs Inc, Sodalia, Univ Alberta, Dept Elect & Comp Engn, Univ Newcastle Upon Tyne, CS Dept, Univ Texas, Comp Sci Dept
AB The open problem of structural methods is how to take a better advantage of software architectural concepts to analyse software systems for quality attributes in a systematic and repetitive way. Throughout the presentation we try to introduce a way of thinking founded on analysis at the architecture level of the quality attributes with the purpose to initiate and maintain a software product-line considering the quality as the main driver in product line development. This tutorial represents a,study that shows the state of the research at this moment, in the quality analysis methods for software architectures, by presenting And discussing the most representative architecture analysis methods. The role of the discussion is to offer guidelines related to the use of the most suitable method for an architecture assessment process.
C1 Univ Politehn Bucharest, Bucharest 77206, Romania.
   VTT Elect, FIN-90571 Oulu, Finland.
RP Dobrica, L (reprint author), Univ Politehn Bucharest, Spl Independentei 313,Sect 6, Bucharest 77206, Romania.
RI Dobrica, Liliana/E-1854-2015
CR DOBRICA L, 2002, IN PRESS IEEE T SOFT
   DOBRICA L, 2000, VTT PUBLICATIONS, V427
NR 2
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43483-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2319
BP 337
EP 338
PG 2
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BW25Y
UT WOS:000181349700031
ER

PT J
AU Zhang, XR
   Haugen, O
   Moller-Pedersen, B
AF Zhang, Xiaorui
   Haugen, Oystein
   Moller-Pedersen, Birger
BE Leung, KRPH
   Muenchaisri, P
TI Augmenting Product Lines
SO 2012 19TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE (APSEC), VOL 1
SE Asia-Pacific Software Engineering Conference
LA English
DT Proceedings Paper
CT 19th Asia-Pacific Software Engineering Conference (APSEC)
CY DEC 04-07, 2012
CL Hong Kong, PEOPLES R CHINA
SP IEEE Hong Kong Sect Comp Soc Chapter, ACM Hong Kong Chapter, IEEE Comp Soc
DE Product Line Engineering; Common Variability Language; CVL Compare;
   augment product lines
ID FEATURE MODELS
AB This paper presents a generic approach for automating the augmentation of product lines using model comparison and variability modeling techniques. Product lines are subject to frequent augmentation to include more products. Our approach aims to reduce manual effort involved in this process by automatically suggesting a tentative augmented product line model, which can serve as a baseline for the final product line. The Common Variability Language (CVL), a generic variability modeling language, is used to specify product lines in this approach. The approach applies CVL Compare, a generic approach for automating the synthesis of a CVL-based product line from a set of existing product models. The approach is illustrated with an example from a train control product line.
C1 [Zhang, Xiaorui; Haugen, Oystein] SINTEF ICT, Oslo, Norway.
RP Zhang, XR (reprint author), SINTEF ICT, Oslo, Norway.
EM Xiaorui.Zhang@sintef.no; Oystein.Haugen@sintef.no; birger@ifi.uio.no
CR Acher M, 2010, LECT NOTES COMPUT SC, V5969, P62
   Acher M., 2010, MANAGING MULTIPLE SO
   [Anonymous], 2012, CVL RESOURCES
   Apel S., 2007, MIP0706 U PASS
   Bayer J., 1999, P 1999 S SOFTW REUS
   Broek P., 2010, 14 INT SOFTW PROD LI, P83
   Fleurey F., 2009, GENERIC LANGUAGE TOO
   Haugen O., 2008, P 2008 12 INT SOFTW
   Kang K., 1998, ANN SOFTW ENG, V5, P25
   Kang K., 1990, CMUSEI90TR21
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   MOF, METAOBJECT FACIL SPE
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Segura S, 2008, LECT NOTES COMPUT SC, V5235, P489, DOI 10.1007/978-3-540-88643-3_15
   Svendsen A, 2008, LECT NOTES COMPUT SC, V5301, P128, DOI 10.1007/978-3-540-87875-9_9
   Svendsen A, 2010, LECT NOTES COMPUT SC, V6287, P106, DOI 10.1007/978-3-642-15579-6_8
   Zhang X., 2011, P 2011 15 INT SOFTW, P90
NR 17
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
SN 1530-1362
BN 978-0-7695-4922-4
J9 ASIA PAC SOFWR ENG
PY 2012
BP 766
EP 771
DI 10.1109/APSEC.2012.76
PG 6
WC Computer Science, Software Engineering
SC Computer Science
GA BA1OO
UT WOS:000332765100108
ER

PT J
AU Puranen, T
AF Puranen, Tuukka
BE Klatte, D
   Luthi, HJ
   Schmedders, K
TI Producing Routing Systems Flexibly Using a VRP Metamodel and a Software
   Product Line
SO OPERATIONS RESEARCH PROCEEDINGS 2011
SE Operations Research Proceedings
LA English
DT Proceedings Paper
CT International Conference on Operations Research (OR)
CY AUG 30-SEP 02, 2011
CL Zurich, SWITZERLAND
HO Univ Zurich
ID LOCAL SEARCH; METAHEURISTICS
AB Routing problems occur in a wide variety of situations. Due to the heterogeneity of cases we do not yet know how to manage the complexity of addressing all the relevant aspects in logistic planning and solving the variety of different problem types in a cost-efficient way. In the last decade, we have witnessed an emergence of systematic approach into managing variation within a set of related software systems. This paper presents an application of these advances from software engineering into vehicle routing: we suggest the construction of a higher-level (meta-) model of routing problems and the application of a software product line approach. The proposed approach results in a flexible product line for constructing a family of routing systems cost-efficiently.
C1 Univ Jyvaskyla, Dept Math Informat Technol, SF-40351 Jyvaskyla, Finland.
RP Puranen, T (reprint author), Univ Jyvaskyla, Dept Math Informat Technol, SF-40351 Jyvaskyla, Finland.
EM tuukka.p.puranen@jyu.fi
RI de Armas, Jesica/F-1537-2014
OI de Armas, Jesica/0000-0002-7619-7407
CR Clements P, 2001, SOFTWARE PRODUCT LIN
   Funke B, 2005, J HEURISTICS, V11, P267, DOI 10.1007/s10732-005-1997-2
   Gendreau M, 2005, ANN OPER RES, V140, P189, DOI 10.1007/s10479-005-3971-7
   Golden B, 2008, OPER RES COMPUT SCI, V43, P1, DOI 10.1007/978-0-387-77778-8
   Groer C., 2010, MATH PROGRAMMING COM, V2
   Hasle G., 2007, GEOMETRIC MODELLING, P397, DOI 10.1007/978-3-540-68783-2_12
   Irnich S., 2008, OR SPECTRUM, V30, P133
   Irnich S, 2008, INFORMS J COMPUT, V20, P270, DOI 10.1287/ijoc.1070.0239
   Partyka J, 2010, OR MS TODAY, V37, P42
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Puranen T, 2011, THESIS U JYVASKYLA
   Ropke S, 2006, EUR J OPER RES, V171, P750, DOI 10.1016/j.ejor.2004.09.004
   SAVELSBERGH MWP, 1995, TRANSPORT SCI, V29, P17, DOI 10.1287/trsc.29.1.17
   Sorensen K., 2008, ADAPTIVE MULTILEVEL, P239
   Toth P., 2001, VEHICLE ROUTING PROB
NR 15
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0721-5924
BN 978-3-642-29210-1
J9 OPERAT RES PROCEED
PY 2012
BP 407
EP 412
DI 10.1007/978-3-642-29210-1_65
PG 6
WC Operations Research & Management Science
SC Operations Research & Management Science
GA BCR98
UT WOS:000311229100065
ER

PT S
AU Krueger, CW
AF Krueger, CW
BE Gacek, C
TI Practical strategies and techniques for adopting software product lines
SO SOFTWARE REUSE: METHODS, TECHNIQUES, AND TOOLS, PROCEEDINGS
SE LECTURE NOTES IN COMPUTER SCIENCE
LA English
DT Article; Proceedings Paper
CT 7th International Conference on Software Reuse (ICSR-7)
CY APR 15-19, 2002
CL AUSTIN, TEXAS
SP BigLever Software Inc, Dept Informat PUC-Rio, Fraunhofer IESE, Gener Programming, Op40 Inc, Semant Designs Inc, Sodalia, Univ Alberta, Dept Elect & Comp Engn, Univ Newcastle Upon Tyne, CS Dept, Univ Texas, Comp Sci Dept
AB This tutorial provides practical insights and guidance on lightweight strategies and techniques for adopting a software product line approach to software reuse. It will benefit practitioners and managers with responsibility for establishing software product lines and will also benefit researchers interested in learning more about the practical issues of adopting software product lines.
C1 BigLever Software Inc, Austin, TX 78730 USA.
RP Krueger, CW (reprint author), BigLever Software Inc, 10500 Laurel Hill Cove, Austin, TX 78730 USA.
NR 0
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-43483-6
J9 LECT NOTES COMPUT SC
PY 2002
VL 2319
BP 349
EP 350
PG 2
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BW25Y
UT WOS:000181349700037
ER

PT J
AU Dong, JL
   Chen, YY
AF Dong, Jianli
   Chen, Yanyan
TI Research on an Industrialized PL-ISEE and Its Database Platform
   Architecture
SO INFORMATION-AN INTERNATIONAL INTERDISCIPLINARY JOURNAL
LA English
DT Article
DE Software product line; PL-ISEE (Product line based integrated software
   engineering environment); Software architecture; Software components
   bus; Core assets database
AB Borrowing the industrialized production mode and management system of modern manufacturing industry product line, a new industrialized PL-ISEE and its database platform architecture is proposed. This new architecture consists of three layers (interfaces, tools and data layers) and takes the product line core assets as the software components bus. On the bus is a software assembly line to achieve the assembling production of software products, and all the software components needed on the assembly line are provided by the bus; under the bus, it is a traditional ISEE to achieve the development of product line core asset component programs and documents. The middle part of the model, data layer, consists of the software components bus and core assets database platform to achieve the storage and managements of product line core assets data. To compare with traditional ISEE, this new PL-ISEE and its database platform architecture as well as its developing abilities are similar to the assembly lines of current manufacturing industries, and it will become an ideal production environment and pattern of software industry in the future.
C1 [Dong, Jianli; Chen, Yanyan] Huaihai Inst Technol, Sch Comp Engn, Lianyungang 222005, Peoples R China.
RP Dong, JL (reprint author), Huaihai Inst Technol, Sch Comp Engn, Lianyungang 222005, Peoples R China.
EM dongjl1019@sina.com
CR CHEN M, 1992, IEEE SOFTWARE, V9, P18, DOI 10.1109/52.120597
   Clements Paol, 2003, SET SERIES SOFTWARE
   Dong Jian-li, 2008, Computer Engineering and Design, V29
   GUO Jun, 2007, J CHINESE COMPUTER S, V28, P328
   Mei Hong, 2006, Journal of Software, V17, DOI 10.1360/jos171257
   Wang Zhijia, 2005, SOFTWARE COMPONENT T, P4
   Yang Fu-Qing, 2005, Journal of Software, V16, DOI 10.1360/jos160001e
   ZHANG Yousheng, 2006, SOFTWARE ARCHITECTUR
NR 8
TC 0
Z9 0
PU INT INFORMATION INST
PI TOKYO
PA FAC ENG, HOSEI UNIV, KOGANEI, TOKYO, 184-8584, JAPAN
SN 1343-4500
J9 INFORMATION-TOKYO
JI Information
PD NOV
PY 2012
VL 15
IS 11A
SI SI
BP 4621
EP 4626
PG 6
WC Engineering, Multidisciplinary
SC Engineering
GA 036XS
UT WOS:000311066200045
ER

PT B
AU Anido, L
   Caeiro, M
   Rodriguez, J
   Santos, JM
AF Anido, L
   Caeiro, M
   Rodriguez, J
   Santos, JM
GP IEEE COMPUTER SOCIETY
   IEEE COMPUTER SOCIETY
TI Architecting CORBA-based frameworks to support distributed and
   interoperable training systems in large enterprises
SO WET ICE 2002: ELEVENTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING
   TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS
LA English
DT Proceedings Paper
CT 11th IEEE International Workshop on Enabling Technologies -
   Infrastructure for Collaborative Enterprises (WET ICE 2002)
CY JUN 10-12, 2002
CL PITTSBURGH, PA
SP IEEE Comp Soc, IEEE Comp Soc, Tech Comm Data Engn, W Virginia Univ, Concurrent Engn Res Ctr, Linkoping Univ
HO CARNEGIE MELLON UNIV, INST COMPLEX ENGN SYST
AB Nowadays, Enterprise Software Systems are mainly distributed. Distribution promises better efficiency, scalability, and availability, specifically of large-scale systems. This is also true for the computer-based training systems used by Training Departments. This paper addresses interoperability and reusability issues that appear as a consequence of the heterogeneous nature of the resources used for training. We propose a CORBA-based framework to develop Distributed Object Computing systems to support enterprise training. This proposal is based on ongoing work by institutions like the US Department of Defense and the Aviation Industry in the learning technology standardization area. Our framework also identifies open software interfaces among distributed components and a systematic methodology to develop new systems from them. Therefore, architects are provided with a software product line to develop standards-driven interoperable distributed training systems.
C1 Univ Vigo, Vigo, Spain.
RP Anido, L (reprint author), Univ Vigo, Vigo, Spain.
CR Bass L., 1999, SOFTWARE ARCHITECTUR
   BRAY T, 2001, W3C
   JACOBSON I, 1999, UNIFIED MODELLING LA
   Jacobson I, 1999, UNIFIED SOFTWARE DEV
   *OMG, 2000, UML PROF CORB SPEC
   *OMG, 2000, TRAD OBJ SERV VERS 1
NR 6
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-1748-X
PY 2002
BP 170
EP 175
PG 6
WC Computer Science, Information Systems
SC Computer Science
GA BV34W
UT WOS:000178627700026
ER

PT J
AU Luo, Y
   Wu, CL
   Huang, L
   Ye, G
AF Luo Yi
   Wu Chanle
   Huang Lei
   Ye Gang
BE Zheng, F
TI A Component-based Software Development Method Combined with Enterprise
   Architecture
SO PROCEEDINGS OF THE 2013 INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER
   SCIENCE AND ELECTRONICS INFORMATION (ICACSEI 2013)
SE Advances in Intelligent Systems Research
LA English
DT Proceedings Paper
CT International Conference on Advanced Computer Science and Electronics
   Information (ICACSEI)
CY JUL 25-26, 2013
CL Beijing, PEOPLES R CHINA
DE Enterprise Architecture; Component-based Software Development; Software
   Product Line; Architecture Governance
AB It's very important to ensure the unity of software architecture and business goal in application software development. This paper presents a new software development method based on enterprise architecture, describes the process of building enterprise IT architecture and transformation enterprise IT architecture into specific software architecture. It also establishes a framework of lifecycle application development platform around with architecture, and practices this method in the software development department of a certain large enterprise. The practical results show that the overall defect rate of releases decreases significantly.
C1 [Luo Yi; Wu Chanle; Huang Lei] Wuhan Univ, Sch Comp, Wuhan 430072, Peoples R China.
RP Luo, Y (reprint author), Wuhan Univ, Sch Comp, Wuhan 430072, Peoples R China.
EM luoyi9999@hotmail.com
CR Clements P, 2004, FRAMEWORK SOFTWARE P
   Hong M., 2006, J SOFTWARE, V17, P1257
   Sen Zeng, 2008, APPL RES COMPUTERS, V25, P541
   The Open Group, 2009, TOG ENT ED VERS 9
   Wang Xiao-yan, 2009, ACTA ELECT SINICA, V37, P540
   Zachman J.A., 1987, IBM SYSTEM J, V26
NR 6
TC 0
Z9 0
PU ATLANTIS PRESS
PI PARIS
PA 29 AVENUE LAVMIERE, PARIS, 75019, FRANCE
SN 1951-6851
BN 978-90-78677-74-1
J9 ADV INTEL SYS RES
PY 2013
VL 41
BP 87
EP 91
PG 5
WC Computer Science, Artificial Intelligence; Computer Science, Information
   Systems
SC Computer Science
GA BID53
UT WOS:000327726600022
ER

PT S
AU Baker, N
   Brooks, P
   Kovacs, Z
   LeGoff, JM
   McClatchey, R
AF Baker, N
   Brooks, P
   Kovacs, Z
   LeGoff, JM
   McClatchey, R
BE Bhat, PC
   Kasemann, M
TI A component based approach to scientific workflow management
SO ADVANCED COMPUTING AND ANALYSIS TECHNIQUES IN PHYSICS RESEARCH
SE AIP CONFERENCE PROCEEDINGS
LA English
DT Proceedings Paper
CT 7th International Workshop on Advanced Computing and Analysis Techniques
   in Physics Research (ACAT 2000)
CY OCT 16-20, 2000
CL BATAVIA, IL
SP Fermilab, US DOE, Natl Sci Fdn, Cisco Syst
ID FRAMEWORKS
AB CRISTAL is a distributed scientific workflow system used in the manufacturing and production phases of HEP experiment construction at CERN. The CRISTAL project has studied the use of a description driven approach, using meta-modelling techniques, to manage the evolving needs of a large physics community. Interest from such diverse communities as bio-informatics and manufacturing has motivated the CRISTAL team to re-engineer the system to customize functionality according to end user requirements but maximize software reuse in the process. The next generation CRISTAL vision is to build a generic component architecture from which a complete software product line can be generated according to the particular needs of the target enterprise. This paper discusses the issues of adopting a component product line based approach and our experiences of software reuse.
C1 Univ W England, Ctr Complex Cooperat Syst, Bristol BS16 1QY, Avon, England.
RP Baker, N (reprint author), Univ W England, Ctr Complex Cooperat Syst, Bristol BS16 1QY, Avon, England.
CR BAKER N, 1997, EDOC 97 WORKSH P, P291
   BARRY A, 1999, OOPSLA 98 WORKSH APP
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice
   BAYER J, 2000, P 3 INT WORKSH SOFTW
   Buschmann F., 1996, PATTERN ORIENTED SOF
   D'Souza D.F., 1999, OBJECTS COMPONENTS F
   DEBAUD JM, 1999, P 21 INT C SOFTW ENG
   Fayad M, 1999, BUILDING APPL FRAMEW
   Fayad ME, 2000, ACM COMPUT SURV, V32, P1, DOI 10.1145/351936.351937
   Fingar P, 2000, COMMUN ACM, V43, P61, DOI 10.1145/352183.352204
   KEEPENCE B, 1999, IEEE SOFTWARE    JUL, P102
   Kobryn C, 2000, COMMUN ACM, V43, P31, DOI 10.1145/352183.352199
   KOVACS Z, 1999, EDOC 99 C P
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   *UML REV TASK FORC, 1999, OMG UML V 1 3
NR 15
TC 0
Z9 0
PU AMER INST PHYSICS
PI MELVILLE
PA 2 HUNTINGTON QUADRANGLE, STE 1NO1, MELVILLE, NY 11747-4501 USA
SN 0094-243X
BN 0-7354-0023-7
J9 AIP CONF PROC
PY 2001
VL 583
BP 155
EP 160
PG 6
WC Computer Science, Artificial Intelligence; Computer Science,
   Interdisciplinary Applications; Computer Science, Software Engineering
SC Computer Science
GA BT36R
UT WOS:000172785500037
ER

PT J
AU Schultis, KB
   Elsner, C
   Lohmann, D
AF Schultis, Klaus-Benedikt
   Elsner, Christoph
   Lohmann, Daniel
GP IEEE
TI Moving Towards Industrial Software Ecosystems: Are Our Software
   Architectures Fit for the Future?
SO 2013 4TH INTERNATIONAL WORKSHOP ON PRODUCT LINE APPROACHES IN SOFTWARE
   ENGINEERING (PLEASE)
LA English
DT Proceedings Paper
CT 4th International Workshop on Product LinE Approaches in Software
   Engineering (PLEASE)
CY MAY 20, 2013
CL San Francisco, CA
AB The development of large-scale software product-lines within large enterprises commonly involves various internal business units. Although within the same enterprise, each business unit has individual motivations and participation interests. For coordinating development, the emerging discipline of software ecosystems intents to explicitly discover and analyze the different players' interests, and manage them, often by means of a suitable software architecture. Already within a single enterprise, this discipline can be of high value. Instead of detailed managerial orders to coordinate internal interactions, an analysis of the players, their interests, and a suitable software architecture may slacken organizational structures and simplify processes.
   We have started to analyze the ecosystems of several Siemens internal product-lines in order to determine the different players and their interests, and to derive suitable software architectural requirements from this setting. This will enable us to compare these requirements to the actual architecture, for identifying reusable pain points and best practices of the existing system. However, there is no systematic (A) approach to model and analyze the collaboration among the participants from a technical perspective, as well as (B) to derive reusable architectural design-patterns and anti-patterns from such software ecosystems. By illustrating these problems using an existing software product-line that moves towards a software ecosystem, we are looking for answers to the two questions above to evaluate whether our product-lines are fit for a future as internal software ecosystems.
C1 [Schultis, Klaus-Benedikt; Elsner, Christoph] Siemens Corp Technol, Erlangen, Germany.
RP Schultis, KB (reprint author), Siemens Corp Technol, Erlangen, Germany.
EM klaus-benedikt.schultis.ext@siemens.com; christoph.elsner@siemens.com;
   lohmann@cs.fau.de
CR Anvaari M., 2010, ECSA 10, P85
   Bosch J., 2010, ECSA 10, P93
   Bosch J., 2009, SPLC 09, P111
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Boucharas V, 2009, IWOCE 2009: INTERNATIONAL WORKSHOP ON OPEN COMPONENT ECOSYSTEM, P41
   Campbell P.R.J., 2010, ECSA 10, P81
   Cataldo M., 2010, ECSA 10, P65
   Hunink I., 2010, ECSA 10, P111
   Iyer B, 2006, CALIF MANAGE REV, V48, P28
   Janner T, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, PROCEEDINGS, VOL 2, P145, DOI 10.1109/SCC.2008.34
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Lungu M, 2010, SCI COMPUT PROGRAM, V75, P264, DOI 10.1016/j.scico.2009.09.004
   McGregor J. D., 2010, ECSA 10, P73
   Pereira R., 2011, P WORKSH SOFTW EC 20, P40
   van den Berk I., 2010, ECSA 10, P127
NR 15
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
BN 978-1-4673-6449-2
PY 2013
BP 9
EP 12
PG 4
WC Computer Science, Software Engineering
SC Computer Science
GA BA2IW
UT WOS:000333448300003
ER

PT J
AU Radosevic, D
   Magdalenic, O
   Orehovacki, T
AF Radosevic, D.
   Magdalenic, O.
   Orehovacki, T.
BE Biljanovic, P
   Butkovic, Z
   Skala, K
   Golubic, S
   CicinSain, M
   Sruk, V
   Ribaric, S
   Hutinski, Z
   Baranovic, M
   Tijan, E
   Mauher, M
   Bombek, I
TI Building Process of SCT Generators
SO 2013 36TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION
   TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO)
LA English
DT Proceedings Paper
CT 36th International Convention on Information and Communication
   Technology, Electronics and Microelectronics (MIPRO)
CY MAY 20-24, 2013
CL Opatija, CROATIA
SP MIPRO Croatian Soc, IEEE Reg 8, Croatian Elect Co, Ericsson Nikola Tesla, T Croatian Telecom, InfoDom, Transmitters & Commun Co, Nokia Siemens Networks, VIPNet, Microsoft Croatia, Croatian Post & Elect Commun Agcy, Storm Comp, Univ Zagreb, Univ Rijeka, IEEE Croatia Sect, Rudjer Boskov Inst, Univ Rijeka Fac Engn, Univ Rijeka Fac Maritime Studies, Univ Zagreb Fac Elect Engn & Comp, Fac Org & Informat Varazdin, Minist Sci, Educ & Sports Republ Croatia, Minist Maritime Affairs, Transport & Infrastructure Republ Croatia, Croatian Chamber Econ, Primorsko Goranska Cty, Croatian Post & Elect Commun Agcy, IEEE Croatia Sect Comp Chapter, IEEE Croatia Sect Elect Devices Solid State Circuits Soc Joint Chapter, IEEE Croatia Sect Educ Chapter, IEEE Croatia Sect Commun Chapter, Univ Rijeka, Fac Econ, Univ Zagreb, Fac Org & Informat, Koncar Elect Ind, Kermas Energija, Rezultanta, River Publishers, Croatian Energy Market Operator, King ICT, Supra Net, Altpro, Croz, Mjerne Tehnologije, Origo, IN2, Adnet, CS Comp Syst, ib-proCADD, Selmet, Vidi TO, Nomen, Systec Automatizacija, IEEE
ID SOFTWARE PRODUCT LINES
AB This paper presents the building process of generators based on the SCT dynamic frames model. The SCT generator is defined by its Specification (S), Configuration (C) and Templates (T). These elements are represented graphically by Specification diagram and Configuration diagram. The building process starts by initial steps and continues by a spiral application development, based on Boehm's spiral model of software development. To evaluate the proposed building steps, an example of building SCT generator was given. The example uses the software tool developed with a purpose to implement the building steps of SCT based generators.
C1 [Radosevic, D.; Magdalenic, O.; Orehovacki, T.] Univ Zagreb, Fac Org & Informat, Varazhdin, Croatia.
RP Radosevic, D (reprint author), Univ Zagreb, Fac Org & Informat, Varazhdin, Croatia.
EM danijel.radosevic@foi.hr; ivan.magdalenic@foi.hr;
   tihomir.orehovacki@foi.hr
RI Radosevic, Danijel/C-8742-2009
OI Radosevic, Danijel/0000-0001-6022-2973
CR [Anonymous], 2013, ECLIPSE MODELING PRO
   Arnoldus J., 2007, P 6 INT C GEN PROGR, P25, DOI 10.1145/1289971.1289977
   Bassett P.G., 1997, FRAMING SOFTWARE REU
   Batory D., 1996, Proceedings Fourth International Conference on Software Reuse (Cat. No.96TB100015), DOI 10.1109/ICSR.1996.496115
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, DOI 10.1145/136586.136587
   BOEHM BW, 1988, COMPUTER, V21, P61, DOI 10.1109/2.59
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Friese P., 2007, VALIDATING ECORE MOD
   Groher I., 2007, INTEGRATING MODEL DR
   Heidenreich F., 2009, P 8 INT C GEN PROGR, P99, DOI 10.1145/1621607.1621624
   Heradio R, 2012, EXPERT SYST APPL, V39, P12885, DOI 10.1016/j.eswa.2012.05.004
   Magdalenic I., 2013, EXPERT SYSTEMS APPL
   Magdalenic I, 2009, INFORMATICA-LITHUAN, V20, P397
   Radosevic D., 2011, P 22 CENTR EUR C INF, P181
   Radosevic D., 2010, P 21 CENTR EUR C INF, P87
   Radosevic D., 2011, J INFORM ORG SCI, V35, P73
   Radosevic D., 2008, J INFORM ORG SCI, V32, P137
   Radosevic D., 2007, P 30 MIPRO INT CONV, P167
   Regensburger M., 2007, P 13 IEEE INT S PAC, P89
   Singh V, 2012, DESIGN STUD, V33, P185, DOI 10.1016/j.destud.2011.06.001
   Wong T. W., 2001, P ACM S SOFTW REUS S, P164, DOI 10.1145/375212.375285
   Zhang HY, 2004, SCI COMPUT PROGRAM, V53, P381, DOI 10.1016/j.scico.2003.04.007
NR 22
TC 0
Z9 0
PU CROATIAN SOC INF & COMMUN TECHNOL, ELECTRONICS & MICROELECTRONICS-MIPRO
PI RIJEKA
PA KRUZNA 8-II, PO BOX 303, RIJEKA, HR-51001, CROATIA
BN 978-953-233-076-2
PY 2013
BP 1037
EP 1042
PG 6
WC Computer Science, Information Systems; Engineering, Electrical &
   Electronic; Telecommunications
SC Computer Science; Engineering; Telecommunications
GA BA1YN
UT WOS:000333165800194
ER

PT B
AU Krueger, CW
AF Krueger, CW
GP IEEE COMPUTER SOCIETY
   IEEE COMPUTER SOCIETY
TI Software product line reuse in practice
SO 3RD IEEE SYMPOSIUM ON APPLICATION SPECIFIC SYSTEMS AND SOFTWARE
   ENGINEERING TECHNOLOGY, PROCEEDINGS
LA English
DT Proceedings Paper
CT 3rd IEEE Symposium on Application-Specific Systems and Software
   Engineering Technology
CY MAR 24-25, 2000
CL RICHARDSON, TX
SP IEEE, Comp Soc, Univ Texas, Ctr Applicat Specific Syst & Software Engn
C1 BigLever Software Inc, Austin, TX 78730 USA.
RP Krueger, CW (reprint author), BigLever Software Inc, 10500 Laurel Hill Cove, Austin, TX 78730 USA.
CR BASS L, 1998, SOFTWARE ARCH PRACTI
   David M, 1999, SOFTWARE PRODUCT LIN
   KREUGER CW, 1992, ACM COMPUT SURV, V24, P131
   KRUEGER C, 1997, CMUCS97158
   PRIETODIAZ R, 1996, DOMAIN ANAL SOFTWARE
   *SOFTW ENG I, PROD LIN PRACT PLP I
   1998, 2 INT WORKSH DEV EV
NR 7
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
BN 0-7695-0559-7
PY 2000
BP 117
EP 118
PG 2
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA BR13Y
UT WOS:000165731400017
ER

PT S
AU Slabospitskaya, O
   Kolesnyk, A
AF Slabospitskaya, Olga
   Kolesnyk, Andrii
BE Mayr, HC
   Kop, C
   Liddle, S
   Ginige, A
TI The Model for Enhanced Variability Management Process in Software
   Product Line
SO INFORMATION SYSTEMS: METHODS, MODELS, AND APPLICATIONS, UNISCON 2012
SE Lecture Notes in Business Information Processing
LA English
DT Proceedings Paper
CT 4th International United Information Systems Conference (UNISCON)
CY JUN 01-03, 2012
CL Yalta, UKRAINE
SP BOC Grp, Alpen Adria Univ, Dept Appl Informat
HO Crimean State Humanitarian Univ
DE Software Product Line; Variability Model; Variability Management;
   Reusable Asset; Configuration
AB The paper presents a novel model for the process of managing software Variability - the ability of a software system or artefact to be extended, changed, customized or configured for use in a specific context - in Software Product Line (PL). The process pretends to be enhanced (i.e. consistent, scalable, traceable, visible and rational as for the decisions being made on Variability) to mitigate some its limitations. To this end the Model proposed composes: Management Functions uniformly combining all the actions on variability into single cycle like Doeming Plan-Do-Check-Act one; due quality Demands for the Functions; their Environment driven with another novel Model of Variability in PL. It consistently represents variability both in PL structure and artefacts across all PL development stages and stakeholders' viewpoints along with the dedicated assessment submodel purposing at the decisions' rationality. Presented sample Case Study with trial Workflow-based Configurator tool just developed in the Institute of Software Systems of NAS promises availability of the process constructed for efficient automated support.
C1 [Slabospitskaya, Olga; Kolesnyk, Andrii] Inst Software Syst NAS, Software Engn Dept, UA-03143 Kiev, Ukraine.
RP Slabospitskaya, O (reprint author), Inst Software Syst NAS, Software Engn Dept, Akad Glushkova St 40, UA-03143 Kiev, Ukraine.
EM olga.slabospitskaya@springer.com; andrii.kolesnyk@springer.com
CR Berg K., 2005, P S AFR I COMP SCI I, P111
   Deelstra S, 2009, INFORM SOFTWARE TECH, V51, P195, DOI 10.1016/j.infsof.2008.04.002
   Kolesnik A, 2011, PROBLEMS PROGRAMMING, V4, P63
   Lavrischeva E, 2012, B NAS UKRAINE, V3, P17
   Lavrischeva E. M., 2009, Cybernetics and Systems Analysis, V45, DOI 10.1007/s10559-009-9131-3
   Lavrischeva E., 2009, PROBLEMS PROGRAMMING, V1, P3
   Lavrischeva E., 2011, ELECT MONOGRAPH, V67
   Lavrischeva K., 2011, B U KIEV PHYS MATH, V1, P151
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   van der Linden F., 2007, SOFTWARE PRODUCT LIN
   Walton M., 1986, DEMING MANAGEMENT ME
NR 11
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 1865-1348
BN 978-3-642-38370-0; 978-3-642-38369-4
J9 LECT NOTES BUS INF P
PY 2013
VL 137
BP 162
EP 171
PG 10
WC Computer Science, Information Systems; Computer Science, Theory &
   Methods
SC Computer Science
GA BB7BP
UT WOS:000345322600015
ER

PT J
AU Kornyshova, E
   Ralyte, J
   Deneckere, R
AF Kornyshova, Elena
   Ralyte, Jolita
   Deneckere, Rebecca
BE Wieringa, R
   Nurcan, S
   Rolland, C
   Cavarero, JL
TI Constructing Method Families Based on the Variability Analysis
SO 2013 IEEE SEVENTH INTERNATIONAL CONFERENCE ON RESEARCH CHALLENGES IN
   INFORMATION SCIENCE (RCIS)
SE International Conference on Research Challenges in Information Science
LA English
DT Proceedings Paper
CT 7th IEEE International Conference on Research Challenges in Information
   Science (RCIS)
CY MAY 29-31, 2013
CL Paris, FRANCE
SP IEEE, Univ Paris 1, Ctr Rech & Informatique, IEEE French Sect, Cyrius Consulting, IEEE French CS Joint Chapter
DE Method family; variability; method family construction
AB Situational Method Engineering (SME) is constantly looking for new ways to facilitate situation-specific method construction in practice. We have developed the notion of method family to attain this goal. Our inspiration comes from Software Product Line Engineering (SPLE), which is developing solutions that can be easily adapted to a specific context and by reusing existing knowledge. In this paper, we introduce the process guiding the construction of method families based on the analysis of the methods variability.
C1 [Kornyshova, Elena; Deneckere, Rebecca] Univ Paris 01, Ctr Rech Informat, F-75013 Paris, France.
RP Kornyshova, E (reprint author), Univ Paris 01, Ctr Rech Informat, 90 Rue Tolbiac, F-75013 Paris, France.
EM elena.kornyshova@univ-paris1.fr; jolita.ralyte@unige.ch;
   rebecca.deneckere@univ-paris1.fr
CR Brinkkemper S, 1998, LECT NOTES COMPUT SC, V1413, P381
   Bucher T, 2007, INT FED INFO PROC, V244, P33
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Deneckere R., 2008, EMMSAD, V337, P80
   Guzelian G., 2007, IKE 07 LAS VEGAS US
   Karlsson F, 2004, INFORM SOFTWARE TECH, V46, P619, DOI 10.1016/j.infsof.2003.12.004
   Kornyshova E., 2011, THESIS U PARIS 1 PAN
   Kornyshova E, 2011, LECT NOTES BUS INF P, V81, P413
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Ralyte J., 2001, LNCS, V2068, P267
   Ralyte J, 2003, LECT NOTES COMPUT SC, V2681, P95
   Rossi M., 2004, J ASSOC INF SYST, V5, P356
NR 12
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
SN 2151-1349
BN 978-1-4673-2912-5
J9 INT CONF RES CHAL
PY 2013
PG 2
WC Computer Science, Interdisciplinary Applications
SC Computer Science
GA BB7NH
UT WOS:000345780300060
ER

PT B
AU Wappler, T
AF Wappler, T
BE Donohoe, P
TI Remember the basics - Key success factors for launching and
   institutionalizing a software product line
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE software product line; software reuse; launching; institutionalizing;
   transformation; transition; organizational change
AB The concept of a software product line developed by the Software Engineering Institute is a comprehensive model for an organization building applications based on common architectures and other core assets. In a transition project for launching and institutionalizing a software product line we need to address virtually all areas of a software development organization. Such a transition project will be very difficult and there is usually very little experience in the organization in running such a project successfully. This paper discusses four factors that are essential for the transition project's success. These factors are: a clearly defined goal, strong project management, strong management support, and pilot projects. Although these factors seem to be very basic, experience shows that they are often neglected. In this paper we will show why they are essential for a successful transition project.
C1 IBM Unternehmensberatung GmbH, IBM Consulting Grp, D-71083 Herrenberg, Germany.
RP Wappler, T (reprint author), IBM Unternehmensberatung GmbH, IBM Consulting Grp, Fichtenberg 1, D-71083 Herrenberg, Germany.
CR CLEMENTS P, 1999, FRAMEWORK SOFTWARE P
   GOLDBERG A, 1995, SUCCEEDING OBJECTS
   Goleman D., 1995, EMOTIONAL INTELLIGEN
   Grady R.B., 1997, SUCCESSFUL SOFTWARE
   Jacobson I., 1998, UNIFIED SOFTWARE DEV
   Jacobson Ivar, 1997, SOFTWARE REUSE
   MCFEELEY R, 1996, CMUSEL96HB001
   PAULK M, 1996, P 6 INT C SOFTW QUAL
   Paulk Mark C., 1995, CAPABILITY MATURITY
NR 9
TC 0
Z9 0
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 73
EP 84
PG 12
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500004
ER

PT J
AU Bosch, J
   Lee, J
AF Bosch, Jan
   Lee, Jaejoon
TI Software product lines (SPLC 2010) Preface
SO SCIENCE OF COMPUTER PROGRAMMING
LA English
DT Editorial Material
C1 [Bosch, Jan] Chalmers, SE-41296 Gothenburg, Sweden.
   [Lee, Jaejoon] Univ Lancaster, Sch Comp & Commun, Lancaster, England.
RP Bosch, J (reprint author), Chalmers, SE-41296 Gothenburg, Sweden.
EM jan@janbosch.com; j.lee3@lancaster.ac.uk
NR 0
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0167-6423
EI 1872-7964
J9 SCI COMPUT PROGRAM
JI Sci. Comput. Program.
PD DEC 1
PY 2013
VL 78
IS 12
BP 2293
EP 2294
DI 10.1016/j.scico.2013.01.012
PG 2
WC Computer Science, Software Engineering
SC Computer Science
GA 234SL
UT WOS:000325664500001
ER

PT B
AU Stuart, D
   Sull, W
   Pruitt, S
   Cobb, D
   Waskiewicz, F
   Cook, TW
AF Stuart, D
   Sull, W
   Pruitt, S
   Cobb, D
   Waskiewicz, F
   Cook, TW
BE Donohoe, P
TI The SSEP toolset for product line development - An XML-based
   architecture-centric approach
SO SOFTWARE PRODUCT LINES: EXPERIENCE AND RESEARCH DIRECTIONS
SE KLUWER INTERNATIONAL SERIES IN ENGINEERING AND COMPUTER SCIENCE
LA English
DT Proceedings Paper
CT 1st Software Product Lines Conference (SPLC1)
CY AUG 28-31, 2000
CL DENVER, CO
DE software product lines; tools; XML; linking; software architecture;
   architecture description languages
AB In this paper, we describe the SSEP (software and systems engineering productivity) toolset that was created to provide the tool support necessary to improve the viability of product line development. Navigation between the various artifacts that arise during architecture-based product line development is crucial to the success of the development effort. The SSEP toolset was developed with such navigation, provided by using XML as a representation mechanism, as a key feature. The goals of product line development are achieved through planned reuse of product line artifacts in multiple applications in the product line. Such strategic reuse depends on the application engineer's being able to develop the application within the context of the product line; this requires access to artifacts in their context. Such in-context access can only be provided by links capturing the dependence relationships between the artifacts. The SSEP toolset provides such access.
C1 Microelect & Comp Technol Corp, Austin, TX 78759 USA.
RP Stuart, D (reprint author), Microelect & Comp Technol Corp, Austin, TX 78759 USA.
CR Anton AI, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P136, DOI 10.1109/ICRE.1996.491438
   BAYER J, 1999, 5 ACM SIGSOFT S SOFT, P122
   BINNS P, 1996, INT J SOFTW ENG KNOW, V6
   CHRISTIE A, 1996, CMUSEI96TR013
   CLEMENTS P, 1998, FRAMEWORK SOFTWARE P
   CLEMENTS P, 1999, FRAMEWORK SOFTWARE P
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   GARLAN D, 1997, P CASCON 97      NOV
   GARSHOL LM, 1998, INTRO XML
   HOROWITZ E, 1996, WINWIN REFERENCE MAN
   JARKE M, 1999, REQUIREMENT ENG J
   LUCKHAM DC, 1996, DIMACS PART ORD METH
   MEDVIDOVIC N, 1996, UCIICS9702 U CAL DEP
   PARNAS DL, 1976, IEEE T SOFTWARE ENG
   PAULK M. C., 1993, CMUSEI93TR24
   Perry D. E., 1989, SOFTWARE ARCHITECTUR
   POTTS C, 1994, IEEE SOFTWARE, V11, P21, DOI 10.1109/52.268952
   PRUITT S, 1999, 1 WORK IFIP C SOFTW
   *RAT SOFTW CORP, 1995, UN METH
   SHAW M, 1995, ABSTRACTIONS SOFTWAR
   SIMONS M, 1996, STARSVCA02500100 LOC
   TRACZ W, 1995, NAECON95 DAYT OH MAY, P646
   TRACZ W, 1995, DSSA PEDAGOGICAL EXA
   WEIDENHAUPT K, 1998, IEEE SOFTWARE    MAR
   WOLF AL, 1997, ACM SIGSOFT SOFTWARE, P42
   *WORLD WID WEB CON, 1998, DOC OBJ MOD DOM LEV
NR 26
TC 0
Z9 0
PU KLUWER ACADEMIC PUBLISHERS
PI NORWELL
PA 101 PHILIP DRIVE, ASSINIPPI PARK, NORWELL, MA 02061 USA
BN 0-7923-7940-3
J9 KLUWER INT SER ENG C
PY 2000
VL 576
BP 413
EP 435
PG 23
WC Computer Science, Software Engineering
SC Computer Science
GA BR49B
UT WOS:000166633500022
ER

PT J
AU Andrade, R
   Rebelo, H
   Ribeiro, M
   Borba, P
AF Andrade, Rodrigo
   Rebelo, Henrique
   Ribeiro, Marcio
   Borba, Paulo
TI Flexible Feature Binding with AspectJ-based Idioms
SO JOURNAL OF UNIVERSAL COMPUTER SCIENCE
LA English
DT Article
DE Software Product Lines; Aspect-Oriented Programming; Idioms; Flexible
   Feature Binding
ID CLONE DETECTION; SYSTEMS; CODE
AB In Software Product Lines (SPL), we can bind reusable features to compose a product at different times, which in general are static or dynamic. The former allows customizability without any overhead at runtime. On the other hand, the latter allows feature activation or deactivation while running the application with the cost of performance and memory consumption. To implement features, we might use aspect-oriented programming (AOP), in which aspects enable a clear separation between invariable code and variable code. In this context, recent work provides AspectJ-based idioms to implement flexible feature binding. However, we identified some design deficiencies. Thus, to solve the issues of these idioms, we incrementally create three AspectJ-based idioms. We apply these idioms to provide flexible binding for 16 features from five different product lines. Moreover, to evaluate our idioms, we quantitatively analyze them with respect to code cloning, scattering, tangling, and size by means of software metrics. Besides that, we qualitatively discuss our idioms in terms of code reusability, changeability, instrumentation overhead, behavior, and feature interaction. In conclusion, we show evidences that our idioms address the issues of those existing ones.
C1 [Andrade, Rodrigo; Rebelo, Henrique; Borba, Paulo] Univ Fed Pernambuco, Recife, PE, Brazil.
   [Ribeiro, Marcio] Univ Fed Alagoas, Maceio, Brazil.
RP Andrade, R (reprint author), Univ Fed Pernambuco, Recife, PE, Brazil.
EM rcaa2@cin.ufpe.br; hemr@cin.ufpe.br; marcio@ic.ufal.br; phmb@cin.ufpe.br
RI Borba, Paulo/
OI Borba, Paulo/0000-0002-0381-2843
FU CNPq; FACEPE; CAPES; Brazilian Software Engineering National Institute
   of Science and Technology (INES)
FX We would like to thank colleagues of the Software Productivity Group
   (SPG) for helping to improve this work. Specially Gustavo Soares who
   helped us with SafeRefactor. Besides that, we would like to acknowledge
   financial support from CNPq, FACEPE, CAPES, and the Brazilian Software
   Engineering National Institute of Science and Technology (INES).
CR Andrade R, 2011, EUR CON SFTWR MTNCE, P231, DOI 10.1109/CSMR.2011.29
   Andrade R, 2013, P BRAZ SYMP SOFTW, P59, DOI 10.1109/SBCARS.2013.17
   Andrade R., 2013, ONLINE APPENDIX
   Apel S, 2005, LECT NOTES COMPUT SC, V3676, P125
   Aracic I, 2006, LECT NOTES COMPUT SC, V3880, P135
   Avgustinov P., 2005, P 4 INT C ASP OR SOF, P87, DOI DOI 10.1145/1052898.1052906
   Basili V., 1994, ENCY SOFTWARE ENG, P528
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Chakravarthy V., 2008, P INT C ASP OR SOFTW, P108, DOI 10.1145/1353482.1353496
   Dinkelaker T., 2010, P WORKSH COMP VAR
   Dolstra E., 2003, UUCS2003052
   Eaddy M., 2007, P INT WORKSH ASS CON, P2
   Eaddy M., 2008, THESIS COLUMBIA U NE
   Hilsdale Erik, 2004, P 3 INT C ASP OR SOF, P26, DOI DOI 10.1145/976270.976276
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kang K., 1990, CMUSEI90TR21
   Kapser CJ, 2006, J SOFTW MAINT EVOL-R, V18, P61, DOI 10.1002/smr.327
   Kastner C., 2007, P INT SOFTW PROD LIN, P223
   Kastner C., 2013, SUDOKU
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kiczales G., 1997, P EUR C OBJ OR PROGR, P220, DOI DOI 10.1007/BF60053381
   Laddad R., 2009, ASPECTJ ACTION ENTER, V2nd
   Lai A., 1999, WORKSH MULT SEP
   Lee J., 2006, P 10 INT SOFTW PROD, P131
   Liu J, 2005, Feature Interactions in Telecommunications and Software Systems VIII, P178
   Marot A., 2010, P INT C ASP OR SOFTW, P157, DOI 10.1145/1739230.1739249
   Muller J., 2013, FREEMIND
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Ribeiro M., 2009, LAT AM WORKSH ASP OR, P1
   Rosenmuller M, 2011, AUTOMAT SOFTW ENG, V18, P163, DOI 10.1007/s10515-011-0080-5
   ROSENMULLER M, 2011, P INT C GEN PROGR CO, P3
   School D. R., 2005, P SPEC INT TRACKS PO, P252
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Trinidad P., 2007, P INT SOFTW PROD LIN, P51
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 38
TC 0
Z9 0
PU GRAZ UNIV TECHNOLGOY, INST INFORMATION SYSTEMS COMPUTER MEDIA-IICM
PI GRAZ
PA INFFELDGASSE 16C, GRAZ, A-8010, AUSTRIA
SN 0948-695X
J9 J UNIVERS COMPUT SCI
JI J. Univers. Comput. Sci.
PY 2014
VL 20
IS 5
BP 692
EP 719
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA AL8LT
UT WOS:000339391100006
ER

PT J
AU Kakola, T
   Leitner, A
AF Kakola, Timo
   Leitner, Andrea
BE Sprague, RH
TI Introduction to Software Product Lines: Engineering, Service, and
   Management Minitrack
SO 2014 47TH HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS)
SE Proceedings of the Annual Hawaii International Conference on System
   Sciences
LA English
DT Proceedings Paper
CT 47th Annual Hawaii International Conference on System Sciences
CY JAN 06-09, 2014
CL Waikoloa, HI
SP Univ Hawaii, Shidler Coll Business, IEEE Comp Soc
C1 [Kakola, Timo] Univ Jyvaskyla, SF-40351 Jyvaskyla, Finland.
RP Kakola, T (reprint author), Univ Jyvaskyla, SF-40351 Jyvaskyla, Finland.
EM timokk@jyu.fi; andrea.leitner@tugraz.at
NR 0
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
SN 1060-3425
BN 978-1-4799-2504-9
J9 P ANN HICSS
PY 2014
BP 5048
EP 5048
DI 10.1109/HICSS.2014.619
PG 1
WC Computer Science, Information Systems; Computer Science, Theory &
   Methods
SC Computer Science
GA BB5FW
UT WOS:000343806605023
ER

PT J
AU Feng, GQ
   Chen, HF
   Liu, MY
AF Feng, Guoqi
   Chen, Huifeng
   Liu, Meiyu
BE Ning, B
   Chen, J
   Cai, X
   Zhang, Z
   Zhang, R
   Zhang, J
TI An ontology service model for flexible service customization
SO 2014 11TH INTERNATIONAL CONFERENCE ON SERVICE SYSTEMS AND SERVICE
   MANAGEMENT (ICSSSM)
SE International Conference on Service Systems and Service Management
LA English
DT Proceedings Paper
CT 11th International Conference on Service Systems and Service Management
   (ICSSSM)
CY JUN 25-27, 2014
CL Beijing, PEOPLES R CHINA
SP Tsinghua Univ
HO Beijing Jiaotong Univ, Int Ctr Informat Res
DE Service customization; service intention; ontology; feature model
ID MASS CUSTOMIZATION; SYSTEM
AB With daily changing customer requirements and with personalized requirements play more important role in current services, it calls for in-depth and broader explorations about service customization. Nowadays, more and more service companies shift to mass customization mode to decrease service delivery costs, improve service capability and efficiency, and meet the growing variety of customer needs in a customer-oriented market. This paper proposes a four layer service customization framework, gives an intention centered service ontology model, and the service intention model is further explored. And to better configuring service requirements based on goal decomposition, service process template variability type is demonstrated.
C1 [Feng, Guoqi; Chen, Huifeng; Liu, Meiyu] Northeastern Univ, Sch Business Adm, Shenyang, Peoples R China.
RP Feng, GQ (reprint author), Northeastern Univ, Sch Business Adm, Shenyang, Peoples R China.
CR Aas TH, 2013, MANAG SERV QUAL, V23, P513, DOI 10.1108/MSQ-10-2012-0138
   Chen J, 2010, AFR J BUS MANAGE, V4, P842
   Dong M, 2011, EXPERT SYST APPL, V38, P11770, DOI 10.1016/j.eswa.2011.03.064
   El Kharbili M., 2008, P 1 INT WORKSH GOV R, V339, P1
   FENG Guoqi, 2013, AISS ADV INFORM SCI, V5, P238
   Jin LY, 2012, TOURISM MANAGE, V33, P266, DOI 10.1016/j.tourman.2011.03.005
   Liang QH, 2011, IEEE T SYST MAN CY A, V41, P717, DOI 10.1109/TSMCA.2011.2132710
   Nguyen T., 2010, P 2010 IEEE INT C WE, P393
   Papathanassiou EA, 2004, INT J INFORM MANAGE, V24, P387, DOI 10.1016/j.ijinfomgt.2004.06.003
   Pine J., 1993, MASS CUSTOMIZATION N
   Rolland C, 2010, IEEE T SERV COMPUT, V3, P292, DOI 10.1109/TSC.2010.26
   Schmidt R, 2007, P WORKSH SEM BUS PRO, P28
   Schmidt R., 2010, P BUS PROC MOD BPMDS, P159
   Tseng M. M., 2010, HDB RES MASS CUSTOMI
NR 14
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
SN 2161-1890
BN 978-1-4799-3134-7
J9 I C SERV SYST SERV M
PY 2014
PG 4
WC Computer Science, Information Systems; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA BB9AC
UT WOS:000347907600143
ER

PT S
AU Farahani, FF
   Ramsin, R
AF Farahani, Farima Farmahini
   Ramsin, Raman
BE Fujita, H
   Selamat, A
   Haron, H
TI Methodologies for Agile Product Line Engineering: A Survey and
   Evaluation
SO NEW TRENDS IN SOFTWARE METHODOLOGIES, TOOLS AND TECHNIQUES
SE Frontiers in Artificial Intelligence and Applications
LA English
DT Proceedings Paper
CT 13th International Conference on Intelligent Software Methodologies,
   Tools, and Techniques (SoMeT)
CY SEP 22-24, 2014
CL Langkawi, MALAYSIA
DE Software development methodology; product line engineering; agile
   software development; criteria-based evaluation
AB Agile Product Line Engineering (APLE) is a relatively new approach which has emerged as the result of combining two successful approaches: Software Product Line Engineering and Agile Software Development. The goal of this combined approach is to cover the weaknesses of each of the two approaches while maximizing the advantages of both. Several methodologies exist which provide a practical process for applying APLE. In this paper, a select set of these methodologies are evaluated using a criteria-based approach, the results of which highlight each methodology's strengths and weaknesses. The evaluation framework and the results can be helpful in selecting, comparing, and modifying APLE methodologies; they can also be used for developing bespoke APLE methodologies, tailored to fit the specific needs of organizations and projects.
C1 [Farahani, Farima Farmahini; Ramsin, Raman] Sharif Univ Technol, Dept Comp Engn, Tehran, Iran.
RP Farahani, FF (reprint author), Sharif Univ Technol, Dept Comp Engn, Azadi Ave, Tehran, Iran.
EM farimafarahani@ce.sharif.edu
CR ASADI M, 2008, P 4 EUR C MOD DRIV A, V5095, P419
   Balbino M., 2011, P INT C SOFTW ENG KN, P717
   Carbon R., 2006, P 1 INT WORKSH AG PR, P1
   da Silva I. F., 2012, P INT SOFTW PROD LIN, P225
   de Souza D. S., 2013, P INT C SOFTW ENG KN, P220
   Diaz Fernandez J., 2011, P JORN ING SOFTW BAS
   Diaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Ghanam Y, 2010, Proceedings of the 2010 Agile Conference (AGILE 2010), DOI 10.1109/AGILE.2010.6
   GHANAM Y, 2009, P AG C, P41
   Ghanam Y., 2008, P INT SOFTW PROD LIN, P377
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   Hesari S., 2010, P IEEE COMPSAC, P208
   KARAM GM, 1993, COMPUTER, V26, P34, DOI 10.1109/2.191987
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Noor MA, 2008, J SYST SOFTWARE, V81, P868, DOI 10.1016/j.jss.2007.10.028
   O'Leary P, 2012, J SOFTW-EVOL PROC, V24, P561, DOI 10.1002/smr.498
   Qumer A., 2006, P EUR MED C INF SYST, P1
   Ramsin R., 2008, ACM COMPUT SURV, V40
   Ramsin R, 2010, IET SOFTW, V4, P91, DOI 10.1049/iet-sen.2009.0032
   Taromirad Masoumeh, 2008, Proceedings of the 2008 32nd Annual IEEE Software Engineering Workshop. SEW 2008, DOI 10.1109/SEW.2008.19
   Wang X., 2005, THESIS U YORK UK
NR 21
TC 0
Z9 0
PU IOS PRESS
PI AMSTERDAM
PA NIEUWE HEMWEG 6B, 1013 BG AMSTERDAM, NETHERLANDS
SN 0922-6389
BN 978-1-61499-434-3; 978-1-61499-433-6
J9 FRONT ARTIF INTEL AP
PY 2014
VL 265
BP 545
EP 564
DI 10.3233/978-1-61499-434-3-545
PG 20
WC Computer Science, Artificial Intelligence; Computer Science, Software
   Engineering; Computer Science, Theory & Methods
SC Computer Science
GA BC1JL
UT WOS:000350151300041
ER

PT J
AU Engstrom, E
   Mantyla, M
   Runeson, P
   Borg, M
AF Engstrom, Emelie
   Mantyla, Mika
   Runeson, Per
   Borg, Markus
GP IEEE
TI Supporting Regression Test Scoping with Visual Analytics
SO 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING,
   VERIFICATION AND VALIDATION (ICST)
LA English
DT Proceedings Paper
CT 7th IEEE International Conference on Software Testing, Verification and
   Validation (ICST)
CY MAR 31-APR 04, 2014
CL Cleveland, OH
SP IEEE Comp Soc, IEEE, ABB
ID SOFTWARE PRODUCT LINE; VISUALIZATION; TOOL
AB Background: Test managers have to repeatedly select test cases for test activities during evolution of large software systems. Researchers have widely studied automated test scoping, but have not fully investigated decision support with human interaction. We previously proposed the introduction of visual analytics for this purpose. Aim: In this empirical study we investigate how to design such decision support. Method: We explored the use of visual analytics using heat maps of historical test data for test scoping support by letting test managers evaluate prototype visualizations in three focus groups with in total nine industrial test experts. Results: All test managers in the study found the visual analytics useful for supporting test planning. However, our results show that different tasks and contexts require different types of visualizations. Conclusion: Important properties for test planning support are: ability to overview testing from different perspectives, ability to filter and zoom to compare subsets of the testing with respect to various attributes and the ability to manipulate the subset under analysis by selecting and deselecting test cases. Our results may be used to support the introduction of visual test analytics in practice.
C1 [Engstrom, Emelie; Runeson, Per; Borg, Markus] Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
   [Mantyla, Mika] Aalto Univ, Dep Comp Sci & Engn, Espoo, Finland.
RP Engstrom, E (reprint author), Lund Univ, Dept Comp Sci, S-22100 Lund, Sweden.
EM emelie.engstrom@cs.lth.se; mika.mantyla@aalto.fi; per.runeson@cs.lth.se;
   markus.borg@cs.lth.se
CR ARAYA VA, 2011, P 33 ICSE, P1140
   Ball T, 1996, COMPUTER, V29, P33, DOI 10.1109/2.488299
   Bassil S, 2001, PROG COMPREHEN, P7, DOI 10.1109/WPC.2001.921708
   Card S, 1999, READINGS INFORM VISU
   Cook K. A., 2005, PNNLSA45230
   Deissenboeck F, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.129
   Diehl S., 2007, SOFTWARE VISUALIZATI, V1st
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Engstrom E, 2013, INFORM SOFTWARE TECH, V55, P581, DOI 10.1016/j.infsof.2012.04.009
   Engstrom E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Engstrom E., 2012, EAST 12, P15
   Engstrom E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Engstrom E, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), DOI 10.1109/ICST.2011.27
   Engstrom E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Feldt Robert, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), DOI 10.1109/SEAA.2013.61
   Graanin D., 2005, INNOVATIONS SYSTEMS, V1, P221
   Jones J. A., 2002, Proceedings of the 24th International Conference on Software Engineering. ICSE 2002, DOI 10.1109/ICSE.2002.1007991
   KIENLE HM, 2007, INT WORKSH VIS SOFTW, P2
   Koschke R, 2002, LECT NOTES COMPUT SC, V2269, P138
   Maletic J. I., 2011, 2011 6 IEEE INT WORK, P1
   Munzner T, 2009, IEEE T VIS COMPUT GR, V15, P921, DOI 10.1109/TVCG.2009.111
   Runeson P., 2012, CASE STUDY RES SOFTW
   Runeson P., 2012, P 2 INT WORKSH REGR, P742
   Shneiderman B., 1996, Proceedings. IEEE Symposium on Visual Languages (Cat. No.96TB100066), DOI 10.1109/VL.1996.545307
   Vayghan JA, 2007, IBM SYST J, V46, P669
   Wilkinson L., 2009, AM STAT, V63
   Wong PC, 2004, IEEE COMPUT GRAPH, V24, P20
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stvr.430, 10.1002/stv.430]
NR 28
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
BN 978-0-7695-5185-2
PY 2014
BP 283
EP 292
DI 10.1109/ICST.2014.41
PG 10
WC Computer Science, Software Engineering
SC Computer Science
GA BC8PQ
UT WOS:000355985000031
ER

PT J
AU Oliveira, P
   Souza, M
   Braga, R
   Britto, R
   Rabelo, RL
   Neto, PS
AF Oliveira, Pedro
   Souza, Matheus
   Braga, Ronyerison
   Britto, Ricardo
   Rabelo, Ricardo Lira
   Santos Neto, Pedro
GP IEEE
TI Athena: A Visual Tool to Support the Development of Computational
   Intelligence Systems
SO 2014 IEEE 26TH INTERNATIONAL CONFERENCE ON TOOLS WITH ARTIFICIAL
   INTELLIGENCE (ICTAI)
SE Proceedings-International Conference on Tools With Artificial
   Intelligence
LA English
DT Proceedings Paper
CT 26th IEEE International Conference on Tools with Artificial Intelligence
   (ICTAI)
CY NOV 10-12, 2014
CL Limassol, CYPRUS
SP IEEE, IEEE Comp Soc, Biolog & Artificial Intelligence Fdn, Austrian Airlines, Cyprus Tourism Org, Univ Cyprus
DE Computational Intelligence; Artificial Intelligence; Visual Programming;
   Tool; Service
ID OPTIMIZATION; FRAMEWORK
AB Computational Intelligence (CI) embraces techniques designed to address complex real-world problems in which traditional approaches are ineffective or infeasible. Some of these techniques are being used to solve several complex problems, such as the team allocation, building products portfolios in a software product line and test case selection/prioritization. However, despite the usefulness of these applications, the development of solutions based in CI techniques is not a trivial activity, since it involves the implementation/adaptation of algorithms to specific context and problems. This work presents Athena, a visual tool developed aiming at offering a simple approach to develop CI-based software systems. In order to do this, we proposed a drag-and-drop approach, which we called CI as a Service (CIaaS). Based on a preliminary study, we can state that Athena can help researchers to save time during the development of computational intelligence approaches.
C1 [Oliveira, Pedro; Souza, Matheus; Braga, Ronyerison; Rabelo, Ricardo Lira; Santos Neto, Pedro] Univ Fed Piaui, Dept Comp Sci, Software Engn & Ind Informat Lab, Teresina, PI, Brazil.
   [Britto, Ricardo] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
RP Oliveira, P (reprint author), Univ Fed Piaui, Dept Comp Sci, Software Engn & Ind Informat Lab, Teresina, PI, Brazil.
EM petrus.cc@gmail.com; matheusmmcs@gmail.com; ronyerisonbraga@gmail.com;
   ricardo.britto@bth.se; ricardoalr@ufpi.edu.br; pasn@ufpi.edu.br
CR Bazaraa M. S., 2013, NONLINEAR PROGRAMMIN
   Bazgan C, 2009, COMPUT OPER RES, V36, P260, DOI 10.1016/j.cor.2007.09.009
   Bendale A., 2011, Proceedings of the 2011 IEEE Third International Conference on Privacy, Security, Risk and Trust and IEEE Third International Conference on Social Computing (PASSAT/SocialCom 2011), DOI 10.1109/PASSAT/SocialCom.2011.157
   Boyd S, 2007, OPTIM ENG, V8, P67, DOI 10.1007/s11081-007-9001-7
   Britto R., 2012, IEEE C EV COMP CEC 2, P1
   Caamano P., 2010, EV COMP CEC 2010 IEE, P1
   Cingolani P., 2012, FUZZ SYST FUZZ IEEE, P1
   Cruz J. J., 2012, IEEE C EV COMP CEC 2
   de Castro L. N., 2007, Physics of Life Reviews, V4, DOI 10.1016/j.plrev.2006.10.002
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dorigo M, 1996, IEEE T SYST MAN CY B, V26, P29, DOI 10.1109/3477.484436
   Durillo J.J., 2010, IEEE C EVOL COMP, P1, DOI 10.1109/CEC.2010.5586354
   Eberhart R. C., 2007, COMPUTATIONAL INTELL
   Ellen R. A., 2005, COMPUTATIONAL INTELL, P129
   Jamsa K. A., 2012, CLOUD COMPUTING SAAS
   Johnson-Laird PN, 1998, PERCEPTION COGNITION, P441, DOI DOI 10.1016/B978-012301160-2/50016-2
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Konar A., 2005, COMPUTATIONAL INTELL
   LUENBERGER D. G., 1973, INTRO LINEAR NONLINE, V28
   MAMDANI EH, 1977, IEEE T COMPUT, V26, P1182
   Martello S., 1990, KNAPSACK PROBLEMS
   Neto P. S., 2012, SEKE, P273
   Pampara G, 2008, IEEE IJCNN, P1750, DOI 10.1109/IJCNN.2008.4634035
   Parejo JA, 2012, SOFT COMPUT, V16, P527, DOI 10.1007/s00500-011-0754-8
   Stewart DB, 1997, IEEE T SOFTWARE ENG, V23, P759, DOI 10.1109/32.637390
   Tocci R. J., 2007, SISTEMAS DIGITAIS PR
   Ueda M., 2005, APPL INT WORKSH 2005, P381
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Ventura S, 2008, SOFT COMPUT, V12, P381, DOI 10.1007/s00500-007-0172-0
   Wohlin C., 2012, EXPT SOFTWARE ENG
NR 30
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
SN 1082-3409
J9 PROC INT C TOOLS ART
PY 2014
BP 950
EP 957
DI 10.1109/ICTAI.2014.144
PG 8
WC Computer Science, Artificial Intelligence; Computer Science, Theory &
   Methods; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BD0MI
UT WOS:000357384700133
ER

PT J
AU Colanzi, TE
   Vergilio, SR
AF Colanzi, Thelma Elita
   Vergilio, Silvia Regina
GP IEEE
TI A Comparative Analysis of Two Multi-Objective Evolutionary Algorithms in
   Product Line Architecture Design Optimization
SO 2014 IEEE 26TH INTERNATIONAL CONFERENCE ON TOOLS WITH ARTIFICIAL
   INTELLIGENCE (ICTAI)
SE Proceedings-International Conference on Tools With Artificial
   Intelligence
LA English
DT Proceedings Paper
CT 26th IEEE International Conference on Tools with Artificial Intelligence
   (ICTAI)
CY NOV 10-12, 2014
CL Limassol, CYPRUS
SP IEEE, IEEE Comp Soc, Biolog & Artificial Intelligence Fdn, Austrian Airlines, Cyprus Tourism Org, Univ Cyprus
DE software product line; multi-objective algorithms; product line
   architecture design
ID SYSTEM
AB The Product Line Architecture (PLA) design is a multi-objective optimization problem that can be properly solved with search-based algorithms. However, search-based PLA design is an incipient research field. Due to this, works in this field have addressed main points to solve the problem: adequate representation, specific search operators and suitable evaluation fitness functions. Similarly what happens in the search-based design of traditional software, existing works on search-based PLA design use NSGA-II, without evaluating the characteristics of this algorithm, such as the use of crossover operator. Considering this fact, this paper reports results from a comparative analysis of two algorithms, NSGA-II and PAES, to the PLA design problem. PAES was chosen because it implements a different evolution strategy that does not employ crossover. An experimental study was carried out with nine PLAs and results of the conducted study attest that NSGA-II performs better than PAES in the PLA design context.
C1 [Colanzi, Thelma Elita] State Univ Maringa UEM, Dept Comp Sci, Maringa, Parana, Brazil.
   [Vergilio, Silvia Regina] Fed Univ Parana UFPR, Dept Comp Sci, Curitiba, Parana, Brazil.
RP Colanzi, TE (reprint author), State Univ Maringa UEM, Dept Comp Sci, Maringa, Parana, Brazil.
EM thelma@din.uem.br; silvia@inf.ufpr.br
CR Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   Alexouda G, 2005, DECIS SUPPORT SYST, V38, P495, DOI 10.1016/j.dss.2003.09.002
   Arcuri A., 2011, 3 INT S SEARCH BAS S, P33
   Arcuri A., 2011, ICSE 11, P21
   Assuncao WKG, 2014, INFORM SCIENCES, V267, P119, DOI 10.1016/j.ins.2013.12.040
   Basili V. R., 1994, ENCY SOFTWARE ENG
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Chicano J. F., 2011, GEN EV COMP C GECCO, P1915
   Cochrane J. L., 1973, MULTIPLE CRITERIA DE
   Colanzi T., 2012, SSBSE 12, V7515, P259
   Colanzi T. E., 2014, P 18 INT SOFTW PROD
   Colanzi T. E., 2014, P 2014 IEEE 38 ANN C
   Colanzi T. E., 2013, INT WORKSH COMB MOD, P28
   Contieri Junior A. C., 2011, EUR C SOFTW ARCH ECS, P130
   Czarnecki K., 2004, INT C SOFTW PROD LIN, V3154, P266
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Donegan P. M., 2007, BRAZ S SOFTW COMP AR, P3
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261
   Garcia S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   Harman M., 2014, INT SOFTW PROD LIN C
   Karimpour R., 2013, 1 INT WORKSH COMB MO, P34
   Knowles JD, 2000, EVOL COMPUT, V8, P149, DOI 10.1162/106365600568167
   Linden F.J.D., 2007, SOFTWARE PRODUCT LIN
   Lopez-Herrejon R., 2011, 3 S SEARCH BAS SOFTW
   Lopez-Herrejon RE, 2013, EUR CON SFTWR MTNCE, P441, DOI 10.1109/CSMR.2013.67
   Lopez-Herrejon R. E., 2013, INT C SOFTW MAINT IC, P404
   Lopez-Herrejon R.E., 2012, INT S SEARCH BAS SOF, V7515, P168
   Nunes C, 2009, J UNIVERS COMPUT SCI, V15, P2254
   Pareto V., 1927, MANUEL EC POLITIQUE
   R Development Core Team, 2005, R LANG ENV STAT COMP
   Raiha O., 2010, COMPUTER SCI REV, V4, P203
   Raiha O., 2011, 3 WORLD C NABIC, P29
   Raiha O., 2009, WORLD C NAT BIOL INS, P619
   Raiha O., 2010, ISDA, P266
   Sant'Anna C., 2007, 1 EUR C SOFTW ARCH E, P207
   SAYYAD AS, 2013, ICSE 13, P492
   SEI, 2013, ARC GAM MAK PED PROD
   Siegel S., 1988, NONPARAMETRIC STAT B, V2<SUP>nd</SUP>
   Simons CL, 2012, IEEE T SYST MAN CY C, V42, P1797, DOI 10.1109/TSMCC.2012.2225103
   Simons C. L., 2011, THESIS U W ENGLAND U
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 44
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1264 USA
SN 1082-3409
J9 PROC INT C TOOLS ART
PY 2014
BP 681
EP 688
DI 10.1109/ICTAI.2014.107
PG 8
WC Computer Science, Artificial Intelligence; Computer Science, Theory &
   Methods; Engineering, Electrical & Electronic
SC Computer Science; Engineering
GA BD0MI
UT WOS:000357384700096
ER

PT J
AU Abrishamchian, F
   Trachtler, A
AF Abrishamchian, Farisoroosh
   Traechtler, Ansgar
BE Thoben, KD
   Busse, M
   Denkena, B
   Gausemeier, J
TI Configuration of mechatronic systems using feature models
SO 2ND INTERNATIONAL CONFERENCE ON SYSTEM-INTEGRATED INTELLIGENCE:
   CHALLENGES FOR PRODUCT AND PRODUCTION ENGINEERING
SE Procedia Technology
LA English
DT Proceedings Paper
CT 2nd International Conference on System-Integrated Intelligence (SysInt)
   - Challenges for Product and Production Engineering
CY JUL 02-04, 2014
CL Bremen, GERMANY
SP German Res Fdn, Int Acad Prod Engn
HO Univ Bremen
DE Feature modeling; mechatronic systems; modeling depth; multidisciplinary
   systems; Software Product Line; variability management
AB To analyze and describe the behavior and the interaction pattern of the product's subsystems and their components, multiple simulation models have to be developed in each engineering domain. In this paper, a Software Product Line (SPL) approach is adopted to demonstrate the dependencies and associations between models of subsystems. SPL approach provides a structured method for handling variability by using feature models. The particular focus of this paper is on the mapping between components in different tools with more than one modeling depth, the level of detail respectively, through deployment of feature modeling. (C) 2014 Published by Elsevier Ltd.
C1 [Abrishamchian, Farisoroosh; Traechtler, Ansgar] Univ Paderborn, Heinz Nixdorf Inst, D-33102 Paderborn, Germany.
RP Abrishamchian, F (reprint author), Univ Paderborn, Heinz Nixdorf Inst, Furstenallee 11, D-33102 Paderborn, Germany.
EM farisoroosh.abrishamchian@hni.uni-paderborn.de
CR [Anonymous], EMF FEAT MOD
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bauer F, 2011, INT CONF ENG DES, V4, P329
   Berg KA, 2005, P 2005 ANN RES C S A, P182
   Beuche DA, 2006, METHODS TOOLS, V14, P9
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Harchenko J, 2010, THESIS FAKULTAT MASC
   Herzig SJ, 2011, P ASME 2011 INT DES
   Illig I, 2008, 9 INT S ADV VEH CONT
   Just V, 2010, INT MECH ENG C EXP I
   Kang K, 1990, CMUSEI90TR021
   Lochbichler M, 2012, INT C MOD SIM ZUR
   Qamar A, 2012, P ASME 2012 INT DES
   Thum TH, 2012, SCI COMPUTER PROGRAM
   Tichy M, 2011, ENTWURFSTECHNIK INTE
NR 15
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA SARA BURGERHARTSTRAAT 25, PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 2212-0173
J9 PROC TECH
PY 2014
VL 15
BP 27
EP 34
DI 10.1016/j.protcy.2014.09.031
PG 8
WC Computer Science, Artificial Intelligence; Computer Science, Information
   Systems; Computer Science, Interdisciplinary Applications; Engineering,
   Industrial
SC Computer Science; Engineering
GA BD2SJ
UT WOS:000359158000004
ER

PT J
AU Jamwal, V
   Meda, H
AF Jamwal, Vikram
   Meda, Hema
GP IEEE
TI Variability Management in Information Intensive Services
SO 2014 ANNUAL SRII GLOBAL CONFERENCE (SRII)
SE Annual SRII Global Conference
LA English
DT Proceedings Paper
CT Annual SRII Global Conference (SRII)
CY APR 23-25, 2014
CL San Jose, CA
SP Accenture Labs, Adv Res Inst III, Artiman Venture, A STAR Singapore, Brocade, Chubu Univ, Citrix, Cyphort, Dacadoo, DFJ, EXASOL Germany, Fraunhofer Res Inst, GE Hlth Care, Google, IBM, Intel, Intrahouse, Kasetsart Univ, Manchester Univ, Lumiata, McAfee, Minist ICT Thailand, Naval Postgraduate Sch, Nebula, NetAPP, OneID, PayPal, Open Med Inst, Qualcomm, QuickLog, Res Inst Wageningen, Safeway, SAP, Shimane Univ, Sch Med, Stanford Univ, TCS, Univ Tokyo, UberCloud, UC Berkeley, Univ Erlengen Nuremberg, Univ Cincinnati, Univ Hawai, Verifone, Virginia Tech, VMware, Xerox, Zetta Venture
DE Variability; Variability Modeling; Variability Management; Service
   Design; Information Intensive Services
ID SOFTWARE PRODUCT LINES; ECONOMIES; SCOPE
AB In this paper we identify Variability as one of the principal elements that contributes towards complexity in Information Intensive Services (IIS). We also suggest an approach to model and manage Variability in IIS. We illustrate the concepts and solutions with the help of a real world case study from Financial Trade Services.
C1 [Jamwal, Vikram; Meda, Hema] TCS Innovat Labs, New Delhi, India.
RP Jamwal, V (reprint author), TCS Innovat Labs, New Delhi, India.
EM vikram.jamwal@tcs.com; Hema.meda@tcs.com
CR Abbas Nadeem, 2011, P 15 INT SOFTW PROD, V2, P36
   ABUMATAR M, 2013, SOSE, P260, DOI DOI 10.1109/SOSE.2013.15
   Anders Grath, 2012, HDB INT TRADE FINANC, VSecond
   APTE UM, 1995, MANAGE SCI, V41, P1250, DOI 10.1287/mnsc.41.7.1250
   Baresi L, 2012, COMPUTER, V45, P42, DOI 10.1109/MC.2012.289
   Becker Martin, 2003, WORKSH SOFTW VAR MAN, P19
   Bencomo Nelly, 2012, VIEW LANDSCAPE DYNAM, P1
   Berger Thorsten, 2013, P 7 INT WORKSH VAR M, P7
   Capilla Rafael, 2013, SYSTEMS SOFTWARE VAR
   Chen Lianping, 2009, P 13 INT SOFTW PROD, P81
   CHEN LP, 2010, SOFTWARE PRODUCT LIN, V6287, P166, DOI 10.1007/978-3-642-15579-6_12
   Chuan Goh Kheng, 2013, COMMUNICATION
   Cohen Sholom, 2010, CMUSEI2010TN007
   Edvardsson B, 2005, INT J SERV IND MANAG, V16, P107, DOI 10.1108/09564230510587177
   Gottfredson M, 2005, HARVARD BUS REV, V83, P62
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hinchey M, 2012, COMPUTER, V45, P22, DOI 10.1109/MC.2012.332
   JAMWAL V, 2012, SERV EM MARK ICSEM 2, P92, DOI DOI 10.1109/ICSEM.2012.20
   Jan Bosch, 2004, SCI COMPUT PROGRAM, V53, P255
   JOHNSTON ROBERT AUTOR, 2005, SERVICE OPERATIONS M
   Lee J, 2012, COMPUTER, V45, P49
   McGregor John D., 2010, SOFTWARE IEEE, V27, P16
   MOHABBATI B, 2011, SERVICE ORIENTED COM, V7084, P436
   PANZAR JC, 1981, AM ECON REV, V71, P268
   Schmid Klaus, 2008, SPLC, P33
   Schmid K, 2004, SCI COMPUT PROGRAM, V53, P259, DOI 10.1016/j.scico.2003.04.002
   SHOSTACK GL, 1987, J MARKETING, V51, P34, DOI 10.2307/1251142
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   TEECE DJ, 1980, J ECON BEHAV ORGAN, V1, P223, DOI 10.1016/0167-2681(80)90002-5
   van der Hoek A, 2004, SCI COMPUT PROGRAM, V53, P285, DOI 10.1016/j.scico.2003.04.003
NR 30
TC 0
Z9 0
PU IEEE
PI NEW YORK
PA 345 E 47TH ST, NEW YORK, NY 10017 USA
SN 2166-0778
BN 978-1-4799-5193-2
J9 ANN SRII GLOB CONF
PY 2014
BP 65
EP 81
DI 10.1109/SRII.2014.20
PG 17
WC Computer Science, Information Systems
SC Computer Science
GA BD3XE
UT WOS:000360276100009
ER

PT J
AU Siegmund, N
   von Rhein, A
   Apel, S
AF Siegmund, Norbert
   von Rhein, Alexander
   Apel, Sven
TI Family-Based Performance Measurement
SO ACM SIGPLAN NOTICES
LA English
DT Article
DE Family-based Analysis; FeatureHouse; Performance Prediction
ID SOFTWARE PRODUCT LINES; NONFUNCTIONAL PROPERTIES; PREDICTION
AB Most contemporary programs are customizable. They provide many features that give rise to millions of program variants. Determining which feature selection yields an optimal performance is challenging, because of the exponential number of variants. Predicting the performance of a variant based on previous measurements proved successful, but induces a trade-off between the measurement effort and prediction accuracy. We propose the alternative approach of family-based performance measurement, to reduce the number of measurements required for identifying feature interactions and for obtaining accurate predictions. The key idea is to create a variant simulator (by translating compile-time variability to run-time variability) that can simulate the behavior of all program variants. We use it to measure performance of individual methods, trace methods to features, and infer feature interactions based on the call graph. We evaluate our approach by means of five feature-oriented programs. On average, we achieve accuracy of 98 %, with only a single measurement per customizable program. Observations show that our approach opens avenues of future research in different domains, such an feature-interaction detection and testing.
C1 [Siegmund, Norbert; von Rhein, Alexander; Apel, Sven] Univ Passau, Passau, Germany.
RP Siegmund, N (reprint author), Univ Passau, Passau, Germany.
FU German ministry of education and science (BMBF) [01IM10002B]; German
   Research Foundation [AP 206/2, AP 206/4, AP 206/5, AP 206/7]
FX The work of Siegmund is supported by the German ministry of education
   and science (BMBF), number 01IM10002B. The work of Apel and von Rhein is
   supported by the German Research Foundation (AP 206/2, AP 206/4, AP
   206/5, and AP 206/7).
CR Ammons G, 1997, ACM SIGPLAN NOTICES, V32, P85, DOI 10.1145/258916.258924
   Apel S., 2011, P INT C AUT SOFTW EN, P372
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, DOI 10.1109/TSE.2011.120
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Batory D, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Brabrand C., 2013, T ASPECT ORIENTED SO, V10, P73
   Calder M, 2006, FORM METHOD SYST DES, V28, P213, DOI 10.1007/s10703-006-0002-5
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Chen SP, 2005, J SYST SOFTWARE, V74, P35, DOI 10.1016/j.jss.2003.05.005
   Clarke E. M., 1999, MODEL CHECKING
   Classen A., 2010, P INT C SOFTW ENG IC, P335, DOI DOI 10.1145/1806799.1806850
   Erwig M., 2011, ACM T SOFTW ENG METH, V21, P1
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Guo J., 2013, P ASE IN PRESS
   Hall R. J., 2005, Automated Software Engineering, V12, DOI 10.1023/B:AUSE.0000049208.84702.84
   Jovic M, 2011, ACM SIGPLAN NOTICES, V46, P155, DOI 10.1145/2076021.2048081
   Kastner C., 2008, P INT C AUT SOFTW EN, P258
   Kastner C, 2011, ACM SIGPLAN NOTICES, V46, P805, DOI 10.1145/2076021.2048128
   Kastner C., 2012, ACM T SOFTW ENG METH, V21, P14
   Kastner C., 2009, P INT C GEN PROGR CO, P157, DOI 10.1145/1621607.1621632
   Kolesnikov S., 2013, P VAMOS, P25
   Kwon N., 2013, P USENIX, P297
   Liebig J., 2010, P INT C SOFTW ENG IC, P105
   Liebig J., 2013, P ESEC FSE
   Liu J., 2006, P INT C SOFTW ENG IC, P112, DOI 10.1145/1134285.1134303
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Pomakis K. P., 1996, Proceedings of the 1996 International Symposium on Software Testing and Analysis (ISSTA), DOI 10.1145/229000.226320
   Post H., 2008, P INT C AUT SOFTW EN, P347
   Siegmund N., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), DOI 10.1109/SPLC.2011.20
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Song C, 2012, PROC INT CONF SOFTW, P903, DOI 10.1109/ICSE.2012.6227129
   Thum T., 2012, P GPCE, P11
   Thum T., 2012, TECHNICAL REPORT
   Witten IH, 2005, DATA MINING PRACTICA
NR 38
TC 0
Z9 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 0362-1340
EI 1558-1160
J9 ACM SIGPLAN NOTICES
JI ACM Sigplan Not.
PD MAR
PY 2014
VL 49
IS 3
BP 95
EP 104
DI 10.1145/2517208.2517209
PG 10
WC Computer Science, Software Engineering
SC Computer Science
GA AK7RN
UT WOS:000338625500012
ER

PT J
AU Belategi, L
   Sagardui, G
   Etxeberria, L
   Azanza, M
AF Belategi, Lorea
   Sagardui, Goiuria
   Etxeberria, Leire
   Azanza, Maider
TI Embedded software product lines: domain and application engineering
   model-based analysis processes
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE software product line; model-based analysis process; model-driven
   development; quality attributes; performance
AB Nowadays, embedded systems are gaining importance. At the same time, the development of their software is increasing its complexity, having to deal with quality, cost, and time-to-market issues among others. With stringent quality requirements such as performance, early verification and validation become critical in these systems. In this regard, advanced development paradigms such as model-driven engineering and software product line engineering bring considerable benefits to the development and validation of embedded system software. However, these benefits come at the cost of increasing process complexity. This work presents a process based on UML and MARTE for the analysis of embedded model-driven product lines. It specifies the tasks, the involved roles, and the workproducts that form the process and how it is integrated in the more general development process. Existing tools that support the tasks to be performed in the process are also described. A classification of such tools and a study of traceability among them are provided, allowing engineering teams to choose the most adequate chain of tools to support the process. Copyright (c) 2012 John Wiley & Sons, Ltd.
C1 [Belategi, Lorea; Sagardui, Goiuria; Etxeberria, Leire] Mondragon Unibertsitatea, Arrasate Mondragon 20500, Spain.
   [Azanza, Maider] Univ Basque Country UPV EHU, San Sebastian, Spain.
RP Belategi, L (reprint author), Mondragon Unibertsitatea, Goiru 2, Arrasate Mondragon 20500, Spain.
EM lbelategui@mondragon.edu
RI Azanza, Maider/L-6400-2014
FU Spanish Ministry of Education; European Social Fund [TIN2011-23839];
   Basque Government [UE2011-4]; Department of Education, Universities and
   Research of the Basque Government
FX This work is co-supported by the Spanish Ministry of Education and the
   European Social Fund under contract TIN2011-23839 (Scriptongue) and
   Basque Government under grant UE2011-4 (COMODE Project). The project has
   been developed by the embedded system group supported by the Department
   of Education, Universities and Research of the Basque Government.
CR Albinet A, 4 EUR C EMB REAL TIM
   [Anonymous], 2008, UML MAST VIS MOD AN
   [Anonymous], 2011, UML PROFILE MARTE MO
   [Anonymous], 1993, 10611992 IEEE
   [Anonymous], 2005, UML PROFILE SCHEDULA
   Anssi S, 2011, LNCS, V7083
   Antkiewicz M, 2004, ECL 04 OOPSLA WORKSH
   Azanza M, 2010, INT C NEW MOD CONC T, V6195
   Belategi L, 14 INT C SOFTW PROD
   Belategi L, 2011, INT C SOFTW SYST PRO
   Belategi L, 2011, JISBD 11, V11
   Czarnecki K, 1998, THESIS ILMENAU U
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.225
   Dang HL, 2008, INNOVATIONS SYSTEMS, V4, P189
   Demathieu S, 11 IEEE S OBJ OR REA
   Dziobek C, 2008, ELEKT AUTOMOTIVE, V2, P33
   Espinoza H, 2007, THESIS
   Etxeberria L, 2008, THESIS
   France R, 2007, 2007 FUT SOFTW ENG F
   GOMAA H., 2004, DESIGNING SOFTWARE P
   Gomez-Martinez E, P 27 INT C APPL THEO, P401
   Haugen O, 2010, CVL COMMON VARIABILI
   Huhn M, INT DAGST C MOD BAS
   Kang K., 1990, TECHNICAL REPORT
   Lee SY, 13 IEEE INT C ENG CO
   Liehr AW, 2008, FOR SPEC DES LANG FD
   Medina JL, WORKSH REAL TIM SPEC
   Mohagheghi P, 2008, 4 EUR C MOD DRIV ARC, V5095
   Nicolescu G., 2009, MODEL BASED DESIGN E
   OMG, 2008, SOFTW SYST PROC ENG
   Pohl K, 2006, SOFTWARE PRODUCT LIN
   Rech J, 2008, INFORM SCI REFERENCE
   Robert T, 2010, EDA TECH FORUM
   Shi J, 2007, THESIS TRITA MMK
   Shrivastava R, 2010, INTEGRATE RATIONAL R
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Tawhid R, 11 INT C MOD DRIV EN, V5301
   Tawhid R, 2011, 15 INT SOFTW PROD LI
   TOPCASED, 2008, OP SOURC TOOLK CRIT
   Tribastone M, WOSP 08 7 INT WORKSH
   Trinidad P, 2010, 3 WORKSH AC SOFTW DE
   Utting M., 2006, PRACTICAL MODEL BASE
   Wimmer M, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978807
   Zha XF, ASME 2005 INT DES EN, V3
NR 44
TC 0
Z9 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD APR
PY 2014
VL 26
IS 4
SI SI
BP 419
EP 433
DI 10.1002/smr.1568
PG 15
WC Computer Science, Software Engineering
SC Computer Science
GA AF1WF
UT WOS:000334503900005
ER

PT S
AU Yuan, ST
AF Yuan, ST
BE Ishida, T
TI MAS building environments with product-line-architecture awareness
SO MULTIAGENT PLATFORMS
SE LECTURE NOTES IN ARTIFICIAL INTELLIGENCE
LA English
DT Article; Proceedings Paper
CT 1st Pacific Rim International Workshop on Multi-Agents (PRIMA 98)
CY NOV   23, 1998
CL SINGAPORE, SINGAPORE
AB A multiagent system, conceptually, is often explained in terms of a collection of agents, each of which is loosely connected with each other via Internet/Intranet and possesses the capabilities claimed such as autonomy, adaptation, and cooperation using speech acts like KQML. The agent-view of software is indeed very powerful and will keep attracting more and more people into this fantasy. But years from now, an alternative view of multiagent-based software must be developed in order to raise the quality, productivity, and scalability as well as to reduce the complexity and delivery time. Accordingly, the building environments in support of such an alternative view should be developed. This papers first illustrates the new view of next generation multiagent-based software, product-line architectures, and then presents a building environment towards such an alternative view of multiagent-based software.
C1 Fu Jen Univ, Informat Management Dept, Taipei, Taiwan.
RP Yuan, ST (reprint author), Fu Jen Univ, Informat Management Dept, Taipei, Taiwan.
CR *AI LAB FUJ, 1997, WINKQML ACT CONTR
   *AI LAB FUJ, 1997, WIN ACT CONTR
   BARBUCEANU M, 1995, 1 INT C MULT SYST
   BATORY D, 1998, PRODUCT LINE ARCHITE
   BELAKHDAR, 1995, 1 INT DEC INT MULT S
   BELAKHDAR O, 1997, USING ONTOLOGY SHARI
   BRADSHAW JM, 1996, KAW 96
   CHAIBDRAA B, 1997, INTERACTION AGENTS R
   Finin T., 1994, P 3 INT C INF KNOWL
   JANC PC, 1995, PRAGMATIC APPL INFOR
   JENNINGS NR, 1997, IEEE P SOFTW ENG
   KUWABARA K, 1995, P TOOLS ART INT
   MUELLER HJ, 1997, INT J DATA KNOWLEDGE, P23
   *OV REP, 1994, INT AG NEW REV SOFTW
   *PRACT APPL CO, 1997, P 2 INT C PRACT APPL
   RODRIGUEZ JA, 1997, FM965 JAVA BASED ELE
   SMITH RG, 1980, IEEE T COMPUTING
   *UCPOP, 1995, COMP SCI DEP
   UENO I, 1997, MULTIAGENT APPROACH
   VONMARTIAL F, 1992, SPRINGER LNCS, V610
   YUAN ST, 1998, 3 INT S DAT ENG LEAR
   YUAN ST, 1997, DECENTRALIZED MULTY
NR 22
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 3-540-65967-6
J9 LECT NOTES ARTIF INT
PY 1999
VL 1599
BP 1
EP 17
PG 17
WC Computer Science, Artificial Intelligence
SC Computer Science
GA BP85X
UT WOS:000086437100001
ER

PT J
AU Behjati, R
   Nejati, S
   Briand, LC
AF Behjati, Razieh
   Nejati, Shiva
   Briand, Lionel C.
TI Architecture-Level Configuration of Large-Scale Embedded Software
   Systems
SO ACM TRANSACTIONS ON SOFTWARE ENGINEERING AND METHODOLOGY
LA English
DT Article
DE Verification; Model-based product-line engineering; product
   configuration; consistent configuration; constraint satisfaction
   techniques; formal specification; UML/OCL
ID FEATURE MODELS; FAMILIES
AB Configuration in the domain of Integrated Control Systems (ICS) is largely manual, laborious, and error prone. In this article, we propose a model-based configuration approach that provides automation support for reducing configuration effort and the likelihood of configuration errors in the ICS domain. We ground our approach on component-based specifications of ICS families. We then develop a configuration algorithm using constraint satisfaction techniques over finite domains to generate products that are consistent with respect to their ICS family specifications. We reason about the termination and consistency of our configuration algorithm analytically. We evaluate the effectiveness of our configuration approach by applying it to a real subsea oil production system. Specifically, we have rebuilt a number of existing verified product configurations of our industry partner. Our experience shows that our approach can automatically infer up to 50% of the configuration decisions, and reduces the complexity of making configuration decisions.
C1 [Behjati, Razieh] Certus Software V&V Ctr, Simula Res Lab, Oslo, Norway.
   [Nejati, Shiva; Briand, Lionel C.] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
RP Behjati, R (reprint author), Certus Software V&V Ctr, Simula Res Lab, Oslo, Norway.
EM razieh.behjati@gmail.com
FU Research Council of Norway [NFR 205606]; National Research Fund,
   Luxembourg [FNR/P10/03]
FX R. Behjati acknowledges the Research Council of Norway (the ModelFusion
   Project - NFR 205606). S. Nejati and L. C. Briand are funded by the
   National Research Fund, Luxembourg (FNR/P10/03 - Verification and
   Validation Laboratory).
CR Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Behjati R, 2013, INFORM SOFTWARE TECH, V55, P607, DOI 10.1016/j.infsof.2012.09.006
   Behjati R., 2012, P 8 EUR C MOD FDN AP, P226
   Behjati R., 2012, P 15 INT C MOD DRIV, P497
   Bessiere C., 2006, CONSTRAINT PROPAGATI
   Bontemps Y., 2004, P SPLC 2004 WORKSH S, P48
   Borba P, 2010, LECT NOTES COMPUT SC, V6255, P15, DOI 10.1007/978-3-642-14808-8_2
   Cabot J., 2008, P 2008 IEEE INT C SO, P73
   Cabot J., 2007, P 22 IEEE ACM INT C, P547, DOI 10.1145/1321631.1321737
   Carlsson M., 2010, THEOR PRACT LOG PROG, V12, P35
   Carlsson M., 1997, Programming Languages: Implementations, Logics, and Programs. 9th International Symposium, PLILP'97, Including a Special Track on Declarative Programming Languages in Education. Proceedings
   Cormen T.H., 2001, INTRO ALGORITHMS
   Czarnecki K., 2005, P WORKSH SOFTW FACT
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.213
   Dechter R., 2002, ARTIF INTELL, V136, P2
   Deelstra S., 2005, J SYST SOFTW, V74, P2
   Egyed A., 2006, P 28 INT C SOFTW ENG, V2006, P381
   Griss M. L., 1998, Proceedings. Fifth International Conference on Software Reuse (Cat. No.98TB100203), DOI 10.1109/ICSR.1998.685732
   Hadzic T., 2004, P INT C EC TECHN ORG, P131
   Hentenryck P. V., 1995, P CONSTR PROGR BAS T, P293
   Heymans P., 2008, IET SOFTW, V2, P3
   Hubaux A., 2012, THESIS U NAMUR BELGI
   Hussmann H., 2002, SCI COMPUT PROGRAM, V44, P1
   Janota M., 2007, P 11 INT C SOFTW PRO, P13
   Janota M., 2010, P 36 C CURR TRENDS T, P528
   Kang K., 1990, CMUSEI90TR21
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Krueger C. W., 1992, ACM COMPUT SURV, V24, P2
   Lai C. T. R., 1999, SOFTWARE PRODUCT LIN
   Lano K, 2009, UML 2 SEMANTICS APPL
   Linden F.J.D., 2007, SOFTWARE PRODUCT LIN
   Mackworth A., 1977, AI, V8, P1
   Mazo R., 2011, P 6 INT C EV NOV APP
   Myllarniemi V., 2005, KUMBANG CONFIGURATOR
   Object Management Group(OMG), 2010, OMG UN MOD LANG OMG
   OMG, 2009, UML PROF MART MOD AN
   OMG, 2012, OMG OBJ CONSTR LANG
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, DOI 10.1109/TSE.1976.233797
   Perrouin G, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P339
   Petrie C. J., 2012, AUTOMATED CONFIGURAT
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Richters M., 2001, THESIS U BREMEN
   Riebisch M., 2002, EXTENDING FEATURE DI
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Schobbens P. Y., 2007, COMPUT NETW, V51, P2
   Schobbens P. Y., 2006, P 14 IEEE INT REQ EN, P139
   Sinnema M, 2004, LECT NOTES COMPUT SC, V3154, P197
   Stephan M., 2008, ECORE FMP TOOL EDITI
   van der Meer E. R., 2006, P 2006 ACM S APPL CO, P409, DOI 10.1145/1141277.1141370
   van Gurp J., 2001, Proceedings Working IEEE/IFIP Conference on Software Architecture, DOI 10.1109/WICSA.2001.948406
   Xiong Yingfei, 2012, P 34 INT C SOFTW ENG
   Xu L., 2001, COMP STUDY ARC CONSI
NR 55
TC 0
Z9 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 1049-331X
EI 1557-7392
J9 ACM T SOFTW ENG METH
JI ACM Trans. Softw. Eng. Methodol.
PD MAY
PY 2014
VL 23
IS 3
AR 25
DI 10.1145/2581376
PG 43
WC Computer Science, Software Engineering
SC Computer Science
GA AH9EM
UT WOS:000336444200005
ER

PT J
AU Reinhartz-Berger, I
   Sturm, A
AF Reinhartz-Berger, Iris
   Sturm, Arnon
TI Comprehensibility of UML-based software product line specifications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Variability management; Software product line engineering; Domain
   models; Empirical evaluation; UML
ID VARIABILITY; ARCHITECTURE; COMMONALITY; GUIDELINES; SYSTEMS; MODEL
AB Software Product Line Engineering (SPLE) deals with developing artifacts that capture the common and variable aspects of software product families. Domain models are one kind of such artifacts. Being developed in early stages, domain models need to specify commonality and variability and guide the reuse of the artifacts in particular software products. Although different modeling methods have been proposed to manage and support these activities, the assessment of these methods is still in an inceptive stage. In this work, we examined the comprehensibility of domain models specified in ADOM, a UML-based SPLE method. In particular, we conducted a controlled experiment in which 116 undergraduate students were required to answer comprehension questions regarding a domain model that was equipped with explicit reuse guidance and/or variability specification. We found that explicit specification of reuse guidance within the domain model helped understand the model, whereas explicit specification of variability increased comprehensibility only to a limited extent. Explicit specification of both reuse guidance and variability often provided intermediate results, namely, results that were better than specification of variability without reuse guidance, but worse than specification of reuse guidance without variability. All these results were perceived in different UML diagram types, namely, use case, class, and sequence diagrams and for different commonality-, variability-, and reuse-related aspects.
C1 [Reinhartz-Berger, Iris] Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
   [Sturm, Arnon] Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
RP Reinhartz-Berger, I (reprint author), Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
EM iris@is.haifa.ac.il
CR Ahmed F, 2008, INFORM SOFTWARE TECH, V50, P1098, DOI 10.1016/j.infsof.2007.10.013
   Anastasopoulos M, 2001, ACM SIGSOFT SOFTW EN, V26, P109
   Bachmann F., 2005, CMUSEI2005TR012
   Bachmann F, 2004, LECT NOTES COMPUT SC, V3014, P66
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Becker M, 2003, P SOFTW VAR MAN WORK
   Braganca A., 2006, P 10 INT SOFTW PROD, P123
   Buhne S, 2003, P 9 INT WORKSH REQ E, P59
   Burton-Jones A, 2009, J ASSOC INF SYST, V10, P495
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Clauss M., 2001, P WORKSH DOM SPEC VI, P11
   Clements P.C., 2001, SEI SERIES SOFTWARE
   Clotet R, 2008, P 2 INT WORKSH VAR M, P43
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Coriat M, 2000, KLUWER INT SER ENG C, V576, P147
   Czarnecki K, 2005, OOPSLA WORKSH SOFTW
   Denger C, 2006, P 2006 ACM IEEE INT, P184, DOI 10.1145/1159733.1159762
   Djebbi O, 2006, 4 INT WORKSH COMP EV
   GOMAA H., 2004, DESIGNING SOFTWARE P
   Gomaa H, 2002, IEEE INT C ENG COMP, P238, DOI 10.1109/ICECCS.2002.1181517
   Halmans G, 2008, LECT NOTES COMPUT SC, V5074, P109
   Halmans G., 2003, SOFTWARE SYSTEMS MOD, V2, P15, DOI 10.1007/s10270-003-0019-9
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139
   Haugen O, 2005, LECT NOTES COMPUT SC, V3714, P102
   Jacobson I, 1997, SOFTWARE REUSE ARCHI
   John I, 2002, P INT WORKSH REQ ENG, P26
   Junior E. A. Oliveira, 2005, P 2005 C CTR ADV STU, P225
   Kim J, 2000, INFORM SYST RES, V11, P284, DOI 10.1287/isre.11.3.284.12206
   Kim Jintae, 2004, P 11 AS PAC SOFTW EN, P0168
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Korherr B., 2007, P 18 INT C DAT EXP S, P829
   Lazilha FR, 2004, IEEE C INF REUS INT, P112
   Massen T, 2002, P REPL 02, P19
   Matinlassi M, 2004, PROC INT CONF SOFTW, P127, DOI 10.1109/ICSE.2004.1317435
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551
   Morisio M., 2000, Proceedings ASE 2000. Fifteenth IEEE International Conference on Automated Software Engineering, DOI 10.1109/ASE.2000.873688
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Oliveira EA, 2010, J UNIVERS COMPUT SCI, V16, P2374
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Ramesh V, 2002, J DATABASE MANAGE, V13, P3
   Reinhartz-Berger I, 2011, LECT NOTES BUS INF P, V81, P468
   Reinhartz-Berger I, 2011, LECT NOTES COMPUT SC, V6999, P302, DOI 10.1007/978-3-642-24574-9_38
   Reinhartz-Berger I, 2008, J DATABASE MANAGE, V19, P74, DOI 10.4018/jdm.2008010104
   Reinhartz-Berger I, 2009, INFORM SOFTWARE TECH, V51, P1275, DOI 10.1016/j.infsof.2009.03.005
   Riebisch M, 2000, P 5 INT C INT DES PR
   Ripon SH, 2003, MALAYS J COMPUT SCI, V16, P37
   Robak S., 2002, International Journal of Applied Mathematics and Computer Science, V12
   Salicki S, 2002, LECT NOTES COMPUT SC, V2290, P304
   Schmid K., 2011, P 5 WORKSH VAR MOD S, P119, DOI DOI 10.1145/1944892.1944907
   Shanks G, 2003, P 11 EUR C INF SYST, P1775
   Siau K., 2001, Journal of Database Management, V12, DOI 10.4018/jdm.2001010103
   Siau K, 2004, J DATABASE MANAGE, V15, P73, DOI 10.4018/jdm.2004010103
   Sinnema M, 2008, J SYST SOFTWARE, V81, P584, DOI 10.1016/j.jss.2007.06.002
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Song IY, 2001, LNCS, V2224, P368
   Sun CA, 2010, J SYST SOFTWARE, V83, P502, DOI 10.1016/j.jss.2009.10.011
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Webber DL, 2004, SCI COMPUT PROGRAM, V53, P305, DOI 10.1016/j.scico.2003.04.004
   Weiler T, 2003, P SOFTW VAR MAN WORK, P53
   Witte RS, 2009, STATISTICS
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ziadi T., 2006, SOFTWARE PRODUCT LIN, P557, DOI 10.1007/978-3-540-33253-4_15
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
NR 64
TC 0
Z9 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 678
EP 713
DI 10.1007/s10664-012-9234-8
PG 36
WC Computer Science, Software Engineering
SC Computer Science
GA AF0ZA
UT WOS:000334442700008
ER

PT J
AU Heradio, R
   Fernandez-Amoros, D
   Perez-Morago, H
   Adan, A
AF Heradio, Ruben
   Fernandez-Amoros, David
   Perez-Morago, Hector
   Adan, Antonio
TI Speeding up Derivative Configuration from Product Platforms
SO ENTROPY
LA English
DT Article
DE entropy-based heuristic; mass customization; product configuration;
   software product line; feature model
AB To compete in the global marketplace, manufacturers try to differentiate their products by focusing on individual customer needs. Fulfilling this goal requires that companies shift from mass production to mass customization. Under this approach, a generic architecture, named product platform, is designed to support the derivation of customized products through a configuration process that determines which components the product comprises. When a customer configures a derivative, typically not every combination of available components is valid. To guarantee that all dependencies and incompatibilities among the derivative constituent components are satisfied, automated configurators are used. Flexible product platforms provide a big number of interrelated components, and so, the configuration of all, but trivial, derivatives involves considerable effort to select which components the derivative should include. Our approach alleviates that effort by speeding up the derivative configuration using a heuristic based on the information theory concept of entropy.
C1 [Heradio, Ruben; Fernandez-Amoros, David; Perez-Morago, Hector] Univ Nacl Educ Distancia, ETSI Informat, E-28040 Madrid, Spain.
   [Adan, Antonio] Univ Castilla La Mancha, Dept Elect Elect & Control Engn, E-13071 Ciudad Real, Spain.
RP Heradio, R (reprint author), Univ Nacl Educ Distancia, ETSI Informat, Juan del Rosal 16, E-28040 Madrid, Spain.
EM rheradio@issi.uned.es; david@lsi.uned.es; hperez@issi.uned.es;
   Antonio.Adan@uclm.es
FU Spanish Government under the CICYT [DPI-2013-44776-R]; Comunidad de
   Madrid under the RoboCity2030-II excellence research network
   [S2009DPI-1559]
FX This work has been supported by the Spanish Government under the CICYT
   project DPI-2013-44776-R, and the Comunidad de Madrid under the
   RoboCity2030-II excellence research network S2009DPI-1559.
CR Amilhastre J, 2002, ARTIF INTELL, V135, P199, DOI 10.1016/S0004-3702(01)00162-X
   Astesana J.M., 2010, P 22 IEEE INT C TOOL, V1, P68
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   Bessiere C., 2013, PRINCIPLES PRACTICE, V8124, P159
   Biere A., 2009, HDB SATISFIABILITY, P697
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677
   Cambazard H, 2008, LECT NOTES COMPUT SC, V5202, P418, DOI 10.1007/978-3-540-85958-1_28
   Chen S., 2011, P 15 INT SOFTW PROD, P35
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, DOI 10.1145/800157.805047
   Czarnecki K, 2012, P 6 INT WORKSH VAR M, P173, DOI DOI 10.1145/2110147.2110167
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Gange G.K., 2012, THESIS U MELBOURNE M
   Hansen E.R., 2007, P 22 NAT C ART INT V
   Hebrard E., 2005, P 20 NAT C ART INT 1
   Hegedus A., 2011, P 26 INT C AUT SOFTW, P173
   Huth M., 2004, LOGIC COMPUTER SCI M, VSecond
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Janota M., 2010, THESIS U COLL DUBLIN
   Jensen R.M., 2004, P 10 INT C PRINC PRA
   Junker U, 2006, FOUND ARTIF INTELL, P837
   Kang K., 1990, CMUSEI90TR21
   Kroer C., 2012, THESIS IT U COPENHAG
   Kubler A., 2010, P 1 INT WORKSH LOG C, P44
   Lau S. Q., 2006, THESIS U WATERLOO WA
   Mazo R., 2014, RECOMMENDATION SYSTE
   Mendonca M., 2009, THESIS U WATERLOO WA
   Narodytska N, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P149
   O'Sullivan B, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1531
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Pil FK, 2004, INTERFACES, V34, P394, DOI 10.1287/inte.1040.0092
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Queva M., 2011, THESIS TU DENMARK KO
   Sabin D, 1998, IEEE INTELL SYST APP, V13, P42, DOI 10.1109/5254.708432
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   SHANNON CE, 1948, AT&T TECH J, V27, P623
   Siegmund N., 2011, SOFTW QUAL J, V20, P487
   Simpson T.W., 2005, PRODUCT PLATFORM PRO
   Sinz C, 2007, IEEE INTELL SYST, V22, P78, DOI 10.1109/MIS.2007.6
   Software Productivity Consortium Services Corporation, 1993, SPC92019CMC
   Soltani S., 2011, P ASE LAWR KS US, P536
   Steinberg L, 1980, P 1 ANN NAT C ART IN
   Thum T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Van Nimwegen C., 2006, P SIGCHI C HUM FACT, P917, DOI 10.1145/1124772.1124908
   White J, 2010, J SYST SOFTWARE, V83, P1094, DOI 10.1016/j.jss.2010.02.017
   White J., 2009, P 13 INT SOFTW PROD, P11
NR 45
TC 0
Z9 0
PU MDPI AG
PI BASEL
PA POSTFACH, CH-4005 BASEL, SWITZERLAND
SN 1099-4300
J9 ENTROPY-SWITZ
JI Entropy
PD JUN
PY 2014
VL 16
IS 6
BP 3329
EP 3356
DI 10.3390/e16063329
PG 28
WC Physics, Multidisciplinary
SC Physics
GA AK6NV
UT WOS:000338545300021
ER

PT J
AU Gonzalez, A
   Luna, C
   Zorzan, F
   Szasz, N
AF Gonzalez, A.
   Luna, C.
   Zorzan, F.
   Szasz, N.
TI Automatic Derivation of Behavior of Products in a Software Product Line
SO IEEE LATIN AMERICA TRANSACTIONS
LA Portuguese
DT Article
DE State Machines; Software Product Lines; QVT; Feature Models
ID MODEL-DRIVEN DEVELOPMENT; VARIABILITY MANAGEMENT
AB Models and model transformations constitute the basis of a set of software development techniques known as Model-Driven Development. In this context, UML State Machines have great potential for modeling the behavior of systems. In this work we are concerned with modeling the behavior of Product Lines, and their individual products. We present a process for deriving automatically a UML State Machine that models the behavior of a specific product from the UML model of a product line, via a model transformation based on Query/View/Transformation. The process directly involves the use of Feature Models in order to determine which elements of a (extended) State Machine describing a product family, will remain in the instantiation.
C1 [Gonzalez, A.; Zorzan, F.] Univ Nacl Rio Cuarto, Rio Cuarto, Argentina.
   [Luna, C.] Univ Republica, Fac Ingn, Montevideo, Uruguay.
   [Szasz, N.] Univ ORT Uruguay, Montevideo, Uruguay.
RP Gonzalez, A (reprint author), Univ Nacl Rio Cuarto, Rio Cuarto, Argentina.
EM agonzalez@dc.exa.unrc.edu.ar; cluna@fing.edu.uy;
   fzorzan@dc.exa.unrc.edu.ar; szasz@ort.edu.uy
CR [Anonymous], 2011, MET OBJ FAC MOF 2 0
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bosch J, 2004, PROC INT CONF SOFTW, P720, DOI 10.1109/ICSE.2004.1317504
   Botterweck G., 2009, LNI, V143, P177
   Cengarle M. V., 2006, ELECT NOTES THEORETI, V160, P141, DOI 10.1016/j.entcs.2006.05.020
   Chen L., 2009, SPLC 2009, P81
   Chen LP, 2010, LECT NOTES COMPUT SC, V6287, P166
   Clauss M., 2001, P WORKSH DOM SPEC VI, P11
   Clements P.C., 2001, SEI SERIES SOFTWARE
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K., 2005, OOPSLA 05, P126
   Fernandes P, 2011, J UNIVERS COMPUT SCI, V17, P807
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Gomaa H, 2006, LECT NOTES COMPUT SC, V4039, P440
   Gonzalez A., 2008, SCCC, P32
   Gonzalez A., 2013, P 16 IB AM C SOFTW E, P103
   Gonzalez A., 2009, EPTCS, V15, P44
   Gonzalez A., 2011, P C LAT INF CLEI 11, P479
   Gonzalez A., 2012, THESIS PEDECIBA INF
   Groher I, 2009, LECT NOTES COMPUT SC, V5560, P111, DOI 10.1007/978-3-642-03764-1_4
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Heidenreich F, 2010, LECT NOTES COMPUT SC, V6210, P69
   Laguna M. A., 2007, JISBD, P157
   Laguna M. A., 2008, WER
   Laguna M. A., 2007, P C LAT INF CLEI 07
   Mellor SJ, 2003, IEEE SOFTWARE, V20, P14, DOI 10.1109/MS.2003.1231145
   OMG, 2011, OMG UN MOD LANG OMG
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Schaefer I., 2009, MODEL DRIVEN APPROAC
   Schmid K., 2011, P 5 WORKSH VAR MOD S, P119, DOI DOI 10.1145/1944892.1944907
   Selic B, 2003, IEEE SOFTWARE, V20, P19, DOI 10.1109/MS.2003.1231146
   Szasz N., 2008, VAMOS 08, P131
   Tawhid R, 2011, 2011 IEEE International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing Workshops, DOI 10.1109/ISORCW.2011.18
   Vilanova P., 2011, THESIS PEDECIBA INF
   Voelter M, 2006, MODEL DRIVEN SOFTWAR
   Ziadi T., 2004, P UML2004 WORKSH SOF
   Zito A, 2006, LECT NOTES COMPUT SC, V4199, P185
NR 37
TC 0
Z9 0
PU IEEE-INST ELECTRICAL ELECTRONICS ENGINEERS INC
PI PISCATAWAY
PA 445 HOES LANE, PISCATAWAY, NJ 08855-4141 USA
SN 1548-0992
J9 IEEE LAT AM T
JI IEEE Latin Am. Trans.
PD SEP
PY 2014
VL 12
IS 6
BP 1120
EP 1126
PG 7
WC Computer Science, Information Systems; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA AP4NV
UT WOS:000342055200024
ER

PT J
AU Hegarty, P
   O'Leary, E
   Dineen, D
   Bustard, D
   Moore, A
AF Hegarty, Paraic
   O'Leary, Eoghan
   Dineen, Danny
   Bustard, David
   Moore, Adrian
TI Transition to a product line infrastructure: experience at Akari
   Software
SO JOURNAL OF SOFTWARE-EVOLUTION AND PROCESS
LA English
DT Article
DE process transition; software product line; agile software development;
   localisation
ID VARIABILITY
AB Akari Software offers a family of software products supporting curriculum management in higher education. The work started with one specific commission, but within 4years, a small product suite had been developed, with ten organisations using customised variants of those products. In effect, a product family had been created but without the underlying structure and processes needed to ensure the efficient creation and maintenance of variants. This is a common issue faced by software companies as their product range expands. In 2010, Akari began making internal changes to develop a product range infrastructure that was suitable both for its existing products and its plans for future growth. The purpose of this paper is to describe the product line transition that occurred, both to share the experience involved and to identify a number of general lessons learned. The work was supported by a FUSION project, funded by InterTradeIreland, undertaken in collaboration with the University of Ulster. Copyright (c) 2014 John Wiley & Sons, Ltd.
C1 [Hegarty, Paraic; O'Leary, Eoghan; Dineen, Danny] Akari Software, Cork, Ireland.
   [Bustard, David; Moore, Adrian] Univ Ulster, Coleraine BT52 1SA, Londonderry, North Ireland.
RP Hegarty, P (reprint author), Akari Software, Cork, Ireland.
EM phegarty@akarisoftware.com
FU Akari Software; University of Ulster
FX The work described in this paper was initiated and partly supported by
   an IntertradeIreland FUSION project between Akari Software and the
   University of Ulster.
CR Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Boehm B., 2004, P 2004 INT S EMP SOF, P156, DOI 10.1109/ISESE.2004.1334903
   Bustard David, 2013, Innovations in Systems and Software Engineering, V9, DOI 10.1007/s11334-013-0216-9
   Clements P, 2002, SOFTWARE PRODUCT LIN
   Hanssen GK, 2011, SOFTWARE PRACT EXPER, V41, P883, DOI 10.1002/spe.1064
   ISO/IEC, 2013, 26550 ISOIEC FDIS
   Kircher M., 2006, 10th International Software Product Line Conference
   Ladas C., 2009, SCRUMBAN ESSAYS KANB
   Lamancha BP, 2009, ICSOFT 2009: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 1, P23
   McGregor J., 2001, 630 SOFTW ENG I
   Metzger A, 2007, PROC INT CONF SOFTW, P186, DOI 10.1109/ICSECOMPANION.2007.83
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Pohl K, 2006, COMMUN ACM, V49, P78, DOI 10.1145/1183236.1183271
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Schwaber K., 2009, AGILE PROJECT MANAGE
   van der Linden F., 2007, SOFTWARE PRODUCT LIN
   West D., 2010, AGILE DEV MAINSTREAM
   Zhang G., 2011, 27 IEEE INT C SOFTW, P418
NR 18
TC 0
Z9 0
PU WILEY-BLACKWELL
PI HOBOKEN
PA 111 RIVER ST, HOBOKEN 07030-5774, NJ USA
SN 2047-7473
EI 2047-7481
J9 J SOFTW-EVOL PROC
JI J. Softw.-Evol. Proc.
PD SEP
PY 2014
VL 26
IS 9
SI SI
BP 784
EP 790
DI 10.1002/smr.1663
PG 7
WC Computer Science, Software Engineering
SC Computer Science
GA AQ5EP
UT WOS:000342829400003
ER

PT J
AU da Silva, IF
   Neto, PADS
   O'Leary, P
   de Almeida, ES
   Meira, SRD
AF da Silva, Ivonei Freitas
   Silveira Neto, Paulo Anselmo da Mota
   O'Leary, Padraig
   de Almeida, Eduardo Santana
   de Lemos Meira, Silvio Romero
TI Using a multi-method approach to understand Agile software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Agile; Software product lines; Multi-method approach; Case study;
   Mapping study; Expert opinion
AB Context: Software product lines (SPLs) and Agile are approaches that share similar objectives. The main difference is the way in which these objectives are met. Typically evidence on what activities of Agile and SPL can be combined and how they can be integrated stems from different research methods performed separately. The generalizability of this evidence is low, as the research topic is still relatively new and previous studies have been conducted using only one research method.
   Objective: This study aims to increase understanding of Agile SPL and improve the generalizability of the identified evidence through the use of a multi-method approach.
   Method: Our multi-method research combines three complementary methods (Mapping Study, Case Study and Expert Opinion) to consolidate the evidence.
   Results: This combination results in 23 findings that provide evidence on how Agile and SPL could be combined.
   Conclusion: Although multi-method research is time consuming and requires a high degree of effort to plan, design, and perform, it helps to increase the understanding on Agile SPL and leads to more generalizable evidence. The findings confirm a synergy between Agile and SPL and serve to improve the body of evidence in Agile SPL. When researchers and practitioners develop new Agile SPL approaches, it will be important to consider these synergies. (C) 2014 Elsevier B.V. All rights reserved.
C1 [da Silva, Ivonei Freitas; de Lemos Meira, Silvio Romero] Univ Fed Pernambuco, Recife, PE, Brazil.
   [de Almeida, Eduardo Santana] Univ Fed Bahia, Salvador, BA, Brazil.
   [da Silva, Ivonei Freitas; Silveira Neto, Paulo Anselmo da Mota; de Almeida, Eduardo Santana; de Lemos Meira, Silvio Romero] Fraunhofer Project Ctr Software & Syst Engn, Salvador, BA, Brazil.
   [O'Leary, Padraig] Univ Limerick, Irish Software Engn Res Ctr, Lero, Limerick, Ireland.
   [O'Leary, Padraig] Univ Limerick, Ctr Appl Res Connected Hlth, ARCH, Limerick, Ireland.
   [da Silva, Ivonei Freitas] Western Parana State Univ, Cascavel, Parana, Brazil.
RP da Silva, IF (reprint author), Western Parana State Univ, Cascavel, Parana, Brazil.
EM ifs3@cin.ufpe.br; pamsn@rise.com.br; padraigoleary@ul.ie;
   esa@dcc.ufba.br; srlm@cin.ufpe.br
FU National Institute of Science and Technology for Software Engineering
   (INES<SUP>1</SUP>) - CNPq; FACEPE [573964/2008-4, APQ-1037-1.03/08];
   CNPq [305968/2010-6, 559997/2010-8, 474766/2010-1]; FAPESB
FX This work was partially supported by the National Institute of Science
   and Technology for Software Engineering (INES<SUP>1</SUP>), funded by
   CNPq and FACEPE, grants 573964/2008-4 and APQ-1037-1.03/08 and CNPq
   grants 305968/2010-6, 559997/2010-8, 474766/2010-1 and FAPESB.
CR Babar M.A., SPLC 09 P 13 INT SOF, P171
   Balbino M., 23 INT C SOFTW ENG K
   Basili VR, 2007, LECT NOTES COMPUT SC, V4336, P33
   Beck K, 2004, EXTREME PROGRAMMING, V2nd
   Beck K., 2001, MANIFESTO AGILE SOFT
   Beck K., 2002, TEST DRIVEN DEV EXAM
   Bosch J, 2001, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2001.919084
   Bratthall L., 2002, Empirical Software Engineering, V7, DOI 10.1023/A:1014866909191
   Brewer J., 1989, MULTIMETHOD RES SYNT
   Brooks A., 1996, REPLICATION EXPT RES
   Brooks A., 1989, NUREG1150 US NUCL RE
   Carbon D. M. R., P 1 INT WORKSH AG PR
   Carbon R., 2008, PROVIDING FEEDBACK A
   Ciolkowski M., ESERNET 03, P104
   CLEMEN RT, 1985, OPER RES, V33, P427, DOI 10.1287/opre.33.2.427
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Conboy K, 2011, INFORM SOFTWARE TECH, V53, P535, DOI 10.1016/j.infsof.2010.10.007
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   da Silva IF, 2014, J SYST SOFTWARE, V88, P189, DOI 10.1016/j.jss.2013.10.040
   da Silva IF, 2011, SOFTWARE PRACT EXPER, V41, P899, DOI 10.1002/spe.1078
   Diaz J, 2011, SOFTWARE PRACT EXPER, V41, P921, DOI 10.1002/spe.1087
   Dyba T., 2000, Empirical Software Engineering, V5, DOI 10.1023/A:1009800404137
   e Amin F., 2010, SIGSOFT SOFTW ENG NO, V35, P1
   Feng K., 2008, THESIS U TEXAS DALLA
   Fink A., 2003, SURVEY KIT SURVEY HD
   Fraser S, 2010, LECT NOTES BUS INF, V48, P410
   Gathers R., 1992, CHOOSING INFORM SYST
   Ghanam Y., AG 10 P INT C AG MET, P27
   Ghanam Y, 2010, LECT NOTES COMPUT SC, V6287, P211, DOI 10.1007/978-3-642-15579-6_15
   Ghanam Y, 2009, AGILE 2009 CONFERENCE, P41, DOI 10.1109/AGILE.2009.12
   Ghanam Y., 12 INT SOFTW PROD LI, P377
   Gilb T, 1988, PRINCIPLES SOFTWARE
   Gill J., 2010, RES METHODS MANAGERS, V4th
   Gylterud S., 2009, THESIS NORWEGIAN U S
   Hanssen GK, 2008, J SYST SOFTWARE, V81, P843, DOI 10.1016/j.jss.2007.10.025
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Ishikawa M, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P567, DOI 10.1109/APSEC.2004.93
   Kakarontzas G, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MODELLING CONTROL & AUTOMATION, VOLS 1 AND 2, P146, DOI 10.1109/CIMCA.2008.84
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kitchenham B., 2007, 2007001 EBSE KEEL U
   Kitchenham B.A., 2008, GUIDE ADV EMPIRICAL, P63, DOI 10.1007/978-1-84800-044-5_3
   Kurmann R., 2006, APLE 06 P 1 INT WORK
   Larman C., 2008, SCALING LEAN AGILE D
   Li M, 2003, IEEE T SOFTWARE ENG, V29, P811
   Lundell B., 2008, INT SOFTW PROD LIN C, P387
   Miles M. B., 1994, QUALITATIVE DATA ANA
   Mohan K, 2010, IEEE SOFTWARE, V27, P48, DOI 10.1109/MS.2010.31
   Nakakoji K, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P827
   Navarrete P. B. F., P APLE 1 INT WORKSH, P1
   Neiva D. F. S., 11 IEEE INT C INF RE
   Noor MA, 2008, J SYST SOFTWARE, V81, P868, DOI 10.1016/j.jss.2007.10.028
   Noor M. A., APLE 1 INT WORKSH AG
   O'Leary P, 2012, J SOFTW-EVOL PROC, V24, P561, DOI 10.1002/smr.498
   OLEARY P, 2012, SOFTW IET, V6, P423
   Paige RF, 2006, LECT NOTES COMPUT SC, V4044, P198
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   Patton M.Q., 2001, QUALITATIVE EVALUATI, V3
   Petersen K, 2011, SOFTWARE PRACT EXPER, V41, P975, DOI 10.1002/spe.975
   Petersen K., EASE 08 P 12 INT C E
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Poppendieck M., 2005, INTRO LEAN SOFTWARE, V3556
   Riegger F., 2010, THESIS HOCHSCHULE MA
   Rodgers M, 2009, EVALUATION, V15, P49, DOI DOI 10.1177/1356389008097871
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber K, 2004, AGILE PROJECT MANAGE
   Stapleton J. D, 2003, CONSORTIUM DSDM BUSI
   Sterman J., 2000, BUSINESS DYNAMICS
   Strauss A. L., 1990, BASICS QUALITATIVE R
   Thurimella AK, 2013, J SYST SOFTWARE, V86, P1831, DOI 10.1016/j.jss.2013.01.038
   Tian K., 2006, APLE 06 P 1 INT WORK
   Tourret R., 2006, THESIS U YORK
   Version-One, 2011, STAT AG DEV VERS ON
   Walsham G., 1993, INTERPRETING INFORM
   Wang Y., 2010, P 32 ACM IEEE INT C, V2, P39, DOI 10.1145/1810295.1810302
   Weinberg G. M., 1992, QUALITY SOFTWARE MAN
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
   Yin R. K., 2003, CASE STUDY RES DESIG, V5
NR 78
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 527
EP 542
DI 10.1016/j.infsof.2014.06.004
PG 16
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA AU9YI
UT WOS:000345947500030
ER

PT J
AU Gonzalez-Huerta, J
   Insfran, E
   Abrahao, S
   Scanniello, G
AF Gonzalez-Huerta, Javier
   Insfran, Emilio
   Abrahao, Silvia
   Scanniello, Giuseppe
TI Validating a model-driven software architecture evaluation and
   improvement method: A family of experiments
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software architectures; Software architecture evaluation methods;
   Quality attributes; ATAM; Family of experiments; Meta-analysis
ID PERCEIVED EASE; REQUIREMENTS; TECHNOLOGY; ACCEPTANCE; KNOWLEDGE; ISSUES
AB Context: Software architectures should be evaluated during the early stages of software development in order to verify whether the non-functional requirements (NFRs) of the product can be fulfilled. This activity is even more crucial in software product line (SPL) development, since it is also necessary to identify whether the NFRs of a particular product can be achieved by exercising the variation mechanisms provided by the product line architecture or whether additional transformations are required. These issues have motivated us to propose QuaDAI, a method for the derivation, evaluation and improvement of software architectures in model-driven SPL development.
   Objective: We present in this paper the results of a family of four experiments carried out to empirically validate the evaluation and improvement strategy of QuaDAI.
   Method: The family of experiments was carried out by 92 participants: Computer Science Master's and undergraduate students from Spain and Italy. The goal was to compare the effectiveness, efficiency, perceived ease of use, perceived usefulness and intention to use with regard to participants using the evaluation and improvement strategy of QuaDAI as opposed to the Architecture Tradeoff Analysis Method (ATAM).
   Results: The main result was that the participants produced their best results when applying QuaDAI, signifying that the participants obtained architectures with better values for the NFRs faster, and that they found the method easier to use, more useful and more likely to be used. The results of the meta-analysis carried out to aggregate the results obtained in the individual experiments also confirmed these results.
   Conclusions: The results support the hypothesis that QuaDAI would achieve better results than ATAM in the experiments and that QuaDAI can be considered as a promising approach with which to perform architectural evaluations that occur after the product architecture derivation in model-driven SPL development processes when carried out by novice software evaluators. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Gonzalez-Huerta, Javier; Insfran, Emilio; Abrahao, Silvia] Univ Politecn Valencia, Dept Informat Syst & Computat, E-46071 Valencia, Spain.
   [Scanniello, Giuseppe] Univ Basilicata, DiMIE, I-85100 Potenza, Italy.
RP Gonzalez-Huerta, J (reprint author), Univ Politecn Valencia, Dept Informat Syst & Computat, E-46071 Valencia, Spain.
EM jagonzalez@dsic.upv.es
RI Scanniello, Giuseppe/
OI Scanniello, Giuseppe/0000-0003-0024-7508
FU MULTIPLE Project (MICINN) [TIN2009-13838]; ValI+D Program
   [ACIF/2011/235]
FX The authors would like to thank all the participants in the experiments
   for their selfless involvement in this research. This research is
   supported by the MULTIPLE Project (MICINN TIN2009-13838) and the ValI+D
   Program (ACIF/2011/235).
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Ali-Babar M., 2008, 12 INT C EV ASS SOFT
   Ali-Babar M., 2007, 11 INT C EV ASS SOFT, P12
   Ali-Babar M., 2007, 1 INT S EMP SOFTW EN, P430
   Ali-Babar M., 2007, EMPIR SOFTW ENG, V13, P39
   Ali-Babar M., 2004, 15 AUSTR SOFTW ENG C, P13
   Ali-Babar M., 2004, 11 AS PAC SOFTW ENG, P600
   Ali-Babar M., 2011, EMPIR SOFTW ENG, V16, P539
   [Anonymous], 2005, 250002005 ISO IEC
   Barbacci M., 2003, CMUSEI2003TN012
   Barkmeyer E.J., 2003, 6928 NISTIR US DEP C
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bosch J, 2000, DESIGN USE SOFTWARE
   Botterweck G., 2007, 22 INT C AUT SOFTW E, P469
   Breivold HP, 2012, INFORM SOFTWARE TECH, V54, P16, DOI 10.1016/j.infsof.2011.06.002
   Broy M., 2006, 28th International Conference on Software Engineering Proceedings, DOI 10.1145/1134285.1134292
   Buschmann F, 1996, PATTERN ORIENTED SOF
   Ciolkowski M., 2002, 6 INT C EMP ASS SOFT, P48
   Clements P., 2011, DOCUMENTING SOFTWARE
   Clements P., 2007, SOFTWARE PRODUCT LIN
   Clements P., 2002, EVALUATING SOFTWARE
   Conover WJ, 1998, PRACTICAL NONPARAMET, V3rd
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Datorro J., 2005, CONVEX OPTIMIZATION
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Douglass B. P., 2002, REAL TIME DESIGN PAT
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Etxeberria L, 2005, LECT NOTES COMPUT SC, V3714, P174
   Falessi D, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P189, DOI 10.1109/WICSA.2008.8
   Falessi D, 2010, EMPIR SOFTW ENG, V15, P250, DOI 10.1007/s10664-009-9121-0
   Falessi D., 2008, 3 INT WORKSH SHAR RE, P63
   Feiler P. H., 2006, CMUSEI2006TN011
   Flinn J, 2002, INT CON DISTR COMP S, P217
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Glass G. V., 1981, METAANALYSIS SOCIAL
   Golden E., 2005, 27th International Conference on Software Engineering (IEEE Cat. No. 05CH37673)
   Gonzalez-Huerta J., 2013, 18 NAT C SOFTW ENG D, P427
   Gonzalez-Huerta J., 2013, 22 INT C INF SYST DE
   Gonzalez-Huerta J., 2014, THESIS U POLITECNICA
   GONZALEZHUERTA J, 2013, 16 INT C MOD DRIV EN, V8107, P388
   Gonzalez-Huerta J., 2012, 4 INT WORKSH NONFUNC, P63
   Host M., 2000, 4 C EMP ASS EV SOFTW, P201
   Hu PJ., 1999, MANAGE INFORM SYST, V16, P91
   Hunter J., 1982, METAANALYSIS CUMULAT
   Juristo N., 2001, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kazman R., 2000, CMUSEI2000TR004
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Martens A, 2011, EMPIR SOFTW ENG, V16, P587, DOI 10.1007/s10664-010-9142-8
   Martensson F., 2006, THESIS BLEKINGE I TE
   Maxwell K., 2002, SOFTWARE QUALITY I S
   MCGREGOR JD, 2010, TESTING SOFTWARE PRO, V6153, P104, DOI 10.1007/978-3-642-14335-9_4
   Microsoft MSDN, 2003, PERF REL PATT VERS 1
   Mullen B., 1985, BASIC METAANALYSIS P
   Niemela E, 2007, INFORM SOFTWARE TECH, V49, P1107, DOI 10.1016/j.infsof.2006.11.003
   Object Management Group, 2012, COMM VAR LANG CVL
   Perla Rocco J., 2007, J SOCIAL SCI, V3, P106, DOI DOI 10.3844/JSSP.2007.106.116
   PEROVICH D, 2009, IEEE IFIP EUR C SOFT, P201
   Qureshi N., 2013, 17 INT C EV ASS SOFT, P97
   Reijonen V., 2010, 4 EUR C SOFTW ARCH, P214
   Roos-Frantz F., 2011, SOFTW QUAL J, V20, P519
   Roy B., 2008, 2008545 QUEENS U
   Ryu D., 2012, 11 INT C COMP INF SC, P559
   Schwarzer R., 1987, METAANALYSIS PROGRAM
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Siegmund N., 2011, 15 INT SOFTW PROD LI, P160
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Svahnberg M, 2007, J SYST SOFTWARE, V80, P1893, DOI 10.1016/j.jss.2007.01.050
   Taher L., 2005, 2 INT C INN INF TECH, P1
   Vegas S., 2006, P INT S EMP SOFTW EN, P28, DOI 10.1145/1159733.1159741
   Venkatesh V, 2000, INFORM SYST RES, V11, P342, DOI 10.1287/isre.11.4.342.11872
   von Rhein A., 2013, 7 INT WORKSH VAR MOD
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 76
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JAN
PY 2015
VL 57
BP 405
EP 429
DI 10.1016/j.infsof.2014.05.018
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA AU9YI
UT WOS:000345947500024
ER

PT J
AU Bettini, L
   Damiani, F
   Schaefer, I
AF Bettini, Lorenzo
   Damiani, Ferruccio
   Schaefer, Ina
TI Implementing type-safe software product lines using parametric traits
SO SCIENCE OF COMPUTER PROGRAMMING
LA English
DT Article
DE Featherweight Java; Feature model; Software product line; Trait; Type
   system
ID JAVA-LIKE LANGUAGES; MINIMAL CORE CALCULUS; FEATHERWEIGHT JIGSAW;
   INHERITANCE
AB A software product line (SPL) is a set of related software systems with well-defined commonality and variability that are developed by reusing common artifacts. In this paper, we present a novel technique for implementing SPLs by exploiting mechanisms for fine-grained reuse which are orthogonal to class-based inheritance. In our approach the concepts of type, behavior, and state are separated into different and orthogonal linguistic concepts: interfaces, traits and classes, respectively. We formalize our proposal by means Of FEATHERWEIGHT PARAMETRIC TRAIT JAVA (FPTJ), a minimal core calculus where units of product functionality are modeled by parametric traits. Traits are a well-known construct for fine-grained reuse of behavior. Parametric traits are traits parameterized by interface names and class names. Parametric traits are applied to interface names and class names to generate traits that can be assembled in other (possibly parametric) traits or in classes that are used to build products. The composition of product functionality is realized by explicit operators of the calculus, allowing code manipulations for modeling product variability. The FPTJ type system ensures that the products in the SPL are type-safe by inspecting the parametric traits and classes shared by different products only once. Therefore, type-safety of an extension of a (type-safe) FPTJ SPL can be guaranteed by inspecting only the newly added parts. (C) 2013 Elsevier B.V. All rights reserved.
C1 [Bettini, Lorenzo; Damiani, Ferruccio] Univ Turin, Dipartimento Informat, I-10124 Turin, Italy.
   [Schaefer, Ina] Tech Univ Carolo Wilhelmina Braunschweig, Inst Software Engn & Automot Informat, Braunschweig, Germany.
RP Damiani, F (reprint author), Univ Turin, Dipartimento Informat, I-10124 Turin, Italy.
EM damiani@di.unito.it
RI Damiani, Ferruccio/D-2383-2011
OI Damiani, Ferruccio/0000-0001-8109-1706
FU MIUR (proj. DISCO); MIUR (proj. CINA); Ateneo/CSP (proj. SALT); Ateneo
   Italo-Tedesco/Deutsch-Italienisches Hochschulzentrum (Vigoni project
   "Language constructs and type systems for object oriented program
   components"); Deutsche Forschungsgemeinschaft [SCHA1635/2-1]; EU project
   [FP7-231620 HATS]
FX This work has been partially supported by MIUR (proj. DISCO and proj.
   CINA) and Ateneo/CSP (proj. SALT). The authors of this work have been
   partially supported by the Ateneo Italo-Tedesco/Deutsch-Italienisches
   Hochschulzentrum (Vigoni project "Language constructs and type systems
   for object oriented program components"), the Deutsche
   Forschungsgemeinschaft (proj. SCHA1635/2-1) and the EU project
   FP7-231620 HATS. The authors are listed in alphabetical order.
CR Allen E., 2008, FORTRESS LANAGUAGE S
   Ancona D, 2005, ACM SIGPLAN NOTICES, V40, P26, DOI 10.1145/1047659.1040308
   Ancona D, 2003, ACM T PROGR LANG SYS, V25, P641, DOI 10.1145/937563.937567
   Apel S, 2010, AUTOMAT SOFTW ENG, V17, P251, DOI 10.1007/s10515-010-0066-8
   Apel S, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P101
   Bassett P.G., 1997, FRAMING SOFTWARE REU
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Batory D, 2003, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2003.1201199
   Bergel A, 2008, COMPUT LANG SYST STR, V34, P83, DOI 10.1016/j.cl.2007.05.003
   Bettini L., 2013, P PRINC PRACT PROGR
   Bettini L, 2013, ACTA INFORM, V50, P77, DOI 10.1007/s00236-012-0173-z
   Bettini L, 2013, SCI COMPUT PROGRAM, V78, P218, DOI 10.1016/j.scico.2011.10.006
   Bettini L, 2013, SCI COMPUT PROGRAM, V78, P907, DOI 10.1016/j.scico.2012.11.003
   Bettini L, 2013, SCI COMPUT PROGRAM, V78, P521, DOI 10.1016/j.scico.2011.06.007
   Bettini L., 2010, P 2010 ACM S APPL CO, P2096, DOI DOI 10.1145/1774088.1774530
   Black AP, 2003, ACM SIGPLAN NOTICES, V38, P47, DOI 10.1145/949343.949311
   Bono V, 2008, INT FED INFO PROC, V273, P367
   Bono V., 2007, P FORM TECHN JAV LIK
   Bracha G., 1992, THESIS U UTAH
   BRACHA G, 1990, SIGPLAN NOTICES, V25, P303
   Cassou D., 2007, ICDL, P50
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Cook W., 1990, P 17 ACM S PRINC PRO, P125, DOI 10.1145/96709.96721
   Cook W.R., 1991, LECTURE NOTES COMPUT, V489, P151
   Damiani F., 2013, FORM ASP COMPUT, P1
   Damiani F, 2012, P16 INT SOFTW PROD L, V2, P53
   Damiani F., 2011, P FORM TECHN JAV LIK
   Delaware B, 2009, FOAL09: FOUNDATIONS OF ASPECT-ORIENTED LANGUAGES, P31
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   Ernst E., 2008, EXPRESSION PROBLEM S
   Ernst E, 1999, LECT NOTES COMPUT SC, V1628, P67
   Flatt M., 1998, POPL 98 25 ACM SIGPL, P171, DOI 10.1145/268946.268961
   Hahnle R., 2012, LECT NOTES COMPUTER, V7609, P32
   Igarashi A, 2001, ACM T PROGR LANG SYS, V23, P396, DOI 10.1145/503502.503505
   Kang K., 1990, TECHNICAL REPORT
   Kastner C., 2008, P INT C AUT SOFTW EN, P258
   Kastner C., 2007, P INT SOFTW PROD LIN, P223
   Kastner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   Lagorio G., 2009, EL P FDN OBJ OR LANG
   Lagorio G, 2012, INFORM COMPUT, V214, P86, DOI 10.1016/j.ic.2012.02.004
   Lagorio G, 2009, LECT NOTES COMPUT SC, V5653, P244, DOI 10.1007/978-3-642-03013-0_12
   Limberghen M., 1996, OBJECT ORIENTED SYST, V3, P1
   Liquori L, 2008, THEOR COMPUT SCI, V398, P243, DOI 10.1016/j.tcs.2008.01.051
   Liquori L., 2008, ACM T PROGRAM LANG S, V30
   Lopez-Herrejon RE, 2005, LECT NOTES COMPUT SC, V3586, P169
   Loughran N, 2004, LECT NOTES COMPUT SC, V3107, P127
   Meyer B., 1997, OBJECT ORIENTED SOFT, V2nd
   Mikhajlov L., 1998, LECT NOTES COMPUTER, V1445, P355
   Murphy-Hill E.R., 2005, P INT C OBJ OR PROGR, P282
   Nierstrasz O, 2006, J OBJECT TECHNOLOGY, V5, P129
   Odersky M., 2005, EL P FDN OBJ OR LANG
   Odersky M., 2007, TECHNICAL REPORT
   Pierce Benjamin, 2002, TYPES PROGRAMMING LA
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Quitslund P.J., 2004, OOPSLA WORKSH ECL TE, P37
   Reppy J, 2007, LECT NOTES COMPUT SC, V4609, P373
   Reppy J., 2006, EL P FOOL WOOD
   Schaefer I., 2010, P 2 INT WORKSH FEAT, P49, DOI DOI 10.1145/1868688.1868696
   Schaefer I., 2011, P INT C ASP OR SOFTW, P43, DOI DOI 10.1145/1960275.1960283
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Scharli N, 2003, LECT NOTES COMPUT SC, V2743, P248
   Schwerhoff M., 2010, VERIFYING SCALA TRAI
   Smaragdakis Y, 2002, ACM T SOFTW ENG METH, V11, P215, DOI 10.1145/505145.505148
   Smith C, 2005, LECT NOTES COMPUT SC, V3586, P453
   SNYDER A, 1986, SIGPLAN NOTICES, V21, P38
   Strnisa R, 2007, ACM SIGPLAN NOTICES, V42, P499, DOI 10.1145/1297105.1297064
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), DOI 10.1109/ICSE.1999.841000
   Thaker S., 2007, P INT C GEN PROGR CO, P95, DOI DOI 10.1145/1289971.1289989
   Thiim T., 2012, P GEN PROGR COMP ENG, P11
   Torgersen M, 2004, LECT NOTES COMPUT SC, V3086, P123
   Ungar D., 1991, LISP and Symbolic Computation, V4, DOI 10.1007/BF01806107
NR 72
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0167-6423
EI 1872-7964
J9 SCI COMPUT PROGRAM
JI Sci. Comput. Program.
PD JAN 1
PY 2015
VL 97
BP 282
EP 308
DI 10.1016/j.scico.2013.07.016
PN 3
PG 27
WC Computer Science, Software Engineering
SC Computer Science
GA AW8YN
UT WOS:000346545300002
ER

PT J
AU Lamancha, BP
   Polo, M
   Piattini, M
AF Perez Lamancha, Beatriz
   Polo, Macario
   Piattini, Mario
TI PROW: A Pairwise algorithm with constRaints, Order and Weight
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software testing; Combinatorial testing
ID COMBINATORIAL DESIGN; TEST-GENERATION; SYSTEM; TOOL
AB Testing systems with many variables and/or values is often quite expensive due to the huge number of possible combinations to be tested. There are several criteria available to combine test data and produce scalable test suites. One of them is pairwise. With the pairwise criterion, each pair of values of any two parameters is included in at least one test case. Although this is a widely-used coverage criterion, two main characteristics improve considerably pairwise: constraints handling and prioritisation.
   This paper presents an algorithm and a tool. The algorithm (called PROW: Pairwise with constRaints, Order and Weight) handles constraints and prioritisation for pairwise coverage. The tool called CTWeb adds functionalities to execute PROW in different contexts, one of them is product sampling in Software Product Lines via importing feature models. Software Product Line (SPL) development is a recent paradigm, where a family of software systems is constructed by means of the reuse of a set of common functionalities and some variable functionalities. An essential artefact of a SPL is the feature model, which shows the features offered by the product line, jointly with the relationships (includes and excludes) among them. Pairwise testing could be used to obtain the product sampling to test in a SPL, using features as pairwise parameters. In this context, the constraint handling becomes essential. As a difference with respect to other tools, CTWeb does not require SAT solvers.
   This paper describes the PROW algorithm, also analysing its complexity and efficiency. The CTWeb tool is presented, including two examples of the PROW application to two real environments: the first corresponds to the migration of the subsystem of transactions processing of a credit card management system from AS400 to Oracle with NET: the second applies both the algorithm and the tool to a SPL that monitors and controls some parameters of the load in trucks. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Perez Lamancha, Beatriz] Republ Univ, Software Testing Ctr, Montevideo, Uruguay.
   [Polo, Macario; Piattini, Mario] Univ Castilla La Mancha, Alarcos Res Grp, E-13071 Ciudad Real, Spain.
RP Lamancha, BP (reprint author), Republ Univ, Software Testing Ctr, Montevideo, Uruguay.
EM bperez@fing.edu.uy; macario.polo@uclm.es; mario.piattini@uclm.es
RI Piattini, Mario/F-6271-2013
OI Piattini, Mario/0000-0002-7212-8279
FU GEODAS project (Spanish Ministry of Economy and Competitiveness and
   European Fund for Regional Development) [TIN2012-37493-C03-01]
FX The authors would like to thank Oscar Diaz and Maider Azanza from the
   University of the Basque Country for their comments and helpful reviews.
   Also thanks to Monica Wodzislawski and Maria Elisa Presto from the
   Software Testing Centre (CES) in Uruguay, for having accepted the
   application of PROW in the case study. Also thank to Danilo Caivano and
   Giuseppe Vissaggio, who provided us the Monica Mobile SPL. This work is
   partially supported by the GEODAS project (Spanish Ministry of Economy
   and Competitiveness and European Fund for Regional Development,
   TIN2012-37493-C03-01).
CR Ball T, 2000, SOFTW TEST VERIF REL, V10, P149
   Bryce R., 2011, IEEE T SOFTWARE ENG, V99, P1
   Bryce RC, 2009, SOFTW TEST VERIF REL, V19, P37, DOI 10.1002/stvr.393
   Bryce RC, 2007, SOFTW TEST VERIF REL, V17, P159, DOI 10.1002/stvr.365
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce R.C., 2011, INT J SYST ASSUR ENG, P1
   Cabral I, 2010, LECT NOTES COMPUT SC, V6287, P241, DOI 10.1007/978-3-642-15579-6_17
   Calvagna A, 2008, LECT NOTES COMPUT SC, V4966, P66
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394
   Cohen M.B., 2007, INT S SOFTW TEST AN, P129
   Czerwonka J., 2006, 24 PAC NW SOFTW QUAL, V82
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Griss ML, 2000, KLUWER INT SER ENG C, V576, P271
   Hartman A., 2005, GRAPH THEORY COMBINA, V34, P237, DOI 10.1007/0-387-25036-0_10
   Hervieu A, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P120, DOI 10.1109/ISSRE.2011.31
   Hoffman D, 2005, SOFTW TEST VERIF REL, V15, P235, DOI 10.1002/stvr.324
   Kang K, 1990, CMUSEI90TR021
   LAMANCHA BP, 2010, 22 IFIP INT C TEST S, V6435, P111
   Lei Y., 1998, IEEE HIGH ASS SYST E, P254
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Lott C., 2005, 1 WORKSH ADV MOD BAS, P1
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Perrouin G., 2010, 2010 3 INT C SOFTW T, P459, DOI 10.1109/ICST.2010.43
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Schurr A., 2010, MODEL DRIVEN SOFTWAR, P112
   Segura S, 2010, INT C SOFTW TEST VER, P35
   Sherwood G., 1994, P 3 INT C SOFTW TEST
   Stricker V, 2010, LECT NOTES COMPUT SC, V6287, P226, DOI 10.1007/978-3-642-15579-6_16
   Tung YW, 2000, AEROSP CONF PROC, P431
   Williams A W, 2002, SOFTWARE COMPONENT I
   Yan J, 2008, J SYST SOFTWARE, V81, P1681, DOI 10.1016/j.jss.2008.02.034
NR 39
TC 0
Z9 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD JAN
PY 2015
VL 99
BP 1
EP 19
DI 10.1016/j.jss.2014.08.005
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA AX8AB
UT WOS:000347131600001
ER

PT J
AU Lim, SL
   Bentley, PJ
   Kanakam, N
   Ishikawa, F
   Honiden, S
AF Lim, Soo Ling
   Bentley, Peter J.
   Kanakam, Natalie
   Ishikawa, Fuyuki
   Honiden, Shinichi
TI Investigating Country Differences in Mobile App User Behavior and
   Challenges for Software Engineering
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements/specifications; market-driven software engineering; mobile
   application development; user requirements; survey research; app user
   behavior; software product lines; software ecosystems
ID SYSTEMS; COMPANIES
AB Mobile applications (apps) are software developed for use on mobile devices and made available through app stores. App stores are highly competitive markets where developers need to cater to a large number of users spanning multiple countries. This work hypothesizes that there exist country differences in mobile app user behavior and conducts one of the largest surveys to date of app users across the world, in order to identify the precise nature of those differences. The survey investigated user adoption of the app store concept, app needs, and rationale for selecting or abandoning an app. We collected data from more than 15 countries, including USA, China, Japan, Germany, France, Brazil, United Kingdom, Italy, Russia, India, Canada, Spain, Australia, Mexico, and South Korea. Analysis of data provided by 4,824 participants showed significant differences in app user behaviors across countries, for example users from USA are more likely to download medical apps, users from the United Kingdom and Canada are more likely to be influenced by price, users from Japan and Australia are less likely to rate apps. Analysis of the results revealed new challenges to market-driven software engineering related to packaging requirements, feature space, quality expectations, app store dependency, price sensitivity, and ecosystem effect.
C1 [Lim, Soo Ling; Bentley, Peter J.] UCL, Dept Comp Sci, London WC1E 6BT, England.
   [Lim, Soo Ling] Natl Inst Informat, Honiden Lab, Tokyo, Japan.
   [Lim, Soo Ling] Bournemouth Univ, Software Syst Res Ctr, Poole BH12 5BB, Dorset, England.
   [Kanakam, Natalie] UCL, Dept Clin Educ & Hlth Psychol, London WC1E 6BT, England.
   [Ishikawa, Fuyuki] Natl Inst Informat, Digital Content & Media Sci Res Div, Tokyo, Japan.
   [Honiden, Shinichi] Natl Inst Informat, Tokyo, Japan.
RP Lim, SL (reprint author), UCL, Dept Comp Sci, London WC1E 6BT, England.
EM s.lim@cs.ucl.ac.uk; p.bentley@cs.ucl.ac.uk; n.kanakam@ucl.ac.uk;
   f-ishikawa@nii.ac.jp; honiden@nii.ac.jp
CR Babbie E., 1990, SURVEY RES METHODS, V2nd
   Bachmann F., 2001, ACM SIGSOFT SOFTW EN, V26, P126, DOI 10.1145/379377.375274
   Beus-Dukic L., 2000, P ICSE WORKSH COTS S, P4
   Bohmer M., 2011, P 13 INT C HUM COMP, P47
   Castro-Herrera C, 2008, INT REQUIR ENG CONF, P165, DOI 10.1109/RE.2008.47
   Chen M., 2011, P ACM ICONFERENCE, P661, DOI 10.1145/1940761.1940859
   Chittaranjan G., 2012, PERS UBIQUIT COMPUT, V17, P433
   Chung L., 2000, KLUWER ACAD PUBLISHE
   Cranor L. F., 2000, INTERNET UPHEAVAL RA, P47
   Deutskens E, 2004, MARKET LETT, V15, P21, DOI 10.1023/B:MARK.0000021968.86465.00
   Distimo, 2011, IN DEPTH VIEW DOWNL
   Do T., 2011, P 13 INT C MULT INT, P353
   Falaki H., 2010, P 8 INT C MOB SYST A, P179, DOI DOI 10.1145/1814433.1814453
   Field A, 2009, DISCOVERING STAT USI, V3rd
   Franko OI, 2012, J MED SYST, V36, P3135, DOI 10.1007/s10916-011-9798-7
   Gero JS, 1998, ARTIF INTELL ENG, V12, P163, DOI 10.1016/S0954-1810(97)00022-8
   Gokhale A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P82
   Gorla A., 2013, P 6 INT C SOFTW ENG, P1025
   Gosling SD, 2003, J RES PERS, V37, P504, DOI 10.1016/S0092-6566(03)00046-1
   Harman M., 2012, P 9 IEEE WORK C MIN, P108
   Hellerstein J.M., 2008, QUANTITATIVE DATA CL
   Hensinger E, 2013, PATTERN ANAL APPL, V16, P623, DOI 10.1007/s10044-012-0314-6
   Henze Niels, 2011, International Journal of Mobile Human Computer Interaction, V3, DOI 10.4018/jmhci.2011100105
   Hjorth L., 2005, J INTERCULTURAL STUD, V26, P39, DOI 10.1080/075256860500074003
   Hofstede G., 1991, CULTURES ORG SOFTWAR, V2
   Iacob C., 2013, P 10 INT WORKSH MIN, P41
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Kamsties E., 1998, Requirements Engineering, V3, DOI 10.1007/BF02919967
   Karlsson L, 2007, INFORM SOFTWARE TECH, V49, P588, DOI 10.1016/j.infsof.2007.02.008
   Khalid H., 2014, IEEE SOFTWARE, P1
   Kitchenham B., 2002, ACM SIGSOFT SOFTW EN, V27, P20, DOI 10.1145/511152.511155
   Knauber P, 2000, IEEE SOFTWARE, V17, P88, DOI 10.1109/52.877873
   Kuniavsky M., 2003, OBSERVING USER EXPER
   Lehtola L., 2006, Software Process Improvement and Practice, V11, DOI 10.1002/spip.249
   Lim S. L., 2013, MANAGING REQUIREMENT
   Lim S. L., 2012, P FRONTIERS NATURAL, P15
   Lim S. L., 2010, P 32 ACM IEEE INT C, P295
   Lim S. L., 2012, P 13 INT C SYNTH SIM, P202
   Lim SH, 2012, J CHINESE CINEMAS, V6, P3, DOI 10.1386/jcc.6.1.3_2
   Lim SL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2672
   Lim SL, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P129, DOI 10.1145/2330163.2330182
   List D., 2007, KNOW YOUR AUDIENCE P
   Lubars M., 1993, P IEEE INT S REQ ENG, P2
   Maiden Neil, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), DOI 10.1109/RE.2010.16
   McMillan D, 2010, LECT NOTES COMPUT SC, V6030, P210, DOI 10.1007/978-3-642-12654-3_13
   Natt Och Dag J., 2002, THESIS LUND I TECHNO
   Pagano D., 2013, P 21 IEEE INT REQ EN, P125
   Potts C., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), DOI 10.1109/ISRE.1995.512553
   Rahmati A., 2012, P 14 INT C HUM COMP, P11, DOI 10.1145/2371574.2371577
   Rahmati A., 2012, IEEE T MOBILE COMPUT, V12, P1417
   Regnell B, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P287, DOI 10.1007/3-540-28244-0_13
   Sawyer P, 1999, VTT SYMP, V195, P222
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492
   Secretan J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1759
   Seyff Norbert, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), DOI 10.1109/RE.2010.15
   Snowsill T, 2010, LECT NOTES ARTIF INT, V6323, P615, DOI 10.1007/978-3-642-15939-8_46
   Straub D, 1997, INFORM MANAGE, V33, P1, DOI 10.1016/S0378-7206(97)00026-8
   Trigaux J.-C., 2003, SOFTWARE PRODUCT LIN, P9
   van Everdingen YM, 2000, COMMUN ACM, V43, P27, DOI 10.1145/332051.332064
   Wasserman T., 2010, P FSE SDP WORKSH FUT, P397
   Westerman B., DO PEOPLE REALLY USE
   Wnuk K, 2011, LECT NOTES COMPUT SC, V6606, P54, DOI 10.1007/978-3-642-19858-8_6
   Wong J, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1435
   Xu Q, 2011, P 2011 ACM SIGCOMM C, P329
   Zukerman I, 2001, USER MODEL USER-ADAP, V11, P5, DOI 10.1023/A:1011175525451
NR 65
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD JAN
PY 2015
VL 41
IS 1
BP 40
EP 64
DI 10.1109/TSE.2014.2360674
PG 25
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA AY8EZ
UT WOS:000347788400004
ER

PT J
AU Assuncao, WKG
   Lopez-Herrejon, RE
   Linsbauer, L
   Vergilio, SR
   Egyed, A
AF Assuncao, Wesley K. G.
   Lopez-Herrejon, Roberto E.
   Linsbauer, Lukas
   Vergilio, Silvia R.
   Egyed, Alexander
BE Silva, S
TI Extracting Variability-Safe Feature Models from Source Code Dependencies
   in System Variants
SO GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION
   CONFERENCE
LA English
DT Proceedings Paper
CT 17th Genetic and Evolutionary Computation Conference (GECCO)
CY JUL 11-15, 2015
CL Madrid, SAN MARINO
SP Assoc Comp Machinery SIGEVO
DE Reverse Engineering; Feature Models; Multi-Objective Evolutionary
   Algorithms
AB To effectively cope with increasing customization demands, companies that have developed variants of software systems are faced with the challenge of consolidating all the variants into a Software Product Line, a proven development paradigm capable of handling such demands. A crucial step in this challenge is to reverse engineer feature models that capture all the required feature combinations of each system variant. Current research has explored this task using propositional logic, natural language, and search-based techniques. However, using knowledge from the implementation artifacts for the reverse engineering task has not been studied. We propose a multi-objective approach that not only uses standard precision and recall metrics for the combinations of features but that also considers variability-safety, i.e. the property that, based on structural dependencies among elements of implementation artifacts, asserts whether all feature combinations of a feature model are in fact well-formed software systems. We evaluate our approach with five case studies and highlight its bene fits for the software engineer.
C1 [Assuncao, Wesley K. G.; Vergilio, Silvia R.] Univ Fed Parana, DINF, BR-81531980 Curitiba, Parana, Brazil.
   [Assuncao, Wesley K. G.] Technol Fed Univ Parana, COINF, BR-85902490 Toledo, Brazil.
   [Lopez-Herrejon, Roberto E.; Linsbauer, Lukas; Egyed, Alexander] Johannes Kepler Univ Linz, ISSE, A-4040 Linz, Austria.
RP Assuncao, WKG (reprint author), Univ Fed Parana, DINF, CP 19081, BR-81531980 Curitiba, Parana, Brazil.
EM wesleyk@inf.ufpr.br; roberto.lopez@jku.at; lukas.linsbauer@jku.at;
   silvia@inf.ufpr.br; alexander.egyed@jku.at
CR Acher M., 2012, VAMOS, P45
   Assuncao W. K. G., 2015, SYSTEMATIC MAP UNPUB
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Fischer S., 2014, ICSME
   Haslinger E. N., 2011, WORK C REV ENG WCRE, P308
   Haslinger EN, 2013, LECT NOTES COMPUT SC, V7793, P53, DOI 10.1007/978-3-642-37057-1_5
   Kang K., 1990, CMUSEI90TR21
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Linsbauer L., 2013, SPLC, P131
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Lopez-Herrejon R.E., 2012, LNCS, V7515, P168
   Manning CD, 2008, INTRO INFORM RETRIEV
   Sannier N, 2013, IEEE INT CONF AUTOM, P580, DOI 10.1109/ASE.2013.6693116
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   vandLinden F. J., 2007, SOFTWARE PRODUCT LIN
   Weston N., 2009, ACM INT C P SERIES, V446, P211
NR 20
TC 0
Z9 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 1515 BROADWAY, NEW YORK, NY 10036-9998 USA
BN 978-1-4503-3472-3
PY 2015
BP 1303
EP 1310
DI 10.1145/2739480.2754720
PG 8
WC Computer Science, Artificial Intelligence; Operations Research &
   Management Science
SC Computer Science; Operations Research & Management Science
GA BD2JF
UT WOS:000358795700163
ER

PT S
AU Dubslaff, C
   Baier, C
   Kluppelholz, S
AF Dubslaff, Clemens
   Baier, Christel
   Klueppelholz, Sascha
BE Chiba, S
   Tanter, E
   Ernst, E
   Hirschfeld, R
TI Probabilistic Model Checking for Feature-Oriented Systems
SO TRANSACTIONS ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT XII
SE Lecture Notes in Computer Science
LA English
DT Proceedings Paper
CT 13th International Conference on Modularity (Modularity)
CY APR 22-25, 2014
CL Lugano, SWITZERLAND
ID SOFTWARE PRODUCT LINES; NONFUNCTIONAL PROPERTIES; AUTOMATIC
   VERIFICATION; SUPERIMPOSITION; CONSTRUCT; LOGIC; GAMES
AB Within product lines, collections of several related products are defined through their commonalities in terms of features rather than specifying them individually one-by-one. In this paper we present a compositional framework for modeling dynamic product lines by a state-based formalism with both probabilistic and nondeterministic behaviors. Rules for feature changes in products made during runtime are formalized by a coordination component imposing constraints on possible feature activations and deactivations. Our framework supports large-scaled product lines described through multi-features, i.e., where products may involve multiple instances of a feature.
   To establish temporal properties for products in a product line, verification techniques have to face a combinatorial blow-up that arises when reasoning about several feature combinations. This blow-up can be avoided by family-based approaches exploiting common feature behaviors. We adapt such approaches to our framework, allowing for a quantitative analysis in terms of probabilistic model checking to reason, e.g., about energy and memory consumption, monetary costs, or the reliability of products. Our framework can also be used to compute strategies how to trigger feature changes for optimizing quantitative objectives using probabilistic model-checking techniques.
   We present a natural and conceptually simple translation of product lines into the input language of the prominent probabilistic model checker Prism and show feasibility of this translation within a case study on an energy-aware server platform product line comprising thousands of products. To cope with the arising complexity, we follow the family-based analysis scheme and apply symbolic methods for a compact state-space representation.
C1 [Dubslaff, Clemens; Baier, Christel; Klueppelholz, Sascha] Tech Univ Dresden, Fac Comp Sci, D-01062 Dresden, Germany.
RP Dubslaff, C (reprint author), Tech Univ Dresden, Fac Comp Sci, D-01062 Dresden, Germany.
EM dubslaff@tcs.inf.tu-dresden.de; baier@tcs.inf.tu-dresden.de;
   klueppelholz@tcs.inf.tu-dresden.de
CR Apel S, 2009, LECT NOTES COMPUT SC, V5563, P4, DOI 10.1007/978-3-642-02408-5_2
   Apel S., 2010, ACM T PROGR LANG SYS, V32, P1
   Apel S., 2013, P INT WORKSH VAR MOD, P14
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Baier C., 2014, LNCS, V8411, P1
   Baier C., 2014, LNCS, V8464, P96
   Baier C, 1998, DISTRIB COMPUT, V11, P125, DOI 10.1007/s004460050046
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bianco A., 1995, LNCS, V1026
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677
   Chatterjee K., 2004, P SODA 2004 SIAM, P121
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Classen A., 2010, P 32 ACM IEEE INT C, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Clements P, 2001, SOFTWARE PRODUCT LIN
   CONDON A, 1992, INFORM COMPUT, V96, P203, DOI 10.1016/0890-5401(92)90048-K
   Cordy M., 2013, LNCS, V7740, P1
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.213
   Damiani F., 2011, P 15 INT SOFTW PROD, V2, P34, DOI DOI 10.1145/2019136.2019175
   de Alfaro L, 1999, LECT NOTES COMPUT SC, V1664, P66
   de Alfaro L, 2004, J COMPUT SYST SCI, V68, P374, DOI 10.1016/j.jcss.2003.07.009
   Dinkelaker T., 2010, P 1 WORKSH COMP VAR
   Dubslaff C., 2014, P 13 C MOD MODULARIT, P169
   Filar J., 1997, COMPETITIVE MARKOV D
   Forejt V., 2011, LECT NOTES COMPUTER, V665, P53, DOI 10.1007/978-3-642-21455-4_3.
   Fujita M, 1997, FORM METHOD SYST DES, V10, P149, DOI 10.1023/A:1008647823331
   GELERNTER D, 1992, COMMUN ACM, V35, P96, DOI 10.1145/129630.376083
   Ghezzi C, 2013, INFORM SOFTWARE TECH, V55, P508, DOI 10.1016/j.infsof.2012.07.017
   Gomaa H, 2004, LECT NOTES COMPUT SC, V3014, P435
   Hahnel M., 2013, P 4 C FUT EN SYST E, P193
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Haverkort B., 1998, PERFORMANCE COMPUTER
   Hay J. D., 2000, P 8 S FDN SOFTW ENG, V25, P110
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Kang K., 1990, CMUSEI90TR21
   KATZ S, 1993, ACM T PROGR LANG SYS, V15, P337, DOI 10.1145/169701.169682
   Kulkarni V., 1995, MODELING ANAL STOCHA
   Malik S., 1988, P INT C COMP AID DES, P6
   McMillan K. L., 1993, SYMBOLIC MODEL CHECK
   Millo J.-V., 2013, LNCS, V7940, P109
   Noorian M., 2012, P 24 INT C SOFTW ENG, P663
   Papadopoulos G. A., 1998, ADV COMPUT, V46, P329, DOI 10.1016/S0065-2458(08)60208-9
   Plath M, 2001, SCI COMPUT PROGRAM, V41, P53, DOI 10.1016/S0167-6423(00)00018-6
   Puterman M. L., 1994, MARKOV DECISION PROC
   Rosenmuller M, 2011, AUTOMAT SOFTW ENG, V18, P163, DOI 10.1007/s10515-011-0080-5
   Rudell R., 1993, P INT C COMP AID DES, P42, DOI 10.1109/ICCAD.1993.580029
   Schneider JG, 2001, COORDINATION OF INTERNET AGENTS: MODELS, TECHNOLOGIES AND APPLICATIONS, P153
   Segala R., 1995, THESIS MIT
   Segala R., 1995, Nordic Journal of Computing, V2
   SIEGMUND N, 2008, P 15 AS PAC SOFT ENG, P187, DOI DOI 10.1109/APSEC.2008.45
   Siegmund N, 2013, INFORM SOFTWARE TECH, V55, P491, DOI 10.1016/j.infsof.2012.07.020
   Varshosaz M., 2013, P 17 SOFTW PROD LIN, P34
   White J., 2009, P 13 INT SOFTW PROD, P11
NR 54
TC 0
Z9 0
PU SPRINGER-VERLAG BERLIN
PI BERLIN
PA HEIDELBERGER PLATZ 3, D-14197 BERLIN, GERMANY
SN 0302-9743
BN 978-3-662-46734-3; 978-3-662-46733-6
J9 LECT NOTES COMPUT SC
PY 2015
VL 8989
BP 180
EP 220
DI 10.1007/978-3-662-46734-3_5
PG 41
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA BD3PH
UT WOS:000359999900005
ER

PT J
AU de Souza, LO
   O'Leary, P
   de Almeida, ES
   Meira, SRD
AF de Souza, Leandro Oliveira
   O'Leary, Padraig
   de Almeida, Eduardo Santana
   Meira, Silvio Romero de Lemos
TI Product derivation in practice
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Case study; Multiple case study; Constant comparison analysis;
   Cross-case analysis; Product derivation; Software product lines
ID SOFTWARE; LINES
AB Context: The process of constructing a product from a product line of software assets is known product derivation. An effective product derivation process is important in order to ensure that the efforts required to develop these shared assets is lower than the benefits achieved through their use. Despite its importance, relatively little work has been dedicated to the product derivation process and the strategies applied in practice. Additionally, there is a lack of empirical reports describing product derivation in industrial settings, and, in general, where these reports are available, they have been conducted as informal studies.
   Objective: Our aim is to investigate how product derivation is performed in practice.
   Method: We apply a multi-case study design to two different industrial software product line projects with the goal of investigating how they derive their products in practice. The findings from our studies were individually analyzed using the Constant Comparison technique. In order to identify patterns across these studies, the findings were compared using a Cross-case analysis approach.
   Results: The research approach allowed us to examine the case study outcomes from different perspectives, capturing similarities and differences. From the cases, we identified context specific strategies for product derivation which are easier for practitioners to contextualise and implement.
   Conclusions: The case studies provide method-in-action insights into concepts explored in the literature, such as: iterative and incremental product derivation, instantiation and integration of platform components and derivation of product databases. Practitioners can use this work as a basis for defining, adapting or evaluating their own product derivation approaches. While researchers can use this work as a starting point for new industrial reports, presenting their experiences with product derivation. (C) 2014 Elsevier B.V. All rights reserved.
C1 [de Souza, Leandro Oliveira] Fed Inst Bahia IFBA, BR-44900000 Irece, BA, Brazil.
   [de Souza, Leandro Oliveira; Meira, Silvio Romero de Lemos] Univ Fed Pernambuco UFPE, Recife, PE, Brazil.
   [de Almeida, Eduardo Santana] Fed Univ Bahia UFBA, Salvador, BA, Brazil.
   [de Souza, Leandro Oliveira; de Almeida, Eduardo Santana; Meira, Silvio Romero de Lemos] Reuse Software Engn RiSE, Recife, PE, Brazil.
   [O'Leary, Padraig] Univ Limerick, Lero Irish Software Engn Res Ctr, Limerick, Ireland.
   [O'Leary, Padraig] Univ Limerick, ARCH, Limerick, Ireland.
RP de Souza, LO (reprint author), Fed Inst Bahia IFBA, Rodovia BA 148,Km 04,1800,Vila Esperanca, BR-44900000 Irece, BA, Brazil.
EM leandro.souza@ifba.edu.br; padraig.oleary@ul.ie; esa@rise.com.br;
   srlm@cin.ufpe.br
FU Science Foundation Ireland [10/CE/I1855]
FX Our thanks to the companies and all the practitioners who gave their
   time and agreed to be interviewed. We would also like to thank our
   anonymous reviewers for their very constructive feedback. This study was
   also supported in part by Science Foundation Ireland grant 10/CE/I1855
   to Lero - the Irish Software Engineering Research Centre,2 Enterprise
   Ireland ARCH - Applied Research for Connected Health, National Institute
   of Science and Technology for Software Engineering.<SUP>3</SUP>
CR Beecham S., 2014, COMPUTER, V47
   Bosch J., 2001, P 2 INT S GEN COMP B, P147
   Brereton P., 2008, P EASE 2008
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Easterbrook S., 2007, SELECTING EMPIRICAL
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fitzgerald B., 2002, INFORM SYSTEMS DEV M
   Glaser B.G., 1967, DISCOVERY GROUNDED T, V46
   Herriott R., 1983, EDUC RES, V12, P14, DOI 10.2307/1175416
   Host M., 2007, P 1 INT S EMP SOFTW, P479
   Hotz L., 2003, SOFTW VAR MAN WORKSH, P136
   Karlstrom D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Maimbo H, 2005, PACIFIC ASIA CONFERENCE ON INFORMATION SYSTEMS 2005, SECTIONS 1-8 AND POSTER SESSIONS 1-6, P1281
   McGregor JD, 2002, IEEE SOFTWARE, V19, P24, DOI 10.1109/MS.2002.1020282
   Miles M.B., 1994, QUALITATIVE DATA ANA, V3
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   O'Leary P, 2012, INFORM SOFTWARE TECH, V54, P1014, DOI 10.1016/j.infsof.2012.03.008
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V49
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Rabiser R, 2011, J SYST SOFTWARE, V84, P285, DOI 10.1016/j.jss.2010.09.042
   Robson C, 2002, REAL WORLD RES RESOU, V2nd
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P16, DOI 10.1109/TSE.1977.229900
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SEI, 2006, STAND CMMI APPR METH
   Shull F., 2007, GUIDE ADV EMPIRICAL
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R., 2003, APPL CASE STUDY RES, V34
   Yin R.K., 2008, CASE STUDY RES DESIG
NR 30
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD FEB
PY 2015
VL 58
BP 319
EP 337
DI 10.1016/j.infsof.2014.07.004
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA AX6HE
UT WOS:000347022800019
ER

PT J
AU Beloglazov, A
   Banerjee, D
   Hartman, A
   Buyya, R
AF Beloglazov, Anton
   Banerjee, Dipyaman
   Hartman, Alan
   Buyya, Rajkumar
TI Improving Productivity in Design and Development of Information
   Technology (IT) Service Delivery Simulation Models
SO JOURNAL OF SERVICE RESEARCH
LA English
DT Article
DE IT service delivery; service science; service systems; formal model;
   simulation; software product lines
ID SYSTEMS RESEARCH; SCIENCE
AB The unprecedented scale of Information Technology (IT) service delivery requires careful analysis and optimization of service systems. The simulation is an efficient way to handle the complexity of modeling and optimization of real-world service delivery systems. However, typically developed custom simulation models lack standard architectures and limit the reuse of design and implementation artifacts across multiple models. In this work, following the design science research methodology, based on a formal model of service delivery systems and applying an adapted software product line (SPL) approach, we create a design artifact for building product lines of IT service delivery simulation models, which vastly simplify and reduce the cost of simulation model design and development. We evaluate the design artifact by constructing a product line of simulation models for a set of IBM's IT service delivery systems. We validate the proposed approach by comparing the simulation results obtained using our models with the results from the corresponding custom simulation models. The case study demonstrates that the proposed approach leads to 5-8 times reductions in the time required to design and develop related simulation models. The potential implications of the application of the proposed approach within an organization are quicker responses to changes in the business environment, more information to assist in managerial decisions, and reduced workload on the process reengineering specialists.
C1 [Beloglazov, Anton] IBM Res, Melbourne, Vic, Australia.
   [Banerjee, Dipyaman] IBM Res, New Delhi, India.
   [Hartman, Alan] IBM Res, Haifa, Israel.
   [Buyya, Rajkumar] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
RP Beloglazov, A (reprint author), IBM Res, Melbourne, Vic, Australia.
EM anton.beloglazov@au.ibm.com
CR Andrei Borshchev, 2004, P 6 IIE ANN SIM SOL, P1
   Banavar G, 2010, SERV SCI RES INNOV S, P481, DOI 10.1007/978-1-4419-1628-0_21
   Banerjee D, 2011, WINT SIMUL C PROC, P779, DOI 10.1109/WSC.2011.6147805
   Bram Klievink, 2009, P 10 ANN INT C DIG G, P73
   Chesbrough H, 2006, COMMUN ACM, V49, P35, DOI 10.1145/1139922.1139945
   Dhanesha KA, 2009, 2009 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING, P435, DOI 10.1109/SCC.2009.75
   Diao YX, 2011, WINT SIMUL C PROC, P690
   Diao YX, 2012, IEEE IFIP NETW OPER, P61
   Hassan Gomaa, 2004, DESIGNING SOFTWARE P
   Hevner AR, 2004, MIS QUART, V28, P75
   Kennedy Fredric D, 1969, IEEE T SYST SCI CYB, V5, P100
   Klaus Pohl, 2005, SOFTWARE PRODUCT LIN
   Maglio PP, 2006, COMMUN ACM, V49, P81, DOI 10.1145/1139922.1139955
   Nikos Anerousis, 2011, P 2011 IFIP IEEE INT, P773
   Paul C., 2001, SOFTWARE PRODUCT LIN
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Prashanth LA, 2011, LECT NOTES COMPUT SC, V7084, P487, DOI 10.1007/978-3-642-25535-9_33
   Rao Vemuri Seshagiri, 1982, SOCIOECONOMIC PLANNI, V16, P107
   Rohleder Thomas R., 2007, HLTH CARE MANAGEMENT, V10, P1
   Sarjoughian H, 2008, 2008 WINTER SIMULATION CONFERENCE, VOLS 1-5, P845, DOI 10.1109/WSC.2008.4736148
   Shirley Gregor, 2013, MIS Q, V37, P337
   Spohrer J, 2007, COMPUTER, V40, P71, DOI 10.1109/MC.2007.33
   Spohrer Jim, 2008, P 41 ANN HAW INT C S, P104
   Steven Alter, 2010, IBM SYST J, V47, P71
   Walls Joseph G., 1992, INFORM SYST RES, V3, P36
   Zaki Ahmed S., 1997, SOCIOECON PLANN SCI, V31, P173
   Zhang Liang-Jie, 2008, IEEE T SERV COMPUT, V1, P62, DOI DOI 10.1109/TSC.2008.15
NR 27
TC 0
Z9 0
PU SAGE PUBLICATIONS INC
PI THOUSAND OAKS
PA 2455 TELLER RD, THOUSAND OAKS, CA 91320 USA
SN 1094-6705
EI 1552-7379
J9 J SERV RES-US
JI J. Serv. Res.
PD FEB
PY 2015
VL 18
IS 1
BP 75
EP 89
DI 10.1177/1094670514541002
PG 15
WC Business
SC Business & Economics
GA AY3AU
UT WOS:000347457800006
ER

PT J
AU Liu, WH
   Mo, YM
   Yang, Y
   Ye, Z
AF Liu, Weihua
   Mo, Yuming
   Yang, Yi
   Ye, Zi
TI Decision model of customer order decoupling point on multiple customer
   demands in logistics service supply chain
SO PRODUCTION PLANNING & CONTROL
LA English
DT Article
DE mass customization; sensitivity analysis; customer order decoupling
   point (CODP); logistics service supply chain (LSSC)
ID MASS CUSTOMIZATION; MANUFACTURING STRATEGY; PENETRATION POINT; FORM
   POSTPONEMENT; MANAGEMENT; PERSPECTIVES; OPERATIONS; BENEFITS; PRODUCT
AB The key factor in realising competitiveness of a logistics service supply chain (LSSC) is its ability to meet customised requirements with the cost of mass service. This paper introduces the concepts of mass customisation and customer order decoupling point (CODP) into the field of logistics service to solve the problem of CODP when a logistics service integrator (LSI) in an LSSC operates under mass customisation. Two models of CODP decision, respectively, on single and multiple customer demands, are developed. Both process constraints and lead time constraints from the customised logistics service orders are considered. Unlike CODP positioning models within the manufacturing supply chain, the objective of this paper is to exclusively consider the cost of order transferring and order waiting at CODP to minimise total cost of the LSI. The applications of the two models are also discussed by two real cases, and three major conclusions are drawn. First, introducing mass customisation into an LSSC and minimising total cost of order processing of the LSI by selecting an optimised CODP is feasible. Second, total cost will decrease monotonously along with the movement of CODP toward the last service procedure under the precondition of satisfying lead time constraints. Third, parameters about the customers' logistics service orders will bring about great influence on the selection of CODP. For instance, the lead time of orders will influence the number of feasible CODPs and the position of optimal CODP. Also, decreasing cost of order transferring and order waiting will not cause the change of optimal CODP, while increasing cost of order transferring and order waiting will lead to the switch of optimal CODP.
C1 [Liu, Weihua] Tianjin Univ, Sch Management, Tianjin 300072, Peoples R China.
   [Mo, Yuming] Purdue Univ, Coll Engn, W Lafayette, IN 47907 USA.
   [Yang, Yi] Tianjin Univ, Sch Management, Management Sci & Engn, Tianjin 300072, Peoples R China.
   [Ye, Zi] Univ Hong Kong, Fac Engn Ind Engn & Logist Management, Hong Kong, Hong Kong, Peoples R China.
RP Liu, WH (reprint author), Tianjin Univ, Sch Management, Tianjin 300072, Peoples R China.
EM lwhliu@tju.edu.cn
FU National Natural Science Foundation of China - Humanity and Social
   Science Youth foundation of Ministry of Education of China - China State
   Scholarship Fund [71372156, 2013YJC630098]; Independent Innovation
   Foundation of Tianjin University
FX This research is supported by the National Natural Science Foundation of
   China [grant number 71372156], supported by Humanity and Social Science
   Youth foundation of Ministry of Education of China [grant number
   2013YJC630098], sponsored by China State Scholarship Fund and
   Independent Innovation Foundation of Tianjin University.
CR [Anonymous], 1998, LOGISTICS MANAGEMENT, V37, P49
   Aviv Y, 2001, OPER RES, V49, P578, DOI 10.1287/opre.49.4.578.11229
   Berry W. L., 1992, International Journal of Operations & Production Management, V12, DOI 10.1108/01443579210013127
   Billington C., 2004, J SUPPLY CHAIN MANAG, V40, P17, DOI DOI 10.1111/JSCM.2004.40.ISSUE-4
   Brun A, 2009, INT J PROD ECON, V120, P205, DOI 10.1016/j.ijpe.2008.07.020
   Chandra C, 2004, TSI PRESS S, V18, P335
   Chen J., 2005, SCI TECHNOLOGY PROGR, V22, P198
   Chen J, 2008, I C WIREL COMM NETW, P8590
   Chen J., 2009, SERVICE SCI, V1, P43
   Chen JY, 2009, INT EL DEVICES MEET, P1, DOI 10.1109/CLEOE-EQEC.2009.5196326
   Cho DW, 2012, COMPUT IND ENG, V62, P801, DOI 10.1016/j.cie.2011.11.014
   Choy K. L., 2007, International Journal of Manufacturing Technology and Management, V10, DOI 10.1504/IJMTM.2007.011399
   Cui AP, 2008, PROCEEDINGS OF 2008 INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND CYBERNETICS, VOLS 1-7, P4051
   Harrison A, 2008, INT J PROD RES, V46, P173, DOI 10.1080/00207540600844076
   Hart C. W., 1996, VALUE CREATION MASS
   Hedenstierna Philip, 2011, Journal of Manufacturing Technology Management, V22, DOI 10.1108/17410381111177476
   Hoek R. I., 2001, J OPERATIONS MANAGEM, V19, P161
   [季建华 JI Jianhua], 2007, [系统工程理论与实践, Systems Engineering-Theory & Practice], V27, P151, DOI 10.1016/S1874-8651(08)60079-4
   Lee HL, 1997, MANAGE SCI, V43, P40, DOI 10.1287/mnsc.43.1.40
   Liu Wei-hua, 2008, Journal of Shanghai Jiaotong University, V42
   Liu W. H., 2011, SUPPLY CHAIN MANAG, V16, P390
   Liu W. H., 2012, AFRICAN J BUSINESS M, V6, P908
   Liu WH, 2012, DISCRETE DYN NAT SOC, DOI 10.1155/2012/482978
   Liu WH, 2013, MATH PROBL ENG, DOI 10.1155/2013/957260
   Nie W, 1999, PROD OPER MANAG, V8, P339
   OLHAGER J, 1990, EUR J OPER RES, V45, P135, DOI 10.1016/0377-2217(90)90180-J
   Olhager J, 2010, COMPUT IND, V61, P863, DOI 10.1016/j.compind.2010.07.011
   Olhager J, 2001, INT J PROD ECON, V69, P215, DOI 10.1016/S0925-5273(99)00098-5
   Olhager J, 2003, INT J PROD ECON, V85, P319, DOI 10.1016/S0925-5273(03)00119-1
   Paul M. G., 1992, PRODUCTION PLANNING, V3, P300
   Peters L, 2000, INT J INFORM MANAGE, V20, P103, DOI 10.1016/S0268-4012(99)00059-6
   Qi G. N., 2000, COMPUTER INTEGRATED, V10, P41
   Qin Y, 2013, INT J COMPUT SCI ISS, V10, P610
   Rafiei H, 2011, COMPUT IND ENG, V61, P550, DOI 10.1016/j.cie.2011.04.010
   Ram J., TAOBAO RECORD BREAKI
   Romme J., 1992, INTEGRATED LOGISTICS
   Rudberg M, 2004, PROD PLAN CONTROL, V15, P445, DOI [10.1080/0953728042000238764, 10.1080/095372804200238764]
   SHARMAN G, 1984, HARVARD BUS REV, V62, P71
   Silveira G. D., 2001, INT J PROD ECON, V72, P1, DOI DOI 10.1016/S0925-5273(00)00079-7
   Skipworth H, 2006, INT J PROD RES, V44, P1627, DOI 10.1080/00207540500362120
   Sun XY, 2008, INT J PROD ECON, V113, P943, DOI 10.1016/j.ijpe.2007.11.012
   Tang D. J., 2009, SERVICE SCI, V1, P43
   Tang D. J., 2010, IEEE GLOB TEL C, P1
   van Donk DP, 2001, INT J PROD ECON, V69, P297, DOI 10.1016/S0925-5273(00)00035-9
   Wang F, 2010, INT J PROD RES, V48, P3741, DOI 10.1080/00207540902865746
   Wang Y, 2008, ICPOM2008: PROCEEDINGS OF 2008 INTERNATIONAL CONFERENCE OF PRODUCTION AND OPERATION MANAGEMENT, VOLUMES 1-3, P110
   Wikner J, 2005, INT J OPER PROD MAN, V25, P623, DOI 10.1108/01443570510605072
   Yao JM, 2011, PROD PLAN CONTROL, V22, P690, DOI 10.1080/09537287.2010.537577
   Zhang L, 2010, PROCEEDINGS OF 2010 INTERNATIONAL CONFERENCE ON LOGISTICS SYSTEMS AND INTELLIGENT MANAGEMENT, VOLS 1-3, P15, DOI 10.1109/ICICTA.2010.822
   Zhang Y., COURIERS PRESSURE TH
   Zhao Q. L., 2005, 2005 INT C SERV SYST, V1-2, P369
   ZINN W, 1990, BUS HORIZONS, V33, P70, DOI 10.1016/0007-6813(90)90013-2
NR 52
TC 0
Z9 0
PU TAYLOR & FRANCIS LTD
PI ABINGDON
PA 4 PARK SQUARE, MILTON PARK, ABINGDON OX14 4RN, OXON, ENGLAND
SN 0953-7287
EI 1366-5871
J9 PROD PLAN CONTROL
JI Prod. Plan. Control
PD FEB 17
PY 2015
VL 26
IS 3
BP 178
EP 202
DI 10.1080/09537287.2013.879747
PG 25
WC Engineering, Industrial; Engineering, Manufacturing; Operations Research
   & Management Science
SC Engineering; Operations Research & Management Science
GA CH6CS
UT WOS:000354124000002
ER

PT J
AU Clarke, D
   Helvensteijn, M
   Schaefer, I
AF Clarke, Dave
   Helvensteijn, Michiel
   Schaefer, Ina
TI Abstract delta modelling
SO MATHEMATICAL STRUCTURES IN COMPUTER SCIENCE
LA English
DT Article
AB Delta modelling is an approach to facilitate the automated product derivation for software product lines. It is based on a set of deltas specifying modifications that are incrementally applied to a core product. The applicability of deltas depends on application conditions over features. This paper presents abstract delta modelling, which explores delta modelling from an abstract, algebraic perspective. Compared to the previous work, we take a more flexible approach to conflicts between modifications by introducing the notion of conflict-resolving deltas. Furthermore, we extend our approach to allow the nesting of delta models for increased modularity. We also present conditions on the structure of deltas to ensure unambiguous product generation.
C1 [Clarke, Dave] Katholieke Univ Leuven, IBBT DistriNet, Leuven, Belgium.
   [Helvensteijn, Michiel] CWI, NL-1009 AB Amsterdam, Netherlands.
   [Helvensteijn, Michiel] Leiden Univ, LIACS, NL-2300 RA Leiden, Netherlands.
   [Schaefer, Ina] Tech Univ Carolo Wilhelmina Braunschweig, Braunschweig, Germany.
RP Clarke, D (reprint author), Katholieke Univ Leuven, IBBT DistriNet, Leuven, Belgium.
EM dave.clarke@cs.kuleuven.be; michiel.helvensteijn@cwi.nl;
   i.schaefer@tu-braunschweig.de
CR Apel S, 2009, PROC INT CONF SOFTW, P221, DOI 10.1109/ICSE.2009.5070523
   Apel S, 2010, SCI COMPUT PROGRAM, V75, P1022, DOI 10.1016/j.scico.2010.02.001
   Apel S, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P161
   Apel S, 2008, IEEE T SOFTWARE ENG, V34, P162, DOI 10.1109/TSE.2007.70770
   Apel S, 2009, LECT NOTES COMPUT SC, V5563, P4, DOI 10.1007/978-3-642-02408-5_2
   Batory D., 2007, TR0766 U TEX AUST
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Batory D., 1992, ACM Transactions on Software Engineering and Methodology, V1, DOI 10.1145/136586.136587
   Bettini L., 2010, P OBJ OR PROGR LANG
   Bracha G, 2007, ELECT NOTES THEOR CO, V193, P3, DOI DOI 10.1016/J.ENTCS.2007.10.004
   Clarke D., 2010, P GPCE ACM, P13
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Costanza P., 2005, DLS 05, P1
   Czarnecki K., 2005, INT WORKSH SOFTW FAC, P1
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Ducasse S, 2006, ACM T PROGR LANG SYS, V28, P331, DOI 10.1145/1119479.1119483
   HAHNLE R, 2010, ISOLA, V6416, P3
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139
   Heidenreich F., 2007, ASPECT ORIENTED PROD
   Heymans P, 2008, IET SOFTW, V2, P281, DOI 10.1049/iet-sen:20070055
   Jacobson J., 2009, 0983 CAM UCLA
   Kang K, 1990, CMUSEI90TR021
   Kastner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223
   Kastner C., 2009, P INT SOFTW PROD LIN, P181, DOI DOI 10.1145/1753235.1753261
   Kastner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311
   Kastner C., 2008, ASE, P258
   Kiczales Gregor, 1997, LECT NOTES COMPUT SC, V1241, P220
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   Liu J., 2006, ICSE 06, P112
   Lopez-Herrejon RE, 2005, LECT NOTES COMPUT SC, V3586, P169
   Loughran N, 2004, LECT NOTES COMPUT SC, V3107, P127
   Mens T., 2005, ELECT NOTES THEOR CO, V127, P113, DOI 10.1016/j.entcs.2004.08.038
   Mezini M., 2004, Software Engineering Notes, V29, DOI 10.1145/1041685.1029915
   Noda N, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P213
   Odersky M., 2007, SCALA LANGUAGE SPECI
   Oldevik J, 2009, LECT NOTES COMPUT SC, V5503, P34
   Perrouin G, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P339
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Prehofer C, 1997, LECT NOTES COMPUT SC, V1241, P419
   Schaefer I., 2010, FOSD, P49
   Schaefer I., 2010, INT WORKSH VAR MOD S, P85
   Schaefer I., 2009, P WORKSH MOD BAS APP, P14
   Schaefer I., 2011, INT C ASP OR SOFTW D, P43
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Smaragdakis Y, 2002, ACM T SOFTW ENG METH, V11, P215, DOI 10.1145/505145.505148
   Tarr P., 1999, INT C SOFTW ENG ICSE, P107
   van Deursen A., 2002, Journal of Computing and Information Technology - CIT, V10, DOI 10.2498/cit.2002.01.01
   Volter M., 2007, SPLC, P233
   Zhang H., 2003, SOFTWARE ENG KNOWLED, P267
NR 49
TC 0
Z9 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 0960-1295
EI 1469-8072
J9 MATH STRUCT COMP SCI
JI Math. Struct. Comput. Sci.
PD MAR
PY 2015
VL 25
IS 3
BP 482
EP 527
DI 10.1017/S0960129512000941
PG 46
WC Computer Science, Theory & Methods
SC Computer Science
GA AZ7AG
UT WOS:000348369900002
ER

PT J
AU Reinhartz-Berger, I
   Wulf-Hadash, O
AF Reinhartz-Berger, Iris
   Wulf-Hadash, Ora
TI Improving the management of product lines by performing domain knowledge
   extraction and cross product line analysis
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product line engineering; Variability management; Domain
   analysis; Feature modeling
AB Context: Increase in market competition is one of the main reasons for developing and maintaining families of systems, termed Product Lines (PLs). Managing those PLs is challenging, let alone the management of several related PLs. Currently, those PLs are managed separately or their relations are analyzed assuming explicit specification of dependencies or use of an underlying terminology. Such assumptions may not hold when developing the PLs in different departments or companies applying various engineering processes.
   Objective: In this work we call for utilizing the knowledge gained from developing and maintaining different PLs in the same domain in order to recommend on improvements to the management of PLs.
   Method: The suggested approach conducts domain knowledge extraction and cross PL analysis on feature diagrams - the main aid for modeling PL variability. The domain knowledge is extracted by applying similarity metrics, clustering, and mining techniques. Based on the created,domain models, the approach performs cross PL analysis that examines relations in the domain models and generates improvement recommendations to existing PLs and overall management recommendations (e.g., merging or splitting PLs).
   Results: The approach outcomes were evaluated by humans in a domain of mobile phones. The evaluation results may provide evidence that the outcomes of the approach in general and its recommendations in particular meet human perception of the given domain.
   Conclusion: We conclude that through domain knowledge extraction and cross PL analysis the suggested approach may generate recommendations useful to the management of individual PLs, as well as to the overall management of different PLs in the same domain. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Reinhartz-Berger, Iris; Wulf-Hadash, Ora] Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
RP Reinhartz-Berger, I (reprint author), Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
EM iris@is.haifa.ac.il; orawulf@gmail.com
CR Acher M, 2010, LECT NOTES COMPUT SC, V6138, P3, DOI 10.1007/978-3-642-13595-8_3
   Acher M., 2009, LNCS, V5969, P62
   ALTMAN DG, 1994, BRIT MED J, V308, P1552
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bosch J, 2010, IEEE SOFTWARE, V27, P29, DOI 10.1109/MS.2010.32
   Boskovic M., 2011, LNCS, V6627, P110
   Choi N, 2006, SIGMOD RECORD, V35, P34
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.225
   Dao T., 2005, MEASURING SIMILARITY
   Dhungana D., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), DOI 10.1109/SPLC.2011.22
   EDMONDS J, 1967, J RES NBS B MATH SCI, VB 71, P233, DOI 10.6028/jres.071B.032
   Gomaa W.H., 2013, INT J COMPUTER APPL, V68, P13
   Hartmann H, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P12
   Holl G., 2013, P 28 ACM S APPL COMP, P1742
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Ives Z. G., 2010, P ACM SIGMOD INT C M, P387, DOI 10.1145/1807167.1807211
   Kang KC, 1998, ANN SOFTW ENG, V5, P143, DOI 10.1023/A:1018980625587
   Kim C.H.P., 2005, LNCS, V3748, P331
   Krueger C. W., 2006, SOFTWARE MASS CUSTOM
   KURITA T, 1991, PATTERN RECOGN, V24, P205, DOI 10.1016/0031-3203(91)90062-A
   Mihalcea R, 2006, P 21 NAT C ART INT, V1, P775
   Pedersen T., 2004, HLT NAACL 2004, P38
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   RAND WM, 1971, J AM STAT ASSOC, V66, P846, DOI 10.2307/2284239
   Reinhartz-Berger I., 2013, LNBIP, V147, P354
   Reiser MO, 2007, REQUIR ENG, V12, P57, DOI 10.1007/s00766-007-0046-0
   Schirmeier H., 2009, 42 HAW INT C SYST SC, P1
   Segura S, 2008, LECT NOTES COMPUT SC, V5235, P489, DOI 10.1007/978-3-540-88643-3_15
   Shvaiko P, 2013, IEEE T KNOWL DATA EN, V25, P158, DOI 10.1109/TKDE.2011.253
   Steinley D, 2004, PSYCHOL METHODS, V9, P386, DOI 10.1037/1082-989X.9.3.386
   THUM T, 2009, ICSE, P254
   Wache H., 2001, IJCAI 01 WORKSH ONT, P108
   Wulf-Hadash O., 2013, P 7 VAMOS WORKSH, P123
NR 34
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 191
EP 204
DI 10.1016/j.infsof.2014.11.007
PG 14
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA CB1ZT
UT WOS:000349427200011
ER

PT J
AU Tuzun, E
   Tekinerdogan, B
AF Tuzun, Eray
   Tekinerdogan, Bedir
TI Analyzing impact of experience curve on ROI in the software product line
   adoption process
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Experience curve; Learning curve; Software product line engineering;
   Cost models; Productivity; Software reuse
ID LEARNING-CURVES; MODEL
AB Context: Experience curve is a well-known concept in management and education science, which explains the phenomenon of increased worker efficiency with repetitive production of a good or service. Objective: We aim to analyze the impact of the experience curve effect on the Return on Investment (ROI) in the software product line engineering (SPLE) process.
   Method: We first present the results of a systematic literature review (SLR) to explicitly depict the studies that have considered the impact of experience curve effect on software development in general. Subsequently, based on the results of the SLR, the experience curve effect models in the literature, and the SPLE cost models, we define an approach for extending the cost models with the experience curve effect. Finally, we discuss the application of the refined cost models in a real industrial context.
   Results: The SLR resulted in 15 primary studies which confirm the impact of experience curve effect on software development in general but the experience curve effect in the adoption of SPLE got less attention. The analytical discussion of the cost models and the application of the refined SPLE cost models in the industrial context showed a clear impact of the experience curve effect on the time-to-market, cost of development and ROI in the SPLE adoption process.
   Conclusions: The proposed analysis with the newly defined cost models for SPLE adoption provides a more precise analysis tool for the management, and as such helps to support a better decision making. (C) 2014 Elsevier B.V. All rights reserved.
C1 [Tuzun, Eray] Havelsan AS, Informat & Secur Technol Div, Ankara, Turkey.
   [Tekinerdogan, Bedir] Bilkent Univ, Dept Comp Engn, Ankara, Turkey.
RP Tuzun, E (reprint author), Havelsan AS, Informat & Secur Technol Div, Ankara, Turkey.
EM etuzun@havelsan.com.tr; bedir@cs.bilkent.edu.tr
CR Abdel-Hamid T., 1991, SOFTWARE PROJECT DYN
   Abu G., 2005, 38 HAW INT C SYST SC, V00, P1
   Ali MS, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P275, DOI 10.1109/SEAA.2009.89
   Au YA, 2009, INFORM MANAGE-AMSTER, V46, P9, DOI 10.1016/j.im.2008.09.004
   Bockle G, 2004, IEEE SOFTWARE, V21, P23
   Boehm B., 2004, P 2004 INT S EMP SOF, P156, DOI 10.1109/ISESE.2004.1334903
   Boehm B. W., 2000, SOFTWARE COST ESTIMA
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Buehne S., 2004, 5 INT WORKSH SOFTW P, P19
   Clements P., 2001, SOFTWARE PRODUCT LIN, P608
   Clements P., 2005, CMUSEI2005TR003
   Dorenbos D., 1993, MOT SOFTW ENG S
   Ebbinghaus H, 1913, MEMORY CONTRIBUTION
   Eickelmann N., 2002, P 17 INT FOR COCOMO
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Hanakawa N, 1998, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.1998.671388
   Heradio R, 2012, EXPERT SYST APPL, V39, P7919, DOI 10.1016/j.eswa.2012.01.109
   Huntley CL, 2003, IEEE T ENG MANAGE, V50, P485, DOI 10.1109/TEM.2003.820136
   In HP, 2006, COMMUN ACM, V49, P85, DOI 10.1145/1183236.1183273
   Kang K., 2009, ICIS 2009 P
   Kapur PK, 2013, INT J SYST SCI, V44, P1639, DOI 10.1080/00207721.2012.669861
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Lim W. C., 1996, Proceedings Fourth International Conference on Software Reuse (Cat. No.96TB100015), DOI 10.1109/ICSR.1996.496112
   Madachy R., 2005, P 6 INT WORKSH SOFTW, P160
   Madachy R.J., 2008, SOFTWARE PROCESS DYN, P601
   Narayanan S, 2009, MANAGE SCI, V55, P1861, DOI 10.1287/mnsc.1090.1057
   Nolan Andy J., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), DOI 10.1109/SPLC.2011.44
   Nolan AJ, 2010, LECT NOTES COMPUT SC, V6287, P121, DOI 10.1007/978-3-642-15579-6_9
   Pendharkar PC, 2007, EUR J OPER RES, V183, P1086, DOI 10.1016/j.ejor.2005.07.029
   Plaza M, 2010, EUR J OPER RES, V200, P518, DOI 10.1016/j.ejor.2009.01.010
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V49, P467
   Poulin J.S., 1997, INT J APPL SOFTWARE, V3, P20
   Raccoon L.B., 1996, SOFTW ENG NOTES, V2, P77
   Rodney J.D.J., 1995, COST ESTIMATORS REFE, P744
   Schilling MA, 2003, MANAGE SCI, V49, P39, DOI 10.1287/mnsc.49.1.39.12750
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Sherdil K., 1996, P 5 EUR WORKSH SOFTW, P145
   Sullivan W., 2011, ENG EC
   Van Der Linden F., 2007, SOFTWARE PRODUCT LIN, P334
   Wright TP, 1936, J AERONAUT SCI, V3, P122
   Zorgios Y., 2009, VINE
NR 41
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAR
PY 2015
VL 59
BP 136
EP 148
DI 10.1016/j.infsof.2014.09.008
PG 13
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA CB1ZT
UT WOS:000349427200008
ER

PT J
AU Zdravkovic, J
   Svee, EO
   Giannoulis, C
AF Zdravkovic, Jelena
   Svee, Eric-Oluf
   Giannoulis, Constantinos
TI Capturing consumer preferences as requirements for software product
   lines
SO REQUIREMENTS ENGINEERING
LA English
DT Article
DE Value; Value modeling; Consumer value; SPL; Goal modeling; Features;
   Requirements
ID CUSTOMER SATISFACTION; KANO MODEL; QUALITY; CONTEXT; VALUES
AB Delivering great consumer experiences in competitive market conditions requires software vendors to move away from traditional modes of thinking to an outside-in perspective, one that shifts their business to becoming consumer-centric. Requirements engineers operating in these conditions thus need new means to both capture real preferences of consumers and then relate them to requirements for software customized in different ways to fit anyone. Additionally, because system development models require inputs that are more concrete than abstract, the indistinct values of consumers need to be classified and formalized. To address this challenge, this study aims to establish a conceptual link between preferences of consumers and system requirements, using software product line (SPL) as a means for systematically accommodating the variations within the preferences. The novelty of this study is a conceptual model of consumer preference, which integrates generic value frameworks from both psychology and marketing, and a method for its transformation to requirements for SPL using a goal-oriented RE framework as the mediator. The presented artifacts are grounded in an empirical study related to the development of a system for online education.
C1 [Zdravkovic, Jelena; Svee, Eric-Oluf; Giannoulis, Constantinos] Stockholm Univ, Dept Comp & Syst Sci, DSV, S-16440 Kista, Sweden.
RP Zdravkovic, J (reprint author), Stockholm Univ, Dept Comp & Syst Sci, DSV, Forum 100, S-16440 Kista, Sweden.
EM jelenaz@dsv.su.se; eric-sve@dsv.su.se; constantinos@dsv.su.se
CR Andersson B, 2009, INF SYST E-BUS MANAG, V7, P143, DOI 10.1007/s10257-008-0084-2
   Batista T, 2008, EARL ASP WORKSH 12 I, P97
   Bresciani P, 2004, AUTON AGENT MULTI-AG, V8, P203, DOI 10.1023/B:AGNT.0000018806.20944.ef
   Chen CC, 2008, INT J PROD ECON, V114, P667, DOI 10.1016/j.ijpe.2008.02.015
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Dey AK, 2001, PERS UBIQUIT COMPUT, V5, P4, DOI 10.1007/s007790170019
   Epstein M., 1998, EUROPEAN MANAGEMENT, V16, P190, DOI 10.1016/S0263-2373(97)00087-X
   Geerts G. L., 2002, International Journal of Accounting Information Systems, V3, DOI 10.1016/S1467-0895(01)00020-3
   Gordijn J, 2000, LECT NOTES COMPUT SC, V1921, P40
   Gordijn van Eck J, 2009, COOPERATIVE INFORM S, P331
   Grau G, 2008, INFORM SOFTWARE TECH, V50, P76, DOI 10.1016/j.infsof.2007.10.006
   Hervas R, 2010, J UNIVERS COMPUT SCI, V16, P1539
   Holbrook MB, 1998, CONSUMER VALUE FRAME
   Ilayperuma T, 2010, P 25 ACM S APPL COMP
   Kang K., 1990, CMUSEI90TR21
   Kano N., 1984, J JAPANESE SOC QUALI, V14, P39
   Kaplan R., 2004, STRATEGY MAPS CONVER
   Kotler P., 1991, MARKETING MANAGEMENT
   Krueger CW, 2006, COMMUN ACM, V49, P37, DOI 10.1145/1183236.1183262
   Liaskos S, 2011, REQUIR ENG, V16, P227, DOI 10.1007/s00766-011-0129-9
   Lim PC, 1999, MANAG SERV QUAL, V9, P423, DOI 10.1108/09604529910304125
   Maslow Abraham, 1954, MOTIVATION PERSONALI
   Matzler K, 1998, TECHNOVATION, V18, P25, DOI 10.1016/S0166-4972(97)00072-2
   McCleskey J, 2009, 5 STRATEGIES ENHANCE
   Mylopoulos J, 2001, IEEE SOFTWARE, V18, P92, DOI 10.1109/52.903174
   Norwegian Social Science Data Services, EUR SOC SURV ESS DAT
   Osterwalder A., 2010, BUSINESS MODEL GENER
   PARASURAMAN A, 1988, J RETAILING, V64, P12
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Powell-Mantel S., 1999, J CONSUM RES, V25, P335
   Rokeach M, 1973, NATURE HUMAN VALUES
   SCHWARTZ SH, 1992, ADV EXP SOC PSYCHOL, V25, P1, DOI 10.1016/S0065-2601(08)60281-6
   Schwartz SH, 2001, J CROSS CULT PSYCHOL, V32, P519, DOI 10.1177/0022022101032005001
   Schwartz SH, 2005, VALORES COMPORTAMENT, P21
   Silva C, 2008, P 20 INT C SOFTW ENG, P472
   Silva C, 2011, P WER 11 RIO DE JAN
   Smith R, 2008, MOTIVATIONAL FACTORS
   Software Product Lines, TOOL VEND
   Svee E.O., 2012, ICSOB 2012 LNBIP, V114, P55
   Svee EO, 2011, LECT NOTES BUS INF P, V92, P67
   Svee EO, 2012, LECT NOTES BUS INF P, V112, P531
   van der Raadt B., 2005, Proceedings. 13th IEEE International Conference on Requirements Engineering
   van Lamsweerde A, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P249
   Wang T., 2010, INT J QUALITY RELIAB, V27, P173
   Weigand H, 2006, LECT NOTES COMPUT SC, V4001, P321
   Wikipedia, EL HLTH REC
   Xu QL, 2009, DESIGN STUD, V30, P87, DOI 10.1016/j.destud.2008.07.001
   Yu E, 1995, P C ORG COMP SYST CO, P226, DOI 10.1145/224019.224044
   Yu YJ, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P645
NR 49
TC 0
Z9 0
PU SPRINGER
PI NEW YORK
PA 233 SPRING ST, NEW YORK, NY 10013 USA
SN 0947-3602
EI 1432-010X
J9 REQUIR ENG
JI Requir. Eng.
PD MAR
PY 2015
VL 20
IS 1
BP 71
EP 90
DI 10.1007/s00766-013-0187-2
PG 20
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA CC4GE
UT WOS:000350309300004
ER

PT J
AU Gamez, N
   Fuentes, L
   Troya, JM
AF Gamez, Nadia
   Fuentes, Lidia
   Troya, Jose M.
TI Creating Self-Adapting Mobile Systems with Dynamic Software Product
   Lines
SO IEEE SOFTWARE
LA English
DT Article
ID MODELS; RUNTIME
C1 [Gamez, Nadia] Univ Malaga, GISUM, CAOSD Grp, Software Engn Grp, E-29071 Malaga, Spain.
   [Fuentes, Lidia] Univ Malaga, CAOSD Res Grp, E-29071 Malaga, Spain.
   [Fuentes, Lidia; Troya, Jose M.] Univ Malaga, Comp Sci, E-29071 Malaga, Spain.
   [Troya, Jose M.] Univ Malaga, GISUM, E-29071 Malaga, Spain.
RP Gamez, N (reprint author), Univ Malaga, GISUM, CAOSD Grp, Software Engn Grp, E-29071 Malaga, Spain.
EM nadia@lcc.uma.es; lff@lcc.uma.es; troya@lcc.uma.es
FU European INTER-TRUST [FP7-317731]; Spanish project [TIN2012-34840];
   FamiWare project [P09-TIC-5231]; MAGIC project [P12-TIC1814]
FX This work was supported by the European INTER-TRUST FP7-317731 project
   and the Spanish TIN2012-34840, FamiWare P09-TIC-5231, and MAGIC
   P12-TIC1814 projects.
CR Badii A., 2013, REQUIREMENTS SPECIFI
   Bencomo N, 2012, COMPUTER, V45, P36, DOI 10.1109/MC.2012.292
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bosh J., 2012, COMPUTER, V45, P28
   Cetina C, 2009, COMPUTER, V42, P37, DOI 10.1109/MC.2009.309
   Floch J, 2006, IEEE SOFTWARE, V23, P62, DOI 10.1109/MS.2006.61
   Gamez N, 2013, INFORM SOFTWARE TECH, V55, P563, DOI 10.1016/j.infsof.2012.06.012
   Gamez N, 2011, PERS UBIQUIT COMPUT, V15, P329, DOI 10.1007/s00779-010-0354-0
   Gamez N., 2012, P 2 INT WORKSH AD SE, P20
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139
   Hinchey M, 2012, COMPUTER, V45, P22, DOI 10.1109/MC.2012.332
   Jaroucheh Zakwan, 2010, Proceedings of the Fourth International Conference on Complex, Intelligent and Software Intensive Systems (CISIS 2010), DOI 10.1109/CISIS.2010.21
NR 13
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0740-7459
EI 1937-4194
J9 IEEE SOFTWARE
JI IEEE Softw.
PD MAR-APR
PY 2015
VL 32
IS 2
BP 104
EP 111
PG 8
WC Computer Science, Software Engineering
SC Computer Science
GA CD9WJ
UT WOS:000351450600018
ER

PT J
AU Pinto, M
   Gamez, N
   Fuentes, L
   Amor, M
   Horcas, JM
   Ayala, I
AF Pinto, Monica
   Gamez, Nadia
   Fuentes, Lidia
   Amor, Mercedes
   Miguel Horcas, Jose
   Ayala, Inmaculada
TI Dynamic Reconfiguration of Security Policies in Wireless Sensor Networks
SO SENSORS
LA English
DT Article
DE FamiWare; INTER-TRUST; self-protection; self-adaptation; security
   frameworks; dynamic software product lines
ID SOFTWARE PRODUCT LINES; MODELS; SYSTEM; MIDDLEWARE
AB Providing security and privacy to wireless sensor nodes (WSNs) is very challenging, due to the heterogeneity of sensor nodes and their limited capabilities in terms of energy, processing power and memory. The applications for these systems run in a myriad of sensors with different low-level programming abstractions, limited capabilities and different routing protocols. This means that applications for WSNs need mechanisms for self-adaptation and for self-protection based on the dynamic adaptation of the algorithms used to provide security. Dynamic software product lines (DSPLs) allow managing both variability and dynamic software adaptation, so they can be considered a key technology in successfully developing self-protected WSN applications. In this paper, we propose a self-protection solution for WSNs based on the combination of the INTER-TRUST security framework (a solution for the dynamic negotiation and deployment of security policies) and the FamiWare middleware (a DSPL approach to automatically configure and reconfigure instances of a middleware for WSNs). We evaluate our approach using a case study from the intelligent transportation system domain.
C1 [Pinto, Monica; Gamez, Nadia; Fuentes, Lidia; Amor, Mercedes; Miguel Horcas, Jose; Ayala, Inmaculada] Univ Malaga, Andalucia Tech, Dept Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
RP Pinto, M (reprint author), Univ Malaga, Andalucia Tech, Dept Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
EM pinto@lcc.uma.es; nadia@lcc.uma.es; lff@lcc.uma.es; pinilla@lcc.uma.es;
   horcas@lcc.uma.es; ayala@lcc.uma.es
RI Pinto, Monica/G-1891-2015
OI Pinto, Monica/0000-0002-5376-742X
FU European project [FP7-317731]; Spanish projects [TIN2012-34840,
   P09-TIC-5231, P12-TIC1814]; International Campus of Excellence Andalucia
   TECH
FX Research funded by the European FP7-317731 project, by the Spanish
   TIN2012-34840, P09-TIC-5231, P12-TIC1814 projects and by the
   International Campus of Excellence Andalucia TECH.
CR Autrel F., 2008, P 3 JOINT C SEC NETW, P273
   Basin D, 2006, ACM T SOFTW ENG METH, V15, P39, DOI 10.1145/1125808.1125810
   Bencomo N., 2008, P 2 INT WORKSH DYN S
   Blair G, 2009, COMPUTER, V42, P22, DOI 10.1109/MC.2009.326
   Bosch J, 2012, COMPUTER, V45, P28, DOI 10.1109/MC.2012.287
   Butun I, 2014, IEEE COMMUN SURV TUT, V16, P266, DOI 10.1109/SURV.2013.050113.00191
   Cetina C., 2009, IEEE COMPUT, V42, P37
   Cho EJ, 2013, SENSORS-BASEL, V13, P15863
   Cho H. S., 2012, CONVERGENCE HYBRID I, V7425, P645
   Dong WL, 2008, PROCEEDINGS OF THE INTERNATIONAL SYMPOSIUM ON ELECTRONIC COMMERCE AND SECURITY, P61
   Elrakaiby Y., 2014, ENG SECUR SOFTW SYST, V8364, P19
   ETSI Technical Committee Intelligent Transport System Intelligent Transport Systems (ITS), 2010, 1026371 ETSI TS
   Fayad M, 1999, BUILDING APPL FRAMEW
   Gamez N., 2011, P 12 INT C SOFTW REU, V6727, P102
   GAMEZ N, 2011, P 5 EUR C SOFTW ARCH, V6903, P164
   Gamez N, 2011, PERS UBIQUIT COMPUT, V15, P329, DOI 10.1007/s00779-010-0354-0
   Gheorghe G, 2011, LECT NOTES COMPUT SC, V7049, P350
   Gamez Nadia, 2015, IEEE Software, V32, DOI 10.1109/MS.2014.24
   Gomez N., 2011, THESIS U MALAGA MAAL
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Haugen O., 2012, SPLC 2012, V2, P266
   Heinzelman WB, 2004, IEEE NETWORK, V18, P6, DOI 10.1109/MNET.2004.1265828
   Hinchey M, 2012, COMPUTER, V45, P22, DOI 10.1109/MC.2012.332
   IBM 2005, 2005, AUT COMP WHIT PAP AR
   INTER-TRUST European Project, ICT201114 INTER TRUS
   Jaroucheh Z., 2010, P INT C COMPL INT SO
   Jrjens J., 2010, SECURE SYSTEMS DEV U
   Katt B., 2013, LECT NOTES COMPUTER, V7542, P169
   Khan M. K., 2013, INT J DISTRIB SENS N, V2013, P2
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220
   Lang U., 2011, ISSE 2010 SECURING E, P61, DOI 10.1007/978-3-8348-9788-6_6
   Lang Ulrich, 2010, Proceedings of the 2010 IEEE 2nd International Conference on Cloud Computing Technology and Science (CloudCom 2010), DOI 10.1109/CloudCom.2010.13
   Lee J., 2006, P 10 INT SOFTW PROD
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Levis P., 2004, P 1 USENIX ACM S NET, P15
   Liu T, 2003, ACM SIGPLAN NOTICES, V38, P107, DOI 10.1145/966049.781516
   Morin B., 2010, P IEEE ACM INT C AUT, P205, DOI 10.1145/1858996.1859040
   OCL 2014, 2014, OBJ CONSTR LANG 2 4
   OMG 2008, 2008, DAT DISTR SERV REAL
   Qiu Y, 2010, SENSORS-BASEL, V10, P3718, DOI 10.3390/s100403718
   Shi WB, 2013, INT J DISTRIB SENS N, DOI 10.1155/2013/730831
   Tan JJ, 2006, APPL ARTIF INTELL, V20, P353, DOI 10.1080/08839510500484298
   Tan JJ, 2004, ENG APPL ARTIF INTEL, V17, P783, DOI 10.1016/j.engappai.2004.08.036
   Toumi K., 2013, INTER TRUST APPROACH
   Wang JQ, 2014, SENSORS-BASEL, V14, P4225, DOI 10.3390/s140304225
NR 45
TC 0
Z9 0
PU MDPI AG
PI BASEL
PA POSTFACH, CH-4005 BASEL, SWITZERLAND
SN 1424-8220
J9 SENSORS-BASEL
JI Sensors
PD MAR
PY 2015
VL 15
IS 3
BP 5251
EP 5280
DI 10.3390/s150305251
PG 30
WC Chemistry, Analytical; Electrochemistry; Instruments & Instrumentation
SC Chemistry; Electrochemistry; Instruments & Instrumentation
GA CH6QK
UT WOS:000354160900035
PM 25746093
ER

PT J
AU Ma, L
   Artho, C
   Zhang, C
   Sato, H
AF Ma, Lei
   Artho, Cyrille
   Zhang, Cheng
   Sato, Hiroyuki
TI Efficient Testing of Software Product Lines via Centralization (Short
   Paper)
SO ACM SIGPLAN NOTICES
LA English
DT Article
DE Software Product Lines; automatic test generation; random testing;
   Software reliability and quality assurance; empirical studies
AB Software product line (SPL) engineering manages families of software products that share common features. However, cost-effective test case generation for an SPL is challenging. Applying existing test case generation techniques to each product variant separately may test common code in a redundant way. Moreover, it is difficult to share the test results among multiple product variants.
   In this paper, we propose the use of centralization, which combines multiple product variants from the same SPL and generates test cases for the entire system. By taking into account all variants, our technique generally avoids generating redundant test cases for common software components. Our case study on three SPLs shows that compared with testing each variant independently, our technique is more efficient and achieves higher test coverage.
C1 [Ma, Lei; Sato, Hiroyuki] Univ Tokyo, Tokyo 1138654, Japan.
   [Artho, Cyrille] AIST, Tsuchiura, Ibaraki, Japan.
   [Zhang, Cheng] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
RP Ma, L (reprint author), Univ Tokyo, Tokyo 1138654, Japan.
EM malei@satolab.itc.u-tokyo.ac.jp; c.artho@aist.go.jp;
   c16zhang@uwaterloo.ca; schuko@satolab.itc.u-tokyo.ac.jp
FU [SEUT] program from the University of Tokyo
FX This work was partially supported by the [SEUT] program from the
   University of Tokyo. We also thank the anonymous reviewers for their
   insightful suggestions to improve this paper.
CR Bruneton E., 2002, ADAPTABLE EXTENSIBLE
   Cabral I, 2010, LECT NOTES COMPUT SC, V6287, P241, DOI 10.1007/978-3-642-15579-6_17
   do Carmo Machado I., 2012, SIGSOFT SOFTW ENG NO, V37, P1
   Hamlet R., 1994, ENCY SOFTWARE ENG, P970
   Jaygarl H., 2010, P ISSTA, P159, DOI 10.1145/1831708.1831729
   Johansen M. F., 2012, P SPLC, P46
   Kastner C., 2012, P GPCE WORKSH FEAT O, P1
   Kim C. H. P., 2011, P 10 INT C ASP OR SO, P57
   Lindholm T., 2013, JAVA VIRTUAL MACHINE, V7
   Ma L, 2013, 2013 IEEE 37TH ANNUAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW), P691, DOI 10.1109/COMPSACW.2013.137
   Ma L., 2014, P ACM 29 ANN S APPL, P1086
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Pacheco C., 2007, 22 ACM SIGPLAN C OBJ, P815
   Paul C., 2001, SOFTWARE PRODUCT LIN
   Shi J., 2012, P INT C FUND APPR SO, P270
   Stoller S. D., 2001, P 8 INT SPIN WORKSH, P192
   Xu Z., 2013, P SPLC, P52
   Zhang S., 2011, P 2011 INT S SOFTW T, P353
NR 18
TC 0
Z9 0
PU ASSOC COMPUTING MACHINERY
PI NEW YORK
PA 2 PENN PLAZA, STE 701, NEW YORK, NY 10121-0701 USA
SN 0362-1340
EI 1558-1160
J9 ACM SIGPLAN NOTICES
JI ACM Sigplan Not.
PD MAR
PY 2015
VL 50
IS 3
BP 49
EP 52
DI 10.1145/2658761.2658768
PG 4
WC Computer Science, Software Engineering
SC Computer Science
GA CL7BG
UT WOS:000357124200007
ER

PT J
AU Tuzun, E
   Tekinerdogan, B
   Kalender, ME
   Bilgen, S
AF Tuzun, Eray
   Tekinerdogan, Bedir
   Kalender, Mert Emin
   Bilgen, Semih
TI Empirical evaluation of a decision support model for adopting software
   product line engineering
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product line engineering; Software product line transition
   strategies; Software product line engineering feasibility analysis;
   Decision support system; Systematic literature review; Case study design
AB Context: The software product line engineering (SPLE) community has provided several different approaches for assessing the feasibility of SPLE adoption and selecting transition strategies. These approaches usually include many rules and guidelines which are very often implicit or scattered over different publications. Hence, for the practitioners it is not always easy to select and use these rules to support the decision making process. Even in case the rules are known, the lack of automated support for storing and executing the rules seriously impedes the decision making process.
   Objective: We aim to evaluate the impact of a decision support system (DSS) on decision-making in SPLE adoption. In alignment with this goal, we provide a decision support model (DSM) and the corresponding DSS.
   Method: First, we apply a systematic literature review (SLR) on the existing primary studies that discuss and present approaches for analyzing the feasibility of SPLE adoption and transition strategies. Second, based on the data extraction and synthesis activities of the SLR, the required questions and rules are derived and implemented in the DSS. Third, for validation of the approach we conduct multiple case studies.
   Results: In the course of the SLR, 31 primary studies were identified from which we could construct 25 aspects, 39 questions and 312 rules. We have developed the DSS tool Transit-PL that embodies these elements.
   Conclusions: The multiple case study validation showed that the adoption of the developed DSS tool is justified to support the decision making process in SPLE adoption. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Tuzun, Eray] Middle E Tech Univ, Inst Informat, TR-06800 Ankara, Turkey.
   [Tekinerdogan, Bedir] Wageningen Univ, Informat Technol Grp, NL-6706 KN Wageningen, Netherlands.
   [Kalender, Mert Emin] Microsoft Corp, Redmond, WA 98052 USA.
   [Bilgen, Semih] Yeditepe Univ, Dept Comp Engn, TR-34755 Istanbul, Turkey.
RP Tuzun, E (reprint author), Middle E Tech Univ, Inst Informat, TR-06800 Ankara, Turkey.
EM e170994@metu.edu.tr; bedir.tekinerdogan@wur.nl; mertk@microsoft.com;
   semih.bilgen@yeditepe.edu.tr
CR Ahmed F., 2009, SOFTW QUAL J, V18, P195
   Ahmed F., 2006, J INTERPRETABILITY B, V1, P9
   Ahnassay A., 2011, EMPIRICAL EVALUATION, P1
   Bagheri E., 2012, AUTOMAT SOFTW ENG, V44, P1
   Bagheri E., 2014, REQUIR ENG, V19, P187
   Berger C., 2010, P 4 INT WORKSH VAR M, P151
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Bockle G., 2002, LNCS, V2379, P49
   Bockle G, 2004, IEEE SOFTWARE, V21, P23
   Bosch J., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370)
   BUHNE S, 2004, 5 INT WORKSH SOFTW P, V3014, P19
   Buhrdorf R, 2004, LECT NOTES COMPUT SC, V3014, P317
   Catal C., 2009, ACM SIGSOFT SOFTWARE, V34, P1, DOI DOI 10.1145/1640162.1640164
   Clements P, 2002, SOFTWARE PRODUCT LIN
   Clements P., 2001, SOFTWARE PRODUCT LIN, P608
   Clements P.C., 2007, FRAMEWORK SOFTWARE P
   Cohen S., 2002, CMUSEI2002TN017
   Ferreira Bastos J., 2011, 15 ANN C EV ASS SOFT, V41, P11
   Fritsch C., 2004, SOFTWARE PRODUCT LIN, P95
   Gacek C., 2001, 01301E IESE
   Jones L.G., 2002, SOFTWARE PROCESS IMP
   Jones L.G., 2005, CMUSEI2005TN028
   Kalender M.E., 2013, P 17 INT SOFTW PROD, P150
   Kircher M., 2006, 10 INT SOFTW PROD LI, P163, DOI 10.1109/SPLINE.2006.1691588
   Kitchenham B., 2002, PRINCIPLES SURVEY RE, V27, P20
   Kitchenham B., 2002, ACM SIGSOFT SOFTW EN, V27, P20, DOI 10.1145/511152.511155
   Kitchenham B., 2007, 2007001 EBSE
   Krueger C., 2010, 200805071R3, P1
   Krueger C., 2002, DATA SALIONS SOFTWAR
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Kuvaja P., 2011, SOFTW ENG TECH, V4980, P143
   McGregor JD, 2002, IEEE SOFTWARE, V19, P24, DOI 10.1109/MS.2002.1020282
   NIEMELA E, 2005, SPLC 05 P 9 INT C SO, V3714, P186, DOI 10.1007/11554844_21
   Northrop L., 2004, SOFTWARE PRODUCT LIN
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   Person C., 2009, STATE OF THE ART SUR
   Pick R., 2012, REV BUS INFORM SYST, V17, P7
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V49, P467
   Raatikainen M., 2004, CASE STUDY QUESTIONS
   Runeson P., 2008, EMPIR SOFTW ENG, V14, P131
   Schmid K., 2001, 25 ANN INT COMP SOFT
   Schmid K, 2002, IEEE SOFTWARE, V19, P50, DOI 10.1109/MS.2002.1020287
   Schmid K., 2011, P 5 WORKSH VAR MOD S, P119, DOI DOI 10.1145/1944892.1944907
   Schmid K, 2002, EUROMICRO CONF PROC, P272, DOI 10.1109/EURMIC.2002.1046172
   Schutz D., 2010, P 15 EUR C PATT LANG
   Sherif K, 2002, DECIS SUPPORT SYST, V33, P55, DOI 10.1016/S0167-9236(01)00130-0
   Simon D., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370)
   Tekinerdogan B, 2010, LECT NOTES COMPUT SC, V6287, P461, DOI 10.1007/978-3-642-15579-6_37
   Van Der Linden F., 2005, FAMILY EVALUATION FR
   Van Der Linden F., 2007, SOFTWARE PRODUCT LIN, P334
   van der Linden F, 2004, LECT NOTES COMPUT SC, V3154, P110
   Verlage M, 2005, PROC INT CONF SOFTW, P534
   Yin R.K., 2003, CASE STUDY RES DESIG, V5, P219, DOI 10.1046/j.1365-2648.2003.02790_1.x
NR 53
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD APR
PY 2015
VL 60
BP 77
EP 101
DI 10.1016/j.infsof.2014.12.007
PG 25
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA CB6IC
UT WOS:000349729700005
ER

PT J
AU Tsuchiya, R
   Washizaki, H
   Fukazawa, Y
   Kato, T
   Kawakami, M
   Yoshimura, K
AF Tsuchiya, Ryosuke
   Washizaki, Hironori
   Fukazawa, Yoshiaki
   Kato, Tadahisa
   Kawakami, Masumi
   Yoshimura, Kentaro
TI Recovering Traceability Links between Requirements and Source Code Using
   the Configuration Management Log
SO IEICE TRANSACTIONS ON INFORMATION AND SYSTEMS
LA English
DT Article
DE traceability recovery; configuration management log; commonality and
   variability analysis; software product line
AB Traceability links between requirements and source code are helpful in software reuse and maintenance tasks. However, manually recovering links in a large group of products requires significant costs and some links may be overlooked. Here, we propose a semi-automatic method to recover traceability links between requirements and source code in the same series of large software products. In order to support differences in representation between requirements and source code, we recover links by using the configuration management log as an intermediary. We refine the links by classifying requirements and code elements in terms of whether they are common to multiple products or specific to one. As a result of applying our method to real products that have 60KLOC, we have recovered valid traceability links within a reasonable amount of time. Automatic parts have taken 13 minutes 36 seconds, and non-automatic parts have taken about 3 hours, with a recall of 76.2% and a precision of 94.1%. Moreover, we recovered some links that were unknown to engineers. By recovering traceability links, software reusability and maintainability will be improved.
C1 [Tsuchiya, Ryosuke; Washizaki, Hironori; Fukazawa, Yoshiaki] Waseda Univ, Dept Comp Sci, Tokyo 1698555, Japan.
   [Kato, Tadahisa; Kawakami, Masumi] Hitachi Ltd, Yokohama Res Lab, Yokohama, Kanagawa 2440817, Japan.
   [Yoshimura, Kentaro] Hitachi Ltd, Hitachi Res Lab, Hitachi, Ibaraki 3191292, Japan.
RP Tsuchiya, R (reprint author), Waseda Univ, Dept Comp Sci, Tokyo 1698555, Japan.
EM ryousuke_t@asagi.waseda.jp
CR Ajila S, 2004, IEEE INT C INF REUS, P157, DOI 10.1109/IRI.2004.1431453
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arkley P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P385, DOI 10.1109/RE.2005.49
   Chen X., 2010, 25 IEEE ACM INT C AU, P505
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   De Lucia A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P839
   Jirapanthong W, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P506, DOI 10.1109/APSEC.2005.101
   Kaiya H., 2010, IEICE T INF SYST J D, VJ93-D, P1822
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kumaki K., 2012, MAPLE 2012 SPLC 12, V2, P115
   Mader P, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P171, DOI 10.1109/ICSM.2012.6405269
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mohalik S., 2012, 16 INT SOFTW PROD LI, V2, P186
   Pooley R., 2008, 3 INT C SOFTW ENG AD, P65
   Salton G, 1983, INTRO MODERN INFORM
   Tsuchiya R., 2013, 17 INT SOFTW PROD LI, P121
   Yoshimura K., 2006, P 6 ACM IEEE INT C E, P63, DOI 10.1145/1176887.1176897
NR 17
TC 0
Z9 0
PU IEICE-INST ELECTRONICS INFORMATION COMMUNICATIONS ENG
PI TOKYO
PA KIKAI-SHINKO-KAIKAN BLDG, 3-5-8, SHIBA-KOEN, MINATO-KU, TOKYO, 105-0011,
   JAPAN
SN 1745-1361
J9 IEICE T INF SYST
JI IEICE Trans. Inf. Syst.
PD APR
PY 2015
VL E98D
IS 4
BP 852
EP 862
DI 10.1587/transinf.2014EDP7199
PG 11
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA CK9WI
UT WOS:000356589800012
ER

PT J
AU Pascual, GG
   Lopez-Herrejon, RE
   Pinto, M
   Fuentes, L
   Egyed, A
AF Pascual, Gustavo G.
   Lopez-Herrejon, Roberto E.
   Pinto, Monica
   Fuentes, Lidia
   Egyed, Alexander
TI Applying multiobjective evolutionary algorithms to dynamic software
   product lines for reconfiguring mobile applications
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE DSPL; Dynamic reconfiguration; Evolutionary algorithms
ID GENETIC ALGORITHM; CONTEXT-AWARE; FRAMEWORK; OPTIMIZATION; ADAPTATION;
   SELECTION; MUSIC
AB Mobile applications require dynamic reconfiguration services (DRS) to self-adapt their behavior to the context changes (e.g., scarcity of resources). Dynamic Software Product Lines (DSPL) are a well-accepted approach to manage runtime variability, by means of late binding the variation points at runtime. During the system's execution, the DRS deploys different configurations to satisfy the changing requirements according to a multiobjective criterion (e.g., insufficient battery level, requested quality of service). Search-based software engineering and, in particular, multiobjective evolutionary algorithms (MOEAs), can generate valid configurations of a DSPL at runtime. Several approaches use MOEAs to generate optimum configurations of a Software Product Line, but none of them consider DSPLs for mobile devices. In this paper, we explore the use of MOEAs to generate at runtime optimum configurations of the DSPL according to different criteria. The optimization problem is formalized in terms of a Feature Model (FM), a variability model. We evaluate six existing MOEAs by applying them to 12 different FMs, optimizing three different objectives (usability, battery consumption and memory footprint). The results are discussed according to the particular requirements of a DRS for mobile applications, showing that PAES and NSGA-II are the most suitable algorithms for mobile environments. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Pascual, Gustavo G.; Pinto, Monica; Fuentes, Lidia] Univ Malaga, Dept Languages & Comp Sci, E-29071 Malaga, Spain.
   [Lopez-Herrejon, Roberto E.; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Syst Engn & Automat, A-4040 Linz, Austria.
RP Pascual, GG (reprint author), Univ Malaga, Dept Languages & Comp Sci, E-29071 Malaga, Spain.
EM gustavo@lcc.uma.es; roberto.lopez@jku.at; pinto@lcc.uma.es;
   lff@lcc.uma.es; alexander.egyed@jku.at
RI Pinto, Monica/G-1891-2015
OI Pinto, Monica/0000-0002-5376-742X
FU Spanish Government project [TIN2012-34840]; Andalusian Government
   [P09-TIC-5231, P12-TIC1814]; International Campus of Excellence
   Andalucia TECH; University of Malaga; Austrian Science Fund (FWF)
   project [P25289-N15]; Lise Meitner Fellowship [M1421-N15]
FX This work is funded by the Spanish Government project TIN2012-34840, by
   the Andalusian Government projects P09-TIC-5231 and P12-TIC1814, by the
   International Campus of Excellence Andalucia TECH and by the University
   of Malaga. It is also partially funded by the Austrian Science Fund
   (FWF) project P25289-N15 and by the Lise Meitner Fellowship M1421-N15.
CR Acher M, 2010, LECT NOTES COMPUT SC, V6138, P3, DOI 10.1007/978-3-642-13595-8_3
   Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benavides D., 2005, ADV INFORM SYSTEMS E, P381
   Brataas G., 2011, P 15 INT SOFTW PROD, V2, P37
   Canfora G, 2008, J SYST SOFTWARE, V81, P1754, DOI 10.1016/j.jss.2007.12.792
   Capilla R, 2014, J SYST SOFTWARE, V91, P3, DOI 10.1016/j.jss.2013.12.038
   Carlin A., 2011, P 10 INT C AUT AG MU, P157
   Cetina C, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P117, DOI 10.1109/SPLC.2008.13
   de Oliveira Barros M., 2011, 00062011 U FED EST R
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Diaz D., 2001, J FUNCTION LOGIC PRO, V6, P542
   Dinkelaker T., 2010, 1 INT WORKSH COMP OB, P11
   Djebbi O, 2007, 14TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P494
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Floch J, 2013, SOFTWARE PRACT EXPER, V43, P359, DOI 10.1002/spe.2116
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), DOI 10.1109/ICST.2012.92
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hansen E.A., 1997, 9750 U MASS AMH COMP
   Harman M., 2014, 18 INT SOFTW PROD LI, P5
   IBM, 2005, AUT COMP WHIT PAP AR
   Kastner C, 2009, PROC INT CONF SOFTW, P611, DOI 10.1109/ICSE.2009.5070568
   Knowles JD, 2000, EVOL COMPUT, V8, P149, DOI 10.1162/106365600568167
   Kotelysanskii A., 2014, P 14 INT C QUAL SOFT, P79
   Li J., 2012, PRACT APPL INTELL SY, V124, P459
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Matinlassi M, 2004, PROC INT CONF SOFTW, P127, DOI 10.1109/ICSE.2004.1317435
   Mirandola R, 2014, SCI COMPUT PROGRAM, V80, P356, DOI 10.1016/j.scico.2013.09.017
   Mizouni R, 2014, EXPERT SYST APPL, V41, P7549, DOI 10.1016/j.eswa.2014.05.049
   Morin B, 2009, LECT NOTES COMPUT SC, V5795, P690
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   Nebro AJ, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P876
   Pascual G.G., 2014, FUTUR GENER IN PRESS
   ROSENMULLER M, 2011, P INT C GEN PROGR CO, P3
   Rouvoy R, 2009, LECT NOTES COMPUT SC, V5525, P164
   Sacerdoti E.D., 1975, THESIS STANFORD CA U
   SARKER R, 2002, INT SER OPER RES MAN, V48, P177
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Seow SS, 2008, DESIGNING ENG TIME P
   Shen L., 2011, TOP PRODUCTIVITY SOF, P52
   Shi R., 2010, 2010 IEEE INT C PROG, V1, P665
   Soltani Samaneh, 2012, P 16 SPLC SALV BRAZ, P56, DOI 10.1145/2362536.2362548
   Trinidad P., 2007, P INT SOFTW PROD LIN, P51
   Tsang E., 1993, FDN CONSTRAINT SATIS, V289
   Van Veldhuizen D. A., 1999, THESIS AIR FORCE I T
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.2307/1165329
   Wada H, 2012, IEEE T SERV COMPUT, V5, P358, DOI 10.1109/TSC.2011.6
   White J., 2007, 11 INT SOFTW PROD LI, P129
   White J., 2009, P 13 INT SOFTW PROD, P11
   White J., 2008, SPLC, V2, P209
   White J, 2009, J SYST SOFTWARE, V82, P1268, DOI 10.1016/j.jss.2009.02.011
   Yao Y., 2009, P 2 INT C INT SCI IN, P358, DOI 10.1145/1655925.1655991
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E., 2001, SPEA2 IMPROVING STRE
NR 59
TC 0
Z9 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD MAY
PY 2015
VL 103
BP 392
EP 411
DI 10.1016/j.jss.2014.12.041
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA CE6TQ
UT WOS:000351971500026
ER

PT B
AU Capilla, R
AF Capilla, R
BE Callaos, N
   Nada, N
   Cherif, A
   Aveledo, M
TI Questions about domain analysis in product-lines architectural
   approaches
SO WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL 1,
   PROCEEDINGS: INFORMATION SYSTEMS
LA English
DT Proceedings Paper
CT World Multiconference on Systemics, Cybernetics and Informatics/5th
   International Conference on Information Systems, Analysis and Synthesis
   (ISAS 99)
CY JUL 31-AUG 04, 1999
CL ORLANDO, FL
SP Int Inst Informat & System, IEEE Comp Soc, Venezuela Chapter, World Org System & Cybernet, Int Federat Syst Res, Int Soc Syst Sci, Int Syst Inst, CUST, Int Inst Av Studies Syst Res & Cybernet, Soc Appl Syst Res, Cybernet & Human Knowing, Cent Univ Venezuela, Simon Bolivar Univ
DE software architectures; product-lines; domain analysis; market analysis;
   domain scoping; domain engineering
AB Software architecture is an emerging and strategic reuse technology for building software systems. The complexity for designing reusable architectural artifacts and the manual nature of these processes makes it difficult to automate the overall design process. In addition, the interconnection of the software components used in the construction of software systems is one of the problems that architectural approaches need to solve. From this point of view domain analysis plays an important role extracting the reusable information of problems to represent it under a domain model, but the way to perform such process is still a goal for the reuse community, To address some of these questions we discuss in this paper some of the problems related to domain analysis processes under an architectural reuse point of view and specifically whithin a product-line approach.
C1 Univ Seville, Fac Informat, E-41012 Seville, Spain.
RP Capilla, R (reprint author), Univ Seville, Fac Informat, Avda Reina Mercedes S-N, E-41012 Seville, Spain.
CR Bass L., 1998, SOFTWARE ARCHITECTUR
   CAPILLA R, 1998, 2 EUR REUS WORKSH MA
   CAPILLA R, 1997, 8 WORKSH I SOFTW REU
   CLEMENTS P, 1997, 8 WORKSH I SOFTW REU
   DUENAS JC, 1998, 2 EUR REUS WORKSH MA
   FRAKES B, 1997, 8 WORKSH I SOFTW REU
   GOMAA H, 1994, 3 INT C SOFTW REUS B
   MAYMIRDUCHARNE FA, 1997, 8 WORKSH I SOFTW REU
   NADA N, 1998, 2 EUR REUS WORKSH MA
   NING JQ, 1994, 3 INT C SOFTW REUS B
NR 10
TC 0
Z9 0
PU INT INST INFORMATICS & SYSTEMICS
PI ORLANDO
PA 14269 LORD BARCLAY DR, ORLANDO, FL 32837 USA
BN 980-07-5912-3
PY 1999
BP 606
EP 610
PG 5
WC Computer Science, Cybernetics; Computer Science, Information Systems;
   Computer Science, Interdisciplinary Applications; Computer Science,
   Software Engineering; Computer Science, Theory & Methods
SC Computer Science
GA BU36X
UT WOS:000175784700095
ER

PT J
AU Lopez-Herrejon, RE
   Linsbauer, L
   Egyed, A
AF Lopez-Herrejon, Roberto E.
   Linsbauer, Lukas
   Egyed, Alexander
TI A systematic mapping study of search-based software engineering for
   software product lines
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product line; Systematic mapping study; Search based software
   engineering; Evolutionary algorithm; Metaheuristics
ID EVOLUTIONARY ALGORITHMS; REUSE SCENARIO; VARIABILITY; MODEL; SELECTION;
   MUTATION; CONSTRAINTS; RELIABILITY; GENERATION
AB Context: Search-Based Software Engineering (SBSE) is an emerging discipline that focuses on the application of search-based optimization techniques to software engineering problems. Software Product Lines (SPLs) are families of related software systems whose members are distinguished by the set of features each one provides. SPL development practices have proven benefits such as improved software reuse, better customization, and faster time to market. A typical SPL usually involves a large number of systems and features, a fact that makes them attractive for the application of SBSE techniques which are able to tackle problems that involve large search spaces.
   Objective: The main objective of our work is to identify the quantity and the type of research on the application of SBSE techniques to SPL problems. More concretely, the SBSE techniques that have been used and at what stage of the SPL life cycle, the type of case studies employed and their empirical analysis, and the fora where the research has been published.
   Method: A systematic mapping study was conducted with five research questions and assessed 77 publications from 2001, when the term SBSE was coined, until 2014.
   Results: The most common application of SBSE techniques found was testing followed by product configuration, with genetic algorithms and multi-objective evolutionary algorithms being the two most commonly used techniques. Our study identified the need to improve the robustness of the empirical evaluation of existing research, a lack of extensive and robust tool support, and multiple avenues worthy of further investigation.
   Conclusions: Our study attested the great synergy existing between both fields, corroborated the increasing and ongoing interest in research on the subject, and revealed challenging open research questions. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Lopez-Herrejon, Roberto E.; Linsbauer, Lukas; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, A-4040 Linz, Austria.
RP Lopez-Herrejon, RE (reprint author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Altenbergerstr 69, A-4040 Linz, Austria.
EM roberto.lopez@jku.at; lukas.linsbauer@jku.at; alexander.egyed@jku.at
FU Austrian Science Fund (FWF) Projects [P25289-N15, P25513-N15]; Lise
   Meitner Fellowship [M1421-N15]
FX This research is partially funded by the Austrian Science Fund (FWF)
   Projects P25289-N15, P25513-N15, and Lise Meitner Fellowship M1421-N15.
   We thank Javier Ferrer, Francisco Chicano, and Enrique Alba for their
   help with the earlier versions of this work.
CR Afzal W., 2008, P 20 INT C SOFTW ENG, P488
   Al-Hajjaji Mustafa, 2014, SPLC 14
   Ali Nasir, 2011, ICSM, P153
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Assuncao W.K.G., 2013, BRACIS, P249
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Baller Hauke, 2014, ICST, P303
   Bastos J. F., 2011, 15 ANN C EV ASS SOFT, P11
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2010, ASE, P73, DOI DOI 10.1145/1858996.1859010
   Budgen D., 2008, P PPIG 2008 LANC U, P195
   Calvagna A, 2013, IEEE ICST WORKSHOP, P338, DOI 10.1109/ICSTW.2013.45
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Chen Sheng, 2011, SOFTW PROD LIN 15 IN, P35
   Clarke J., 2003, IEE Proceedings-Software, V150, DOI 10.1049/ip-sen:20030559
   Cleve A., 2013, 17 EUR C SOFTW MAINT
   Coello CAC, 2007, EVOLUTIONARY ALGORIT
   Cohen M.B., 2007, INT S SOFTW TEST AN, P129
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Colanzi TE, 2012, PROC INT CONF SOFTW, P1507, DOI 10.1109/ICSE.2012.6227050
   Colanzi Thelma E., 2013, P CMSBSE ICSE, P28
   Colanzi Thelma E., 2012, LNCS, V7515, P259
   Colanzi Thelma Elita, 2014, COMPSAC 14
   Colanzi Thelma Elita, 2014, SPLC 14
   Cruz J, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2229
   da Mota Silveira Neto Paulo Anselmo, 2011, Information and Software Technology, V53, DOI 10.1016/j.infsof.2010.12.003
   da Silva IF, 2011, SOFTWARE PRACT EXPER, V41, P899, DOI 10.1002/spe.1078
   Deb K., 2001, MULTIOBJECTIVE OPTIM
   de Freitas FG, 2011, LECT NOTES COMPUT SC, V6956, P18
   Del Rosso C, 2008, J SYST SOFTWARE, V81, P1, DOI 10.1016/j.jss.2007.07.006
   do Carmo Machado I., 2014, INFORM SOFTW TECHNOL, V56, P1183
   Eiben AE, 2003, INTRO EVOLUTIONARY C
   Engstrom E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Ensan Faezeh, 2012, CAISE, P613
   Ernesto Rafael, 2013, THESIS U WATERLOO WA
   Filho Joao Bosco Ferreira, 2013, 17 INT SOFTW PROD LI, P72
   Fischer S., 2014, INTERNATIONAL CONFER, ppp
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Garvin Brady J., 2011, EMPIR SOFTW ENG, V16, P61
   Goues C.L, 2014, LECT NOTES COMPUTER, V8636
   Goues C.L., 2013, SOFTW QUAL J, V21, P421
   Guizzo Giovani, 2013, P CHIL COMP C JCC 13
   Guizzo G, 2014, LECT NOTES COMPUT SC, V8636, P77
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Guo JM, 2013, IEEE INT CONF AUTOM, P301
   Harman M., 2014, 18 INT SOFTW PROD LI, P5
   Harman M, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2537853
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M., BABEL PIDGIN SBSE CA, V79, P247
   Haslinger Evelyn Nicole, 2013, ABS13117313 CORR
   Haslinger Evelyn Nicole, 2013, VAMOS, P16
   Henard C, 2013, IEEE ICST WORKSHOP, P188, DOI 10.1109/ICSTW.2013.30
   Henard C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1245
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Henard Christopher, 2012, ABS12115451 CORR
   Henard Christopher, 2013, P 17 INT SOFTW PROD, P62
   Henard Christopher, 2013, SPLC WORKSH, P126
   Heradio R, 2013, INT J SOFTW ENG KNOW, V23, P1177, DOI 10.1142/S0218194013500368
   Heradio R, 2012, EXPERT SYST APPL, V39, P7919, DOI 10.1016/j.eswa.2012.01.109
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Islam S, 2014, J SYST SOFTWARE, V88, P1, DOI 10.1016/j.jss.2013.07.040
   Johansen Martin Fagereng, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, DOI 10.1007/978-3-642-33666-9_18
   Johansen Martin Fagereng, 2012, SPLC, P46
   Kakola T., 2006, SOFTWARE PRODUCT LIN
   Kang K., 1990, CMUSEI90TR21
   Karimpour Reza, 2013, P CMSBSE ICSE, P34
   Kastner C, 2014, IEEE T SOFTWARE ENG, V40, P67, DOI 10.1109/TSE.2013.45
   Kitchenham B., 2007, EBSE200701 KEEL U UK
   Kitchenham BA, 2011, INFORM SOFTWARE TECH, V53, P638, DOI 10.1016/j.infsof.2010.12.011
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273, DOI 10.1109/ICSE.2004.1317449
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Li Jian, 2012, ADV INTELLIGENT SOFT, V124, P459
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Lopez-Herrejon RE, 2013, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSM.2013.58
   Lopez-Herrejon R.E., 2012, LNCS, V7515, P168
   Lopez-Herrejon R.E., ABS14062823 CORR
   Lopez-Herrejon R.E., 2011, SPLC, P181
   Lopez-Herrejon Roberto E., 2012, P VAMOS, P93
   Lopez-Herrejon Roberto E., 2014, ABS14015367 CORR
   Lopez-Herrejon Roberto E., 2014, CEC
   Lopez-Herrejon Roberto Erick, 2014, GECCO, P1255
   Luke S., 2009, ESSENTIALS METAHEURI
   Mahdavi-Hezavehi S, 2013, INFORM SOFTWARE TECH, V55, P320, DOI 10.1016/j.infsof.2012.08.010
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Marler RT, 2004, STRUCT MULTIDISCIP O, V26, P369, DOI 10.1007/s00158-003-0368-6
   Metzger A., 2014, FOSE, P70
   Mohabbati B, 2013, INFORM SOFTWARE TECH, V55, P1845, DOI 10.1016/j.infsof.2013.05.006
   Mohabbati Bardia, 2011, DEV CONFIGURATION SE, P1606
   Muhammad Irfan Ullah, 2009, SERG200903
   Muller Johannes, 2011, SOFTW PROD LIN C SPL, P15
   Murashkin Alexandr, 2013, P 17 INT SOFTW PROD, P111
   Nohrer Alexander, 2011, SOFTW PROD LIN 15 IN, P25
   Ognjanovic Ivana, 2012, IEEE SCC, P25
   Olaechea R., 2012, P 4 INT WORKSH NONF
   Olaechea Rafael, 2014, SPLC 14
   Pascual GG, 2013, PROCEEDINGS OF THE 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE ENGINEERING FOR ADAPTIVE AND SELF-MANAGING SYSTEMS (SEAMS 2013), P73
   Pascual Gustavo G., 2013, LECT NOTES COMPUTER, V7957, P282
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Petersen K., 2008, EASE 08, P68
   Petke J., 2014, LNCS, V8599, P137
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Poli R., 2008, FIELD GUIDE GENETIC
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Raiha O, 2011, RELATING SOFTWARE REQUIREMENTS AND ARCHITECTURES, P307, DOI 10.1007/978-3-642-21001-3_18
   Roberto E, 2011, SSBSE 2011
   Rozenberg G, 2012, HDB NATURAL COMPUTIN
   Rubin J., 2013, 17 INT SOFTW PROD LI, P101
   Russell Stuart, 2010, ARTIFICIAL INTELLIGE
   Sanchez Ana B., 2014, ICST, P41
   Sanchez Luis Emiliano, 2013, P CMSBSE ICSE, P39
   Sayyad Abdel Salam, 2013, P CMSBSE ICSE, P22
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492
   SAYYAD AS, 2013, ASE, P465
   Schulze S., 2013, FOSD GPCE, P33
   Segura S, 2011, IET SOFTW, V5, P70, DOI 10.1049/iet-sen.2009.0096
   Segura S, 2014, EXPERT SYST APPL, V41, P3975, DOI 10.1016/j.eswa.2013.12.028
   Segura Sergio, 2012, P 6 INT WORKSH VAR M, P63
   Serajzadeh Hadi, 2011, SPLC WORKSH, P12
   Shi Runyu, 2010, P PIC, P665
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Tan Lei, 2013, 36 AUSTR COMP SCI C, P125
   Tang JF, 2013, OMEGA-INT J MANAGE S, V41, P536, DOI 10.1016/j.omega.2012.07.003
   Thum T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Ullah MI, 2010, J SYST SOFTWARE, V83, P2496, DOI 10.1016/j.jss.2010.07.049
   van der Linden F., 2007, SOFTWARE PRODUCT LIN
   Van Veldhuizen D. A., 1999, THESIS
   Wang RZ, 2012, PROCEDIA COMPUT SCI, V12, P13, DOI 10.1016/j.procs.2012.09.023
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   Wang Shuai, 2014, SPLC
   Wang S, 2014, LECT NOTES COMPUT SC, V8636, P199
   Wang Ying-lin, 2014, Journal of Shanghai Jiaotong University (Science), V19, DOI 10.1007/s12204-013-1468-0
   Wohlin C., 2014, EASE, P38
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Wohlin C., 2012, EXPT SOFTWARE ENG
   Wu Zhiqiao, 2010, SEDM JUN, P69
   Wu ZQ, 2011, INT J INF TECH DECIS, V10, P811, DOI 10.1142/S0219622011004580
   Xu Z., 2013, P SPLC, P52
   Yi Li, 2012, REQ ENG C RE 2012 20, P141, DOI DOI 10.1109/RE.2012.6345798
   Yoo S, 2013, EMPIR SOFTW ENG, V18, P550, DOI 10.1007/s10664-013-9247-y
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stvr.430, 10.1002/stv.430]
   Yu Linbin, 2014, HASE, P65
   Zhang Hongxia, 2013, IEEE SCC, P751
   Zhang Wei, 2011, LNCS, V6727, P4
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
   Zitzler E., EVOLUTIONARY MULTIOB, P871
NR 152
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD MAY
PY 2015
VL 61
BP 33
EP 51
DI 10.1016/j.infsof.2015.01.008
PG 19
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA CF7PI
UT WOS:000352748400003
ER

PT J
AU Murguzur, A
   Trujillo, S
   Truong, HL
   Dustdar, S
   Ortiz, O
   Sagardui, G
AF Murguzur, Aitor
   Trujillo, Salvador
   Hong-Linh Truong
   Dustdar, Schahram
   Ortiz, Oscar
   Sagardui, Goiuria
TI Run-Time Variability for Context-Aware Smart Workflows
SO IEEE SOFTWARE
LA English
DT Article
ID SOFTWARE PRODUCT LINES
AB The proposed framework lets developers model and manage process variability by composing base models, fragments, and variability models and by deferring binding to run time. Base models and fragments are reusable, thereby reducing the modeling effort for developing variants.
C1 [Murguzur, Aitor; Trujillo, Salvador] IK4 Ikerlan, Gipuzkoa, Spain.
   [Dustdar, Schahram] Vienna Univ Technol, Comp Sci, Vienna, Austria.
   [Ortiz, Oscar] Tech Univ Madrid, Madrid, Spain.
   [Sagardui, Goiuria] Mondragon Univ, Embedded Software Res Grp, Gipuzkoa, Spain.
RP Murguzur, A (reprint author), IK4 Ikerlan, Gipuzkoa, Spain.
EM amurguzur@ikerlan.es; strujillo@ikerlan.es; truong@dsg.tuwien.ac.at;
   dustdar@dsg.tuwien.ac.at; oscar.ortiz@upm.es; gsagardui@mondragon.edu
RI Dustdar, Schahram/G-9877-2015
OI Dustdar, Schahram/0000-0001-6872-8821
CR Alferez GH, 2014, J SYST SOFTWARE, V91, P24, DOI 10.1016/j.jss.2013.06.034
   Ardagna D, 2007, IEEE T SOFTWARE ENG, V33, P369, DOI 10.1109/TSE.2007.1011.
   Baresi L, 2012, COMPUTER, V45, P42, DOI 10.1109/MC.2012.289
   Benavides D., 2013, LECT NOTES COMPUT SC, V7925, P160
   Capilla R, 2011, COMPUTER, V44, P93, DOI 10.1109/MC.2011.382
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Giner P, 2010, IEEE PERVAS COMPUT, V9, P18, DOI 10.1109/MPRV.2010.14
   Hallerbach A, 2010, J SOFTW MAINT EVOL-R, V22, P519, DOI 10.1002/smr.491
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Murguzur A., 2014, INT J COOPERATIVE IN, V23
   Murguzur A., 2014, LNCS, V8484, P241
   Rocha RD, 2013, INFORM SOFTWARE TECH, V55, P1355, DOI 10.1016/j.infsof.2013.02.007
   Smanchat S., 2008, P 6 INT C ADV MOB CO, P414, DOI 10.1145/1497185.1497274
   Valenca G., 2013, INT J COMPUTER SCI I, V5
   Wieland M, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS, P239, DOI 10.1109/PERCOM.2008.27
NR 15
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0740-7459
EI 1937-4194
J9 IEEE SOFTWARE
JI IEEE Softw.
PD MAY-JUN
PY 2015
VL 32
IS 3
BP 52
EP 60
PG 9
WC Computer Science, Software Engineering
SC Computer Science
GA CG8NW
UT WOS:000353566000011
ER

PT B
AU Diaz-Herrera, JL
   Thomas, BB
AF Diaz-Herrera, JL
   Thomas, BB
BE Callaos, N
   Nada, N
   Cherif, A
   Aveledo, M
TI Model-based systematic reuse: an analysis of OOT support
SO WORLD MULTICONFERENCE ON SYSTEMICS, CYBERNETICS AND INFORMATICS, VOL 1,
   PROCEEDINGS: INFORMATION SYSTEMS
LA English
DT Proceedings Paper
CT World Multiconference on Systemics, Cybernetics and Informatics/5th
   International Conference on Information Systems, Analysis and Synthesis
   (ISAS 99)
CY JUL 31-AUG 04, 1999
CL ORLANDO, FL
SP Int Inst Informat & System, IEEE Comp Soc, Venezuela Chapter, World Org System & Cybernet, Int Federat Syst Res, Int Soc Syst Sci, Int Syst Inst, CUST, Int Inst Av Studies Syst Res & Cybernet, Soc Appl Syst Res, Cybernet & Human Knowing, Cent Univ Venezuela, Simon Bolivar Univ
DE reuse; models; product lines
AB Modeling is a key activity in building industrial strength products. We contend that the causal relationship between building model solutions and developing products from these solutions provides a sound basis for industrial-strength software engineering. We illustrate the impact of modern software technology on the two fundamental, complementary sets of activities of domain engineering and application engineering. This is presented within a scheme for integrating design abstractions, such as architectural styles, frameworks, and patterns, with domain models and actual system construction. We present our experiences with model-based development with concrete examples.
C1 So Polytech State Univ, Dept Comp Sci, Marietta, GA 30060 USA.
RP Diaz-Herrera, JL (reprint author), So Polytech State Univ, Dept Comp Sci, 1100 S Marietta Pkwy, Marietta, GA 30060 USA.
CR *ACM, 1998, COMMUN ACM, V41, P37
   COHEN, 1995, CMUSEI95SR024
   DIAZHERRERA JL, OPPSLA WORLSH 26 OBJ
   JACOBSON, 1997, SOFTWARE REUSE ARCHI
   Pahl G., 1996, ENG DESIGN SYSTEMATI
   Withey J., 1996, CMUSEI96TR010
NR 6
TC 0
Z9 0
PU INT INST INFORMATICS & SYSTEMICS
PI ORLANDO
PA 14269 LORD BARCLAY DR, ORLANDO, FL 32837 USA
BN 980-07-5912-3
PY 1999
BP 615
EP 617
PG 3
WC Computer Science, Cybernetics; Computer Science, Information Systems;
   Computer Science, Interdisciplinary Applications; Computer Science,
   Software Engineering; Computer Science, Theory & Methods
SC Computer Science
GA BU36X
UT WOS:000175784700097
ER

PT J
AU Galindo, JA
   Dhungana, D
   Rabiser, R
   Benavides, D
   Botterweck, G
   Grunbacher, P
AF Galindo, Jose A.
   Dhungana, Deepak
   Rabiser, Rick
   Benavides, David
   Botterweck, Goetz
   Grunbacher, Paul
TI Supporting distributed product configuration by integrating
   heterogeneous variability modeling approaches
SO INFORMATION AND SOFTWARE TECHNOLOGY
LA English
DT Article
DE Software product lines; Product configuration; Automated analysis
ID FAMILIES; LINES
AB Context: In industrial settings products are developed by more than one organization. Software vendors and suppliers commonly typically maintain their own product lines, which contribute to a larger (multi) product line or software ecosystem. It is unrealistic to assume that the participating organizations will agree on using a specific variability modeling technique-they will rather use different approaches and tools to manage the variability of their systems.
   Objective: We aim to support product configuration in software ecosystems based on several variability models with different semantics that have been created using different notations.
   Method: We present an integrative approach that provides a unified perspective to users configuring products in multi product line environments, regardless of the different modeling methods and tools used internally. We also present a technical infrastructure and a prototype implementation based on web services.
   Results: We show the feasibility of the approach and its implementation by using it with the three most widespread types of variability modeling approaches in the product line community, i.e., feature-based, OVM-style, and decision-oriented modeling. To demonstrate the feasibility and flexibility of our approach, we present an example derived from industrial experience in enterprise resource planning. We further applied the approach to support the configuration of privacy settings in the Android ecosystem based on multiple variability models. We also evaluated the performance of different model enactment strategies used in our approach.
   Conclusions: Tools and techniques allowing stakeholders to handle variability in a uniform manner can considerably foster the initiation and growth of software ecosystems from the perspective of software reuse and configuration. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Galindo, Jose A.; Benavides, David] Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
   [Dhungana, Deepak] Siemens AG Osterreich, Corp Technol, Vienna, Austria.
   [Botterweck, Goetz] Univ Limerick, Lero The Irish Software Engn Res Ctr, Limerick, Ireland.
   [Rabiser, Rick; Grunbacher, Paul] Johannes Kepler Univ Linz, Christian Doppler Lab MEVSS, A-4040 Linz, Austria.
   [Galindo, Jose A.] INRIA Rennes, Diverse Team, Rennes, France.
RP Galindo, JA (reprint author), Univ Seville, Dept Comp Languages & Syst, Seville, Spain.
EM jagalindo@us.es; deepak.dhungana@siemens.com; rick.rabiser@jku.at;
   benavides@us.es; goetz.botterweck@lero.ie; paul.gruenbacher@jku.at
FU Science Foundation Ireland [03/CE2/I303_1, 10/CE/I1855]; Christian
   Doppler Forschungsgesellschaft (Austria); Siemens VAI Metals
   Technologies; Siemens Corporate Technology; European Commission (FEDER);
   Spanish government [TIN2012-32273]; Andalusian government under Talentia
   program; COPAS project [TIC-1867]
FX This work was supported, in part, by Science Foundation Ireland Grants
   03/CE2/I303_1 and 10/CE/I1855 to Lero; by the Christian Doppler
   Forschungsgesellschaft (Austria), Siemens VAI Metals Technologies, and
   Siemens Corporate Technology; by the European Commission (FEDER), by the
   Spanish government under TAPAS (TIN2012-32273) project and the
   Andalusian government under Talentia program and the COPAS (TIC-1867)
   project. Also, we would like to express special thanks to Dominik
   Seichter for his previous contributions to this research.
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Alonso G., 2004, WEB SERVICES CONCEPT
   Benavides D., 2014, 8 INT WORKSH VAR MOD, P5
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benavides D., 2013, SYSTEMS SOFTWARE VAR, P163
   Berger T., 2013, 7 INT WORKSH VAR MOD
   Bezivin J, 2005, LECT NOTES COMPUT SC, V3599, P33
   Blanc X., 2004, LNCS, V3599, P17
   Bosch J., 2009, SPLC 09, P111
   Bosch J, 2010, J SYST SOFTWARE, V83, P67, DOI 10.1016/j.jss.2009.06.051
   Bosch J, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1183236.1183263
   Botterweck G., 2009, 3 INT WORKSH VAR MOD, V29, P165
   Buhne S, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P41, DOI 10.1109/RE.2005.45
   Burns J., 2008, DEV SECURE MOBILE AP
   Chen L., 2009, SPLC 2009, P81
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Clotet R., 2008, 2 INT WORKSH VAR MOD, P43
   Consortium S.P., 1991, SPC91122MC
   Czarnecki K., 2006, Communications of the ACM, V49, DOI 10.1145/1183236.1183267
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K., 2012, VAMOS, P173
   Deelstra S, 2005, J SYST SOFTWARE, V74, P173, DOI 10.1016/j.jss.2003.11.012
   Dhungana D., 2013, 7 INT WORKSH VAR MOD
   Dhungana D, 2010, J SYST SOFTWARE, V83, P1108, DOI 10.1016/j.jss.2010.02.018
   Dhungana D., 2011, 15 INT SOFTW PROD LI, P120
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Enck W., 2011, USENIX SEC S, V2, P2
   Enck W, 2009, IEEE SECUR PRIV, V7, P50, DOI 10.1109/MSP.2009.26
   Galindo J.A., 2014, 01 ETSII
   Hartmann H., 2009, SPLC 2009, P191
   Hohpe G., 2003, ENTERPRISE INTEGRATI
   Holl G., 2011, 5 INT WORKSH VAR MOD, P21
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Hubaux A., 2009, SPLC 2009
   Hubaux A, 2010, LECT NOTES COMPUT SC, V6182, P106, DOI 10.1007/978-3-642-14192-8_12
   Huhns MN, 2005, IEEE INTERNET COMPUT, V9, P75, DOI 10.1109/MIC.2005.21
   Kang K., 1990, CMUSEI90TR21
   Lettner D., 2013, MAPLE SCALE 2013 17, P52
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   MacKenzie S., 1993, INTERCHI 93 C HUM FA, P488
   Mendonca M, 2010, SCI COMPUT PROGRAM, V75, P311, DOI 10.1016/j.scico.2009.12.004
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Moser T., 2010, EM TECHN FACT AUT ET, P1
   Olaechea R., 2012, 4 INT WORKSH NONF SY, P2
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Rabiser R, 2012, IEEE INT CONF AUTOM, P110, DOI 10.1145/2351676.2351693
   Rabiser R., 2007, IEEE INTELL SYST, V22, P78
   Rabiser R., 2009, 42 HAW INT C SYST SC, P1
   Rabiser R, 2010, INFORM SOFTWARE TECH, V52, P324, DOI 10.1016/j.infsof.2009.11.001
   Rabiser R, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P508, DOI 10.1109/SEAA.2009.13
   Rabiser R, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P141
   Reiser M.-O., 2009, HICSS 09, P1
   Reiser M.-O., 2006, 14 IEEE INT REQ ENG, P149, DOI 10.1109/RE.2006.39
   Reiser M.-O., 2009, 42 HAW INT C SYST SC, P1
   Roos-Frantz F., 2012, 16 INT SOFTW PROD LI, V2, P250
   Roos-Frantz F., 2011, SOFTW QUAL J, P1
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schaefer I., 2012, INT J SOFTWARE TOOLS, V14, P477
   Schmid K, 2010, LECT NOTES COMPUT SC, V6287, P151, DOI 10.1007/978-3-642-15579-6_11
   Schmid K., 2011, 5 INT WORKSH VAR MOD, P119
   Segura S, 2011, IET SOFTW, V5, P70, DOI 10.1049/iet-sen.2009.0096
   Segura S., 2012, 6 INT WORKSH VAR MOD, P63
   Segura S, 2011, INFORM SOFTWARE TECH, V53, P245, DOI 10.1016/j.infsof.2010.11.002
   Seibel A, 2010, SOFTW SYST MODEL, V9, P493, DOI 10.1007/s10270-009-0146-z
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Svendsen A, 2010, LECT NOTES COMPUT SC, V6287, P106, DOI 10.1007/978-3-642-15579-6_8
   THUM T, 2009, 31 INT C SOFTW ENG I, P254
   Turner H., 2012, BUILDING CLOUD BASED
   Van Lamsweerde A., 2001, P 5 IEEE INT S REQ E, P249
   van Ommering R, 2005, IEEE T SOFTWARE ENG, V31, P537, DOI 10.1109/TSE.2005.84
   Vierhauser M., 2005, 36 INT C SOFTW ENG I, P125
   Wolfinger R, 2008, SEVENTH INTERNATIONAL CONFERENCE ON COMPOSITION-BASED SOFTWARE SYSTEMS, PROCEEDINGS, P21, DOI 10.1109/ICCBSS.2008.30
NR 73
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0950-5849
EI 1873-6025
J9 INFORM SOFTWARE TECH
JI Inf. Softw. Technol.
PD JUN
PY 2015
VL 62
BP 78
EP 100
DI 10.1016/j.infsof.2015.02.002
PG 23
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA CG3KL
UT WOS:000353179000005
ER

PT J
AU Kanda, T
   Ishio, T
   Inoue, K
AF Kanda, Tetsuya
   Ishio, Takashi
   Inoue, Katsuro
TI Approximating the Evolution History of Software from Source Code
SO IEICE TRANSACTIONS ON INFORMATION AND SYSTEMS
LA English
DT Article
DE software evolution; software product line; visualization
ID SYSTEM
AB Once a software product has been released, a large number of software products may be derived from an original single product. Management and maintenance of product variants are important, but those are hardly cared because developers do not make efforts for the further maintainability in the initial phase of software development. However, history of products would be lost in typical cases and developers have only source code of products in the worst case. In this paper, we approximate the evolution history of software products using source code of them. Our key idea is that two successive products are the most similar pair of products in evolution history, and have many similar source files. We did an experiment to compare the analysis result with actual evolution history. The result shows 78% (on average) of edges in the extracted trees are consistent with the actual evolution history of the products.
C1 [Kanda, Tetsuya; Ishio, Takashi; Inoue, Katsuro] Osaka Univ, Grad Sch Informat Sci & Technol, Suita, Osaka 5650871, Japan.
RP Kanda, T (reprint author), Osaka Univ, Grad Sch Informat Sci & Technol, 2-2 Yamadaoka, Suita, Osaka 5650871, Japan.
EM t-kanda@ist.osaka-u.ac.jp; ishio@ist.osaka-u.ac.jp;
   inoue@ist.osaka-u.ac.jp
FU Kakenhi kiban [25220003]; Osaka University Program for Promoting
   International Joint Research "Software License Evolution Analysis"
FX This work is supported by Kakenhi kiban (S), No.25220003, and Osaka
   University Program for Promoting International Joint Research, "Software
   License Evolution Analysis".
CR Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Godfrey MW, 2005, IEEE T SOFTWARE ENG, V31, P166, DOI 10.1109/TSE.2005.28
   Hemel A., 2012, P WORK C REV ENG, P357
   Inoue K, 2012, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2012.6227181
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kanda T., 2013, P 17 INT SOFTW PROD, P141
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Kawrykow D., 2011, P INT C SOFTW ENG, P351
   Koschke R, 2009, SOFTWARE QUAL J, V17, P331, DOI 10.1007/s11219-009-9077-8
   Krueger C.W., 2001, LECT NOTES COMPUTER, V2290, P282
   Lavoie T., 2012, P WCRE, P325
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lucia, 2012, P WORK C MIN SOFTW R, P74
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Rubin J., 2012, P 16 INT SOFTW PROD, P156
   Tenev V., 2012, P ICPC, P259
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Weissgerber P., 2006, P 21 INT C AUT SOFTW, P231
   Yamamoto T, 2005, LECT NOTES COMPUT SC, V3547, P530
   Yoshimura K., 2012, P 6 INT WORKSH SOFTW, P96
   Yoshimura K., 2008, P MSR 08, P11, DOI 10.1145/1370750.1370753
NR 23
TC 0
Z9 0
PU IEICE-INST ELECTRONICS INFORMATION COMMUNICATIONS ENG
PI TOKYO
PA KIKAI-SHINKO-KAIKAN BLDG, 3-5-8, SHIBA-KOEN, MINATO-KU, TOKYO, 105-0011,
   JAPAN
SN 1745-1361
J9 IEICE T INF SYST
JI IEICE Trans. Inf. Syst.
PD JUN
PY 2015
VL E98D
IS 6
BP 1185
EP 1193
DI 10.1587/transinf.2014EDP7286
PG 9
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA CO2QL
UT WOS:000359001600009
ER

PT J
AU Dermeval, D
   Tenorio, T
   Bittencourt, II
   Silva, A
   Isotani, S
   Ribeiro, M
AF Dermeval, Diego
   Tenorio, Thyago
   Bittencourt, Ig Ibert
   Silva, Alan
   Isotani, Seiji
   Ribeiro, Marcio
TI Ontology-based feature modeling: An empirical study in changing
   scenarios
SO EXPERT SYSTEMS WITH APPLICATIONS
LA English
DT Article
DE Feature modeling; Ontology; Software product line; Empirical software
   engineering
ID SOFTWARE PRODUCT LINES
AB A software product line (SPL) is a set of software systems that have a particular set of common features and that satisfy the needs of a particular market segment or mission. Feature modeling is one of the key activities involved in the design of SPLs. The feature diagram produced in this activity captures the commonalities and variabilities of SPLs. In some complex domains (e.g., ubiquitous computing, autonomic systems and context-aware computing), it is difficult to foresee all functionalities and variabilities a specific SPL may require. Thus, Dynamic Software Product Lines (DSPLs) bind variation points at runtime to adapt to fluctuations in user needs as well as to adapt to changes in the environment. In this context, relying on formal representations of feature models is important to allow them to be automatically analyzed during system execution. Among the mechanisms used for representing and analyzing feature models, description logic (DL) based approaches demand to be better investigated in DSPLs since it provides capabilities, such as automated inconsistency detection, reasoning efficiency, scalability and expressivity. Ontology is the most common way to represent feature models knowledge based on DL reasoners. Previous works conceived ontologies for feature modeling either based on OWL classes and properties or based on OWL individuals. However, considering change or evolution scenarios of feature models, we need to compare whether a class-based or an individual-based feature modeling style is recommended to describe feature models to support SPLs, and especially its capabilities to deal with changes in feature models, as required by DSPLs. In this paper, we conduct a controlled experiment to empirically compare two approaches based on each one of these modeling styles in several changing scenarios (e.g., add/remove mandatory feature, add/remove optional feature and so on). We measure time to perform changes, structural impact of changes (flexibility) and correctness for performing changes in our experiment. Our results indicate that using OWL individuals requires less time to change and is more flexible than using OWL classes and properties. These results provide insightful assumptions towards the definition of an approach relying on reasoning capabilities of ontologies that can effectively support products reconfiguration in the context of DSPL. (C) 2015 Elsevier Ltd. All rights reserved.
C1 [Dermeval, Diego] Fed Univ Campina Grande UFCG, Comp & Syst Dept, BR-58109900 Campina Grande, PB, Brazil.
   [Dermeval, Diego] Fed Univ Alagoas UFAL, Penedo, BR-57200000 Penedo, AL, Brazil.
   [Tenorio, Thyago; Bittencourt, Ig Ibert; Silva, Alan; Ribeiro, Marcio] Fed Univ Alagoas UFAL, Comp Inst, BR-57072970 Maceio, AL, Brazil.
   [Isotani, Seiji] Univ Sao Paulo, Inst Math & Computat Sci, BR-13566590 Sao Carlos, SP, Brazil.
RP Dermeval, D (reprint author), Fed Univ Campina Grande UFCG, Comp & Syst Dept, R Aprigio Veloso 882, BR-58109900 Campina Grande, PB, Brazil.
EM diegodermeval@copin.ufcg.edu.br; ttmo@ic.ufal.br; ig.ibert@ic.ufal.br;
   alanpedro@ic.ufal.br; sisotani@icmc.usp.br; marcio@ic.ufal.br
RI Isotani, Seiji/A-1651-2010; Bittencourt, Ig Ibert/G-3504-2012; Cepid,
   CeMEAI/J-2417-2015
FU Conselho Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq);
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior (CAPES)
FX This work has been supported by the Brazilian institutions: Conselho
   Nacional de Desenvolvimento Cientifico e Tecnologico (CNPq) and
   Coordenacao de Aperfeicoamento de Pessoal de Nivel Superior (CAPES).
CR Antoniou G., 2004, HDB ONTOLOGIES, P67
   Asadi M., 2012, LECT NOTES COMPUTER, V7532, P397
   Baader F., DESCRIPTION LOGIC HD
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benavides D., 2013, LECT NOTES COMPUT SC, V7925, P160
   Boskovic M, 2010, INT J SOFTW ENG KNOW, V20, P459, DOI 10.1142/S0218194010004827
   Clements P.C., 2001, SEI SERIES SOFTWARE
   Czarnecki K., 2006, P 10 INT SOFTW PROD, V2, P41
   Dargie W, 2009, CH CRC STUD INFO SER, P1
   Festing M.F., 2015, THE ANOVA
   Filho J. a. B. F., 2012, P 16 INT SOFTW PROD, V2, P188
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Guarino N., 1998, FORM ONT INF SYST P
   Guo JM, 2012, EXPERT SYST APPL, V39, P4987, DOI 10.1016/j.eswa.2011.10.014
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hinchey M, 2012, COMPUTER, V45, P22, DOI 10.1109/MC.2012.332
   Juristo N, 2010, BASICS SOFTWARE ENG
   Kang K., 1990, TECHNICAL REPORT
   Kaviani N., 2008, 4 INT WORKSH SEM WEB
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kleinberger T, 2007, LECT NOTES COMPUT SC, V4555, P103
   Lee S.-B., 2007, 5 ACIS INT C SOFTW E, P727, DOI 10.1109/SERA.2007.41
   McGuinness D. L., 2004, OWL WEB ONTOLOGY LAN
   Noorian M., 2011, P 17 INT C DISTR MUL, P158
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Rincon L., 2014, ELECTRON NOTES THEOR, V302, p111 
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Tenorio T., 2014, P 9 INT C SOFTW ENG, P545
   Wang H. H., 2007, J WEB SEMANTICS SCI, V5
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zaid L. A., 2009, P 2009 ACM S APPL CO, P1252, DOI 10.1145/1529282.1529563
NR 31
TC 0
Z9 0
PU PERGAMON-ELSEVIER SCIENCE LTD
PI OXFORD
PA THE BOULEVARD, LANGFORD LANE, KIDLINGTON, OXFORD OX5 1GB, ENGLAND
SN 0957-4174
EI 1873-6793
J9 EXPERT SYST APPL
JI Expert Syst. Appl.
PD JUL 1
PY 2015
VL 42
IS 11
BP 4950
EP 4964
DI 10.1016/j.eswa.2015.02.020
PG 15
WC Computer Science, Artificial Intelligence; Engineering, Electrical &
   Electronic; Operations Research & Management Science
SC Computer Science; Engineering; Operations Research & Management Science
GA CF6MV
UT WOS:000352671700008
ER

PT J
AU Midtgaard, J
   Dimovski, AS
   Brabrand, C
   Wasowski, A
AF Midtgaard, Jan
   Dimovski, Aleksandar S.
   Brabrand, Claus
   Wasowski, Andrzej
TI Systematic derivation of correct variability-aware program analyses
SO SCIENCE OF COMPUTER PROGRAMMING
LA English
DT Article
DE Software Product Lines; Software variability; Verification; Static
   analysis; Abstract interpretation
ID SOFTWARE PRODUCT LINES
AB A recent line of work lifts particular verification and analysis methods to Software Product Lines (SPL). In an effort to generalize such case-by-case approaches, we develop a systematic methodology for lifting single-program analyses to SPLs using abstract interpretation. Abstract interpretation is a classical framework for deriving static analyses in a compositional, step-by-step manner. We show how to take an analysis expressed as an abstract interpretation and lift each of the abstract interpretation steps to a family of programs (SPL). This includes schemes for lifting domain types, and combinators for lifting analyses and Galois connections. We prove that for analyses developed using our method, the soundness of lifting follows by construction. The resulting variational abstract interpretation is a conceptual framework for understanding, deriving, and validating static analyses for SPLs. Then we show how to derive the corresponding variational dataflow equations for an example static analysis, a constant propagation analysis. We also describe how to approximate variability by applying variability-aware abstractions to SPL analysis. Finally, we discuss how to efficiently implement our method and present some evaluation results. (C) 2015 Elsevier B.V. All rights reserved.
C1 [Midtgaard, Jan] Tech Univ Denmark, DTU Compute, DK-2800 Lyngby, Denmark.
   [Dimovski, Aleksandar S.; Brabrand, Claus; Wasowski, Andrzej] IT Univ Copenhagen, DK-2300 Copenhagen S, Denmark.
RP Brabrand, C (reprint author), IT Univ Copenhagen, DK-2300 Copenhagen S, Denmark.
EM brabrand@itu.dk
FU Danish Council for Independent Research under the Sapere Aude scheme,
   project VARIETE [0602-02327B]
FX Supported by The Danish Council for Independent Research (grant no.
   0602-02327B) under the Sapere Aude scheme, project VARIETE.
CR [Anonymous], COLT PROJ OP SOURC L
   Apel S, 2010, AUTOMAT SOFTW ENG, V17, P251, DOI 10.1007/s10515-010-0066-8
   Apel S., 2011, ASE 11
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355
   Brabrand C., 2013, T ASPECT ORIENTED SO, V10, P73
   Chen S., 2014, P 19 ACM SIGPLAN INT, P39
   Choi W, 2011, ACM SIGPLAN NOTICES, V46, P81, DOI 10.1145/1925844.1926397
   Classen A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P321, DOI 10.1145/1985793.1985838
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Cousot P., 1999, Automated Software Engineering, V6, DOI 10.1023/A:1008649901864
   Cousot P., 2000, P 27 ACM POPL, P12, DOI 10.1145/325694.325699
   Cousot P., 1999, NATO ASI SERIES F
   Cousot P., 1997, POPL 97, P316, DOI 10.1145/263699.263744
   Cousot P., 1979, P 6 ACM S PRINC PROG, P269, DOI DOI 10.1145/567752.567778
   Cousot P., 1992, J LOG PROGRAM, V13, P103
   Czarnecki K., 2006, GPCE 06, P211
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K., 2012, VAMOS, P173
   Erwig M., 2011, ACM T SOFTW ENG METH, V21, P1
   Garrido A, 2005, PROC IEEE INT CONF S, P379
   Garrido A., 2003, AUTOMAT SOFTW ENG, P323
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   Guilbaud D., 2001, WAPATV 01 ICSE 01 TO
   Kang K. C., 1990, FEATURE ORIENTED DOM
   Kastner C., 2012, FOSD 2012, P1
   Kastner C., 2010, THESIS U MAGDEBURG G
   Kastner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kastner C, 2011, ACM SIGPLAN NOTICES, V46, P805, DOI 10.1145/2076021.2048128
   Kastner C., 2008, ASE, P258
   Medeiros F., 2013, GENERATIVE PROGRAMMI, P75
   Midtgaard J, 2008, LECT NOTES COMPUT SC, V5079, P347
   Midtgaard J., 2014, 13 INT C MOD MODULAR, P181
   Midtgaard J., 2014, TR2014170 IT U COP
   Midtgaard J., 2011, LNCS, V7460, P352
   Nielson F., 1999, PRINCIPLES PROGRAM A
   Post H., 2008, ASE 08, P347
   Reps T.W., 1995, P ACM S PRINC PROGR, P49, DOI 10.1145/199448.199462
   Sagiv M., 2007, CLASS NOTES PROGRAM
   Sergey I., 2012, LNCS, V7342, P132
   Tartler R., 2011, OSR, V45, P10
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Thaker S., 2007, GPCE, P95
   Thales F., 2012, PROP COMM VAR LANG C
   Thum T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Vallee-Rai R., 1999, P 1999 C CTR ADV STU, P13
   Winskel G., 1993, FDN COMPUTING SERIES
NR 48
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0167-6423
EI 1872-7964
J9 SCI COMPUT PROGRAM
JI Sci. Comput. Program.
PD JUL 1
PY 2015
VL 105
BP 145
EP 170
DI 10.1016/j.scico.2015.04.005
PG 26
WC Computer Science, Software Engineering
SC Computer Science
GA CK4MT
UT WOS:000356198600008
ER

PT J
AU Bakar, NH
   Kasirun, ZM
   Salleh, N
AF Bakar, Noor Hasrina
   Kasirun, Zarinah M.
   Salleh, Norsaremah
TI Feature extraction approaches from natural language requirements for
   reuse in software product lines: A systematic literature review
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Review
DE Feature extractions; Requirements reuse; Software product lines; Natural
   language requirements; Systematic literature review
ID SOURCE-CODE
AB Requirements for implemented system can be extracted and reused for a production of a new similar system. Extraction of common and variable features from requirements leverages the benefits of the software product lines engineering (SPLE). Although various approaches have been proposed in feature extractions from natural language (NL) requirements, no related literature review has been published to date for this topic. This paper provides a systematic literature review (SLR) of the state-of-the-art approaches in feature extractions from NL requirements for reuse in SPLE. We have included 13 studies in our synthesis of evidence and the results showed that hybrid natural language processing approaches were found to be in common for overall feature extraction process. A mixture of automated and semi-automated feature clustering approaches from data mining and information retrieval were also used to group common features, with only some approaches coming with support tools. However, most of the support tools proposed in the selected studies were not made available publicly and thus making it hard for practitioners' adoption. As for the evaluation, this SLR reveals that not all studies employed software metrics as ways to validate experiments and case studies. Finally, the quality assessment conducted confirms that practitioners' guidelines were absent in the selected studies. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Bakar, Noor Hasrina; Kasirun, Zarinah M.] Univ Malaya, Fac Comp Sci & Informat Technol, Dept Software Engn, Kuala Lumpur 50603, Malaysia.
   [Bakar, Noor Hasrina] Int Islamic Univ Malaysia, Ctr Fdn Studies, Dept ICT, Petaling Jaya Selangor 46350, Malaysia.
   [Salleh, Norsaremah] Int Islamic Univ Malaysia, Kulliyyah Informat & Commun Technol, Dept Comp Sci, Kuala Lumpur 53100, Malaysia.
RP Bakar, NH (reprint author), Univ Malaya, Fac Comp Sci & Informat Technol, Dept Software Engn, Kuala Lumpur 50603, Malaysia.
EM noor.hasrina@gmail.com; zarinahmk@um.edu.my; norsaremah@iium.edu.my
FU Ministry of Higher Education Malaysia [FP050/2013A]; International
   Islamic University Malaysia; University of Malaya
FX This research is funded by the Ministry of Higher Education Malaysia
   with Research Grant# FP050/2013A, with Assoc. Prof. Dr. Zarinah Kasirun
   from the Department of Software Engineering, FSKTM of the University of
   Malaya as the principal investigator. The first author's study is
   sponsored by the International Islamic University Malaysia. The authors
   would like to thank the reviewers and associate editors for the
   insightful comments and suggestions made to this paper. We would also
   like to thank the staff at the International Islamic University Malaysia
   and the University of Malaya for the support given in completing this
   systematic literature review.
CR Abraham BZ, 2007, LECT NOTES ARTIF INT, V4496, P82
   Acher M., 2012, P 6 INT WORKSH VAR M, P45
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67
   Bagheri E, 2012, AUTOMAT SOFTW ENG, V19, P335, DOI 10.1007/s10515-011-0099-7
   Bagheri E., 2013, REQUIR ENG, V19, P187
   Bakar N.H., 2014, INT J SOFTW ENG TECH, V1
   Barreto F., 2013, J U COMPUT SCI, V19, P254
   Basili V. R., 1994, ENCY SOFTWARE ENG
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benavides D., 2009, AUTOMATED ANAL FEATU
   Bonin E, 2010, 7 INT C LANG RES EV, P3222
   Boutkova E, 2011, INT REQUIR ENG CONF, P313, DOI 10.1109/RE.2011.6051627
   Casamayor A, 2012, KNOWL-BASED SYST, V30, P78, DOI 10.1016/j.knosys.2011.12.009
   Chen K, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P31
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Clements P, 2002, SOFTWARE PRODUCT LIN
   Cui X., 2005, P 2005 IEEE SWARM IN, P185
   Czarnecki K., 2004, SOFTW PROD LIN C
   Davril J.-M., 2013, P 2013 9 JOINT M FDN, P290, DOI DOI 10.1145/2491411.2491455
   Denger C., 2003, P IEEE INT C SOFTW S, P1
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dumitru H., 2011, INT C SOFTW ENG, P10
   Dyba T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Eriksson M, 2006, COMMUN ACM, V49, P49, DOI 10.1145/1183236.1183265
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Falessi D., 2010, ESEM
   Faulk S.R., 2001, P 5 IEEE INT S REQ E, P48
   Ferrari A., 2013, P 17 INT SOFTW PROD, P116
   Finkelstein A., 1988, Software Engineering Journal, V3
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Guzman E., 2014, REQ ENG C 2014, P153
   Hariri H., 2013, IEEE T SOFTWARE ENG, V39, P1736
   Hoenkamp E, 2011, LECT NOTES COMPUT SC, V6931, P40, DOI 10.1007/978-3-642-23318-0_6
   Huang A., 2008, NZ COMP SCI RES STUD
   Hubaux A., 2013, ACM COMPUT SURV, V45, P1
   IEEE Computer Society, 1990, IEEE STAND GLOSS SOF
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kang K. C., 1990, FEATURE ORIENTED DOM
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Kitchenham B., 2007, EBSE200701
   Krueger C, 2002, IEEE SOFTWARE, V19, P29, DOI 10.1109/MS.2002.1020284
   Krueger C.W., 1992, ACM COMPUT SURV, V24, P131, DOI 10.1145/130844.130856
   Krueger C.W., 2001, INT WKSHP PROD FAM E, P282
   Kumaki K., 2012, MAPLE 2012 SPLC 12, V2, P115
   Lam W., 1997, INT C REQ ENG, P2
   Lam W., 1997, Requirements Engineering, V2, DOI 10.1007/BF02813029
   Leedy P.D, 2010, PRACTICAL RES PLANNI, Vninth, P10
   Lisboa LB, 2010, INFORM SOFTWARE TECH, V52, P1, DOI 10.1016/j.infsof.2009.05.001
   MAIDEN NA, 1992, COMMUN ACM, V35, P55, DOI 10.1145/129852.129857
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Massonet P., 1997, Proceedings of the Third IEEE International Symposium on Requirements Engineering (Cat. No.97TB100086), DOI 10.1109/ISRE.1997.566836
   Metzger A., 2014, FOSE, P70
   Meyer M.H., 1997, POWER PRODUCT PLATFO
   Monzon A, 2008, INT REQUIR ENG CONF, P223, DOI 10.1109/RE.2008.19
   Moros B, 2013, INFORM SOFTWARE TECH, V55, P941, DOI 10.1016/j.infsof.2012.12.003
   Mu YH, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION AND MULTIMEDIA TECHNOLOGY, PROCEEDINGS, P194, DOI 10.1109/ICIMT.2009.47
   NEIGHBORS JM, 1984, IEEE T SOFTWARE ENG, V10, P564
   Nicolas J, 2009, INFORM SOFTWARE TECH, V51, P1291, DOI 10.1016/j.infsof.2009.04.001
   Niu N, 2008, INT REQUIR ENG CONF, P155, DOI 10.1109/RE.2008.49
   Niu N, 2014, IEEE SYST J, V8, P850, DOI 10.1109/JSYST.2013.2249892
   Northrop L.M., 2015, FRAMEWORK SOFTWARE P
   Paredes C., 1995, SIGSOFT Software Engineering Notes
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Renault S, 2009, INT CONF RES CHAL, P81
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Robinson WN, 2004, IEEE SOFTWARE, V21, P60, DOI 10.1109/MS.2004.1331304
   Salleh N, 2011, IEEE T SOFTWARE ENG, V37, P509, DOI 10.1109/TSE.2010.59
   Von Knethen A., 2002, REQ ENG 2002 P IEEE, P273, DOI DOI 10.1109/ICRE.2002.1048538
   Weston N., 2009, ACM INT C P SERIES, V446, P211
   Wohlin C, 2013, INFORM SOFTWARE TECH, V55, P919, DOI 10.1016/j.infsof.2013.02.002
   Yu Y., 2013, P C LAS EL OPT, P1
NR 73
TC 0
Z9 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2015
VL 106
BP 132
EP 149
DI 10.1016/j.jss.2015.05.006
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA CM1KF
UT WOS:000357439100009
ER

PT J
AU Neves, L
   Borba, P
   Alves, V
   Turnes, L
   Teixeira, L
   Sena, D
   Kulesza, U
AF Neves, L.
   Borba, P.
   Alves, V.
   Turnes, L.
   Teixeira, L.
   Sena, D.
   Kulesza, U.
TI Safe evolution templates for software product lines
SO JOURNAL OF SYSTEMS AND SOFTWARE
LA English
DT Article
DE Software product lines; Refinement; Evolution
ID FEATURE MODELS; CODE
AB Software product lines enable generating related software products from reusable assets. Adopting a product line strategy can bring significant quality and productivity improvements. However, evolving a product line can be risky, since it might impact many products. When introducing new features or improving its design, it is important to make sure that the behavior of existing products is not affected. To ensure that, one usually has to analyze different types of artifacts, an activity that can lead to errors. To address this issue, in this work we discover and analyze concrete evolution scenarios from five different product lines. We discover a total of 13 safe evolution templates, which are generic transformations that developers can apply when evolving compositional and annotative product lines, with the goal of preserving the behavior of existing products. We also evaluate the templates by analyzing the evolution history of these product lines. In this evaluation, we observe that the templates can address the modifications that developers performed in the analyzed scenarios, which corroborates the expressiveness of our template set. We also observe that the templates could also have helped to avoid the errors that we identified during our analysis. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Neves, L.; Borba, P.; Teixeira, L.] Univ Fed Pernambuco, Informat Ctr, BR-50740560 Recife, PE, Brazil.
   [Alves, V.; Turnes, L.] Univ Brasilia, Dept Comp Sci, BR-70910900 Brasilia, DF, Brazil.
   [Sena, D.; Kulesza, U.] Univ Fed Rio Grande do Norte, Dept Informat & Appl Math, BR-59072970 Natal, RN, Brazil.
RP Teixeira, L (reprint author), Univ Fed Pernambuco, Informat Ctr, Av Jornalista Anibal Fernandes S-N, BR-50740560 Recife, PE, Brazil.
EM lmn3@cin.ufpe.br; phmb@cin.ufpe.br; valves@unb.br; lmt@cin.ufpe.br;
   demostenes.sena@ifrn.edu.br; uira@dimap.ufrn.br
FU National Institute of Science and Technology for Software Engineering
   (INES); CNPq; CAPES; FACEPE
FX We thank colleagues of the Software Productivity Group,<SUP>5</SUP>
   especially Rohit Gheyi, Fernando Castor, Raphael Oliveira, Andre Lanna,
   and Idarlan Machado for important feedback and fruitful discussions
   about this work. For partial financial support, we would like to thank
   the National Institute of Science and Technology for Software
   Engineering (INES) and the Brazilian research agencies CNPq, CAPES and
   FACEPE.
CR Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P354
   Alves V., 2006, GPCE 2006, P201
   Alves V, 2007, LECT NOTES COMPUT SC, V4640, P117
   Anastasopoules M., 2001, SSR, P109
   Basili V. R., 1994, ENCY SOFTWARE ENG
   Borba P, 2004, SCI COMPUT PROGRAM, V52, P53, DOI 10.1016/j.scico.2004.03.003
   Borba P., 2009, GITSE SUMM SCH
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   Clements P, 2001, SOFTWARE PRODUCT LIN
   Czarnecki K., 2006, GPCE 06, P211
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K., 2012, VAMOS, P173
   Dintzner N., 2013, VAMOS, P22
   Ferreira F, 2014, J UNIVERS COMPUT SCI, V20, P587
   Fowler M., 1999, REFACTORING IMPROVIN
   Gheyi R, 2008, J UNIVERS COMPUT SCI, V14, P3573
   Heider W., 2012, SPLC 12 P 16 INT SOF, V1, P196
   Kaestner C., 2009, SPLC, P181
   Kaestner C., 2007, SPLC, P223
   Kang K., 1990, CMUSEI90TR21
   Kastner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311
   Kiczales G, 2001, COMMUN ACM, V44, P59, DOI 10.1145/383845.383858
   Kolb R, 2005, PROC IEEE INT CONF S, P369
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Liu J., 2006, ICSE 06, P112
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nagappan M., 2013, ESEC FSE, P466
   Neves L, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P33
   Passos L., 2013, SPLC, P91
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Roberts D. B., 1999, THESIS U ILLINOIS
   Rubin J, 2012, LECT NOTES COMPUT SC, V7212, P285, DOI 10.1007/978-3-642-28872-2_20
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Schulze S., 2013, FOSD GPCE, P33
   Schulze S., 2013, AOSD, P73
   Schulze S., 2012, VAMOS, P73
   Seidl C., 2012, SPLC, P76
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Teixeira L., 2014, THESIS FEDERAL U PER
   Teixeira L, 2013, J SYST SOFTWARE, V86, P1038, DOI 10.1016/j.jss.2012.11.006
   Thaker S., 2007, GPCE, P95
   Thum T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Trujillo S., 2006, GPCE 06, P191, DOI DOI 10.1145/1173706.1173736
   van der Linden F., 2007, SOFTWARE PRODUCT LIN
   Weiss DM, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P129
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
NR 47
TC 0
Z9 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 0164-1212
EI 1873-1228
J9 J SYST SOFTWARE
JI J. Syst. Softw.
PD AUG
PY 2015
VL 106
BP 42
EP 58
DI 10.1016/j.jss.2015.04.024
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods
SC Computer Science
GA CM1KF
UT WOS:000357439100004
ER

PT J
AU Nadi, S
   Berger, T
   Kastner, C
   Czarnecki, K
AF Nadi, Sarah
   Berger, Thorsten
   Kaestner, Christian
   Czarnecki, Krzysztof
TI Where Do Configuration Constraints Stem From? An Extraction Approach and
   an Empirical Study
SO IEEE TRANSACTIONS ON SOFTWARE ENGINEERING
LA English
DT Article
DE Variability models; reverse-engineering; qualitative studies; static
   analyses; configuration constraints
ID SOFTWARE PRODUCT LINES; VARIABILITY; MODELS; DOMAIN; SYSTEM; LINUX
AB Highly configurable systems allow users to tailor software to specific needs. Valid combinations of configuration options are often restricted by intricate constraints. Describing options and constraints in a variability model allows reasoning about the supported configurations. To automate creating and verifying such models, we need to identify the origin of such constraints. We propose a static analysis approach, based on two rules, to extract configuration constraints from code. We apply it on four highly configurable systems to evaluate the accuracy of our approach and to determine which constraints are recoverable from the code. We find that our approach is highly accurate (93% and 77% respectively) and that we can recover 28% of existing constraints. We complement our approach with a qualitative study to identify constraint sources, triangulating results from our automatic extraction, manual inspections, and interviews with 27 developers. We find that, apart from low-level implementation dependencies, configuration constraints enforce correct runtime behavior, improve users' configuration experience, and prevent corner cases. While the majority of constraints is extractable from code, our results indicate that creating a complete model requires further substantial domain knowledge and testing. Our results aim at supporting researchers and practitioners working on variability model engineering, evolution, and verification techniques.
C1 [Nadi, Sarah] Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Hessen, Germany.
   [Berger, Thorsten; Czarnecki, Krzysztof] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON N2L 3G1, Canada.
   [Kaestner, Christian] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
RP Nadi, S (reprint author), Tech Univ Darmstadt, Dept Comp Sci, Darmstadt, Hessen, Germany.
EM nadi@st.informatik.tu-darmstadt.de; tberger@gsd.uwaterloo.ca;
   kczarnec@gsd.uwaterloo.ca; kaestner@cs.cmu.edu
FU NSERC [CGS-D2-425005]; ARTEMIS JU [295397 VARIES]; Ontario Research Fund
   (ORF) Project on Software Certification; NSF [CCF-1318808]
FX The authors would like to thank all the developers who participated in
   our study. This work has been partly supported by NSERC CGS-D2-425005,
   ARTEMIS JU grant no. 295397 VARIES, Ontario Research Fund (ORF) Project
   on Software Certification, and NSF grant CCF-1318808. Sarah Nadi is the
   corresponding author.
CR Acher M., 2012, P 6 INT WORKSH VAR M, P45
   Angerer F., 2014, P INT SOFTW PROD LIN, P52
   Aversano L., 2002, Proceedings Second IEEE International Workshop on Source Code Analysis and Manipulation, DOI 10.1109/SCAM.2002.1134108
   Baxter I. D., 2001, Proceedings Eighth Working Conference on Reverse Engineering, DOI 10.1109/WCRE.2001.957833
   Bayer J, 1999, LECT NOTES COMPUT SC, V1687, P446
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T., 2010, FORMAL SEMANTICS CDL
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Berger T., 2014, P INT C MOD DRIV ENG, V8767, P302
   Berger T., 2010, P IEEE ACM INT C AUT, P73, DOI 10.1145/1858996.1859010
   Berger T., 2010, FEATURE TO CODE MAPP
   Berger T., 2013, P VAMOS
   Bergey J., 2000, CMUSEI2000TN008
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355
   Brabrand C., 2012, P INT C ASP OR SOFTW, P13
   Corbin J, 2008, BASICS QUALITATIVE R
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K., 2006, P INT C GEN PROGR CO, P211, DOI 10.1145/1173706.1173738
   Davril J.-M., 2013, P 2013 9 JOINT M FDN, P290, DOI DOI 10.1145/2491411.2491455
   Devos N, 2012, PROC INT CONF SOFTW, P1123, DOI 10.1109/ICSE.2012.6227107
   Dhungana D, 2011, AUTOMAT SOFTW ENG, V18, P77, DOI 10.1007/s10515-010-0076-6
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Ganesan D., 2009, P INT SOFTW PROD LIN, P161
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Hinman P. G., 2005, FUNDAMENTAL MATH LOG
   Hubaux A., 2012, P 6 INT WORKSH VAR M, P149
   Hunsen C., 2015, EMPIRICAL SOFTW ENG
   Jepsen H. P., 2009, P INT SOFTW PROD LIN, P101
   Kang K., 1990, CMUSEI90TR21
   Kastner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kastner C, 2011, ACM SIGPLAN NOTICES, V46, P805, DOI 10.1145/2076021.2048128
   Kastner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Le D., 2013, SAFE SECURE SOFTWARE, V7925, P1
   Liebig J, 2010, ICSE 10 P 32 INT C S, V1, P105, DOI [10.1145/1806799.1806819, DOI 10.1145/1806799.1806819]
   Liebig J., 2013, P EUR SOFTW ENG C AC, P81
   Lillack M., 2014, P INT C AUT SOFTW EN, P445
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Metzger A, 2007, INT REQUIR ENG CONF, P243, DOI 10.1109/RE.2007.61
   Nadi S, 2014, J SOFTW-EVOL PROC, V26, P730, DOI 10.1002/smr.1595
   Nadi S., 2014, P 36 INT C SOFTW ENG, P140
   Nadi S, 2012, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2012.21
   Nguyen H. V., 2014, P INT C SOFTW ENG, P907
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Padioleau Y, 2009, LECT NOTES COMPUT SC, V5501, P109, DOI 10.1007/978-3-642-00722-4_9
   Passos L., 2011, P 15 INT SOTW PROD L
   Passos L., 2013, P 17 INT SOFTW PROD, P91
   Pearse T. T., 1997, Proceedings International Conference on Software Maintenance (Cat. No.97CB36119), DOI 10.1109/ICSM.1997.624254
   Rabkin A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P131, DOI 10.1145/1985793.1985812
   Rabkin A., 2011, P 26 IEEE ACM INT C, P193
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI 10.1145/1806799.1806864
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   She S., 2010, P 4 INT WORKSH VAR M, P45
   She S., 2010, FORMAL SEMANTICS KCO
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Simon D., 2002, P INT SOFTW PROD LIN, P272
   Sincero J., 2007, P INT WORKSH OP SOUR, P22
   Sincero J., 2010, P INT C GEN PROGR CO, P33, DOI DOI 10.1145/1868294.1868300
   Stoermer C., 2001, Proceedings Working IEEE/IFIP Conference on Software Architecture, DOI 10.1109/WICSA.2001.948405
   Su Y.-Y., 2007, SIGOPS OPER SYST REV, V41, P237
   Tamrawi A, 2012, PROC INT CONF SOFTW, P650, DOI 10.1109/ICSE.2012.6227152
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Thaker S., 2007, P INT C GEN PROGR CO, P95, DOI DOI 10.1145/1289971.1289989
   Thum T., 2012, FIN0042012 U MAGD SC
   Thum T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thum T., 2014, ACM COMPUT SURV, V47, P1
   Veer B., 2001, ECOS COMPONENT WRITE
   von Rhein A., 2015, P INT C SOFTW ENG
   Wang H. J., 2004, OSDI, V4, P245
   White J, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P225
   Xiong YF, 2012, PROC INT CONF SOFTW, P58
   Xu T., 2013, P 24 ACM S OP SYST P, P244
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312
   Zhang S., 2014, P INT C SOFTW ENG, P152
   Zhou S., 2015, P INT WORKSH REL ENG
NR 75
TC 0
Z9 0
PU IEEE COMPUTER SOC
PI LOS ALAMITOS
PA 10662 LOS VAQUEROS CIRCLE, PO BOX 3014, LOS ALAMITOS, CA 90720-1314 USA
SN 0098-5589
EI 1939-3520
J9 IEEE T SOFTWARE ENG
JI IEEE Trans. Softw. Eng.
PD AUG
PY 2015
VL 41
IS 8
BP 820
EP 841
DI 10.1109/TSE.2015.2415793
PG 22
WC Computer Science, Software Engineering; Engineering, Electrical &
   Electronic
SC Computer Science; Engineering
GA CP0KI
UT WOS:000359563800006
ER

PT J
AU Costa, GCB
   Braga, R
   David, JMN
   Campos, F
AF Costa, Gabriella Castro B.
   Braga, Regina
   David, Jose Maria N.
   Campos, Fernanda
TI A Scientific Software Product Line for the Bioinformatics domain
SO JOURNAL OF BIOMEDICAL INFORMATICS
LA English
DT Article
DE Scientific workflow; Sequence alignment; Software Product Line;
   Ontology; Feature model
ID ONTOLOGY; DESIGN
AB Context: Most specialized users (scientists) that use bioinformatics applications do not have suitable training on software development. Software Product Line (SPL) employs the concept of reuse considering that it is defined as a set of systems that are developed from a common set of base artifacts. In some contexts, such as in bioinformatics applications, it is advantageous to develop a collection of related software products, using SPL approach. If software products are similar enough, there is the possibility of predicting their commonalities, differences and then reuse these common features to support the development of new applications in the bioinformatics area.
   Objectives: This paper presents the PL-Science approach which considers the context of SPL and ontology in order to assist scientists to define a scientific experiment, and to specify a workflow that encompasses bioinformatics applications of a given experiment. This paper also focuses on the use of ontologies to enable the use of Software Product Line in biological domains.
   Method: In the context of this paper, Scientific Software Product Line (SSPL) differs from the Software Product Line due to the fact that SSPL uses an abstract scientific workflow model. This workflow is defined according to a scientific domain and using this abstract workflow model the products (scientific applications/algorithms) are instantiated.
   Results: Through the use of ontology as a knowledge representation model, we can provide domain restrictions as well as add semantic aspects in order to facilitate the selection and organization of bioinformatics workflows in a Scientific Software Product Line. The use of ontologies enables not only the expression of formal restrictions but also the inferences on these restrictions, considering that a scientific domain needs a formal specification.
   Conclusions: This paper presents the development of the PL-Science approach, encompassing a methodology and an infrastructure, and also presents an approach evaluation. This evaluation presents case studies in bioinformatics, which were conducted in two renowned research institutions in Brazil. (C) 2015 Elsevier Inc. All rights reserved.
C1 [Costa, Gabriella Castro B.; Braga, Regina; David, Jose Maria N.; Campos, Fernanda] Univ Fed Juiz de Fora, Comp Sci Program, Juiz De Fora, Brazil.
RP Braga, R (reprint author), Univ Fed Juiz de Fora, Campus Univ S-N, Juiz de Fora, MG, Brazil.
EM gabriellabc@gmail.com; regina.braga@ufjf.edu.br; jose.david@ufjf.edu.br;
   fernanda.campos@ufjf.edu.br
FU EMBRAPA; Fiocruz; CAPES; FAPEMIG; CNPq
FX We would like to thank EMBRAPA (http://www.cnpgl.embrapa.br/), Fiocruz
   (https://portal.flocruz.br/) CAPES, FAPEMIG and CNPq for their support.
CR Acher M, 2012, SOFTWARE QUAL J, V20, P689, DOI 10.1007/s11219-011-9170-7
   Ahn H., 2011, P 2011 9 INT C SOFTW
   Asikainen T, 2007, ADV ENG INFORM, V21, P23, DOI 10.1016/j.aei.2006.11.007
   Ataide Walker A., 2012, IEEE MULTIDISCIP ENG, V7, P52
   Bagheri E., 2011, P 21 ANN INT C CTR A, P287
   Bastos B., 2014, BRAZ C SOFTW THEOR P
   Bhagat J., 2010, NUCL ACIDS RES, V38
   Bosch J., 2009, P 13 INT SOFTW PROD, P1
   Cerezo N, 2013, J GRID COMPUT, V11, P585, DOI 10.1007/s10723-013-9264-5
   Classe T., 2013, P INT C PROJ MANAGEM, V9, P215
   Clements P, 2002, SOFTWARE PRODUCT LIN
   Costa GCB, 2013, PROCEDIA COMPUT SCI, V18, P759, DOI 10.1016/j.procs.2013.05.240
   Czarnecki K., 2006, P 10 INT SOFTW PROD, V2, P41
   Darnell J., 1990, MOL CELL BIOL, Vsecond
   de Oliveira D, 2010, LECT NOTES COMPUT SC, V6378, P251, DOI 10.1007/978-3-642-17819-1_28
   Fernandes P., 2008, 20 INT C SOFTW ENG K, P758
   Filho J. a. B. F., 2012, P 16 INT SOFTW PROD, V2, P188
   Gottschalk F, 2008, INT J COOP INF SYST, V17, P177, DOI 10.1142/S0218843008001798
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Guarino N, 1998, FR ART INT, V46, P3
   Johansen M.F., 2010, INT WORKSH MOD APPR, P163
   Kaviani N., 2008, P 4 INT WORKSH SEM W, P1
   Linden F.J.D., 2007, SOFTWARE PRODUCT LIN
   Malinoski I., 2014, P CIBSE, P13
   Mattoso Marta, 2010, International Journal of Business Process Integration and Management, V5, DOI 10.1504/IJBPIM.2010.033176
   Ogasawara E, 2009, LECT NOTES COMPUT SC, V5566, P264, DOI 10.1007/978-3-642-02279-1_20
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Prosdocimi, 2002, BIOTECNOLOGIA CIENCI, V29, P12
   Remmel H., 2011, P 4 INT WORKSH SOFTW, P10
   SANGER F, 1977, P NATL ACAD SCI USA, V74, P5463, DOI 10.1073/pnas.74.12.5463
   Schnieders Puhlmann, 2007, TECHNOL BUSINESS INF, P63
   Shvaiko P, 2013, IEEE T KNOWL DATA EN, V25, P158, DOI 10.1109/TKDE.2011.253
   Silva L.M., 2012, INFORM SCI, V186, P186
   Sletholt M.T., 2011, P 4 INT WORKSH SOFTW, P1
   Wohlin C., 2012, EXPT SOFTWARE ENG
   Wolstencroft K., 2007, J BIOINFORMATIC RES, V3, P303
   Yin R.K., 2014, CASE STUDY RES DESIG, V5th
   Yu W, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P43, DOI 10.1109/SECSE.2009.5069161
NR 38
TC 0
Z9 0
PU ACADEMIC PRESS INC ELSEVIER SCIENCE
PI SAN DIEGO
PA 525 B ST, STE 1900, SAN DIEGO, CA 92101-4495 USA
SN 1532-0464
EI 1532-0480
J9 J BIOMED INFORM
JI J. Biomed. Inform.
PD AUG
PY 2015
VL 56
BP 239
EP 264
DI 10.1016/j.jbi.2015.05.014
PG 26
WC Computer Science, Interdisciplinary Applications; Medical Informatics
SC Computer Science; Medical Informatics
GA CP3BP
UT WOS:000359752100022
PM 26079262
ER

PT J
AU Neskovic, S
   Matic, R
AF Neskovic, Sinisa
   Matic, Rade
TI Context Modeling based on Feature Models Expressed as Views on
   Ontologies via Mappings
SO COMPUTER SCIENCE AND INFORMATION SYSTEMS
LA English
DT Article
DE context modeling; feature models; dynamic software product line;
   ontology; model mappings
ID SELECTION
AB This paper presents an approach for context modeling in complex self-adapted systems consisting of many independent context-aware applications. The contextual information used for adaptation of all system applications is described by an ontology treated as a global context model. A local context model tailored to the specific needs of a particular application is defined as a view over the global context in the form of a feature model. Feature models and their configurations derived from the global context state are then used by a specific dynamic software product line in order to adapt applications at runtime. The main focus of the paper is on the realization of mappings between global and local contexts. The paper describes an overall model architecture and provides corresponding metamodels as well as rules for a mapping between feature models and ontologies.
C1 [Neskovic, Sinisa] Univ Belgrade, Fac Org Sci, Belgrade 11000, Serbia.
   [Matic, Rade] Belgrade Business Sch, Informat & E Business Dept, Belgrade 11000, Serbia.
RP Neskovic, S (reprint author), Univ Belgrade, Fac Org Sci, Jove Ilica 154, Belgrade 11000, Serbia.
EM sinisa.neskovic@fon.bg.ac.rs; rade.matic@bbs.edu.rs
CR Acher M., 2009, INT WORKSH MOD RUN T
   Baldauf M, 2007, INT J AD HOC UBIQ CO, V2, P263, DOI 10.1504/IJAHUC.2007.014070
   Bellavista P, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2333112.2333119
   Bettini C, 2010, PERVASIVE MOB COMPUT, V6, P161, DOI 10.1016/j.pmcj.2009.06.002
   Bolchini C., 2007, ACM SIGMOD RECORD, V36
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Czarnecki K., 2006, P 10 INT SOFTW PROD, V2, P41
   Devedzic V., 2002, COMMUNICATIONS ACM, V45
   Fernandes P., 2010, J UNIVERS COMPUT SCI, V17, P807
   Geihs K, 2009, SOFTWARE ENG SELF AD
   Gomaa H, 2004, LECT NOTES COMPUT SC, V3014, P435
   Hallsteinsen S, 2008, COMPUTER, V41, P93, DOI 10.1109/MC.2008.123
   Hallsteinsen S, 2012, J SYST SOFTWARE, V85, P2840, DOI 10.1016/j.jss.2012.07.052
   Hall S, 2006, POLIT CULT MOD AM, P141
   Hartmann H, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P12
   Jaroucheh Z., 2010, INT C COMPL INT SOFT, P209, DOI DOI 10.1109/CISIS.2010.21
   Jaroucheh Z., 2010, WEB INT INT AG TECHN, V1, P611
   Jarrar M, 2003, LECT NOTES COMPUT SC, V2800, P185
   Kang K., 1990, CMUSEI90TR21
   Lazarevic B., 2006, INTRO DATABASES
   Lee J., 2006, P 10 INT SOFTW PROD, P131
   Lee K, 2010, LECT NOTES COMPUT SC, V6287, P32
   Morin B, 2009, COMPUTER, V42, P44, DOI 10.1109/MC.2009.327
   Northrop LM, 2002, IEEE SOFTWARE, V19, P32, DOI 10.1109/MS.2002.1020285
   Perera C., 2013, IEEE COMMUN SURV TUT, V99, P1
   Rajiv Kishore K., 2004, COMMUN ACM, V47, P69
   Raptis D., 2005, P 7 INT C HUM COMP I, P153, DOI DOI 10.1145/1085777.1085803
   Rumpe B., 2007, FUTURE SOFTWARE ENG
   Saller K., 2013, SPLC 13, P106
   Sanchez D. M., 2006, ONTOLOGIES HDB PRICI, P3
   Schmidt A., 1999, 2 WORKSH HUM COMP IN
   Strang T., 2004, 1 INT WORKSH ADV CON
   Vanathi B, 2011, COMM COM INF SC, V133, P348
   Vanathi B., 2010, P 2 INT C IT BUS INT
NR 34
TC 0
Z9 0
PU COMSIS CONSORTIUM
PI NOVI SAD
PA UNIV NOVI SAD, FAC TECH SCI, TRG DOSITEJA OBRADOVICA 6, NOVI SAD, 21000,
   SERBIA
SN 1820-0214
J9 COMPUT SCI INF SYST
JI Comput. Sci. Inf. Syst.
PD AUG
PY 2015
VL 12
IS 3
SI SI
BP 961
EP 977
DI 10.2298/CSIS141031035N
PG 17
WC Computer Science, Information Systems; Computer Science, Software
   Engineering
SC Computer Science
GA CP8IX
UT WOS:000360138100004
ER

PT J
AU Uzunov, AV
   Fernandez, EB
   Falkner, K
AF Uzunov, Anton V.
   Fernandez, Eduardo B.
   Falkner, Katrina
TI ASE: A comprehensive pattern-driven security methodology for distributed
   systems
SO COMPUTER STANDARDS & INTERFACES
LA English
DT Article
DE Secure software engineering; Security methodologies; Distributed systems
   security; Security patterns; Security solution frames
ID REQUIREMENTS ENGINEERING PROCESS; SOFTWARE PRODUCT LINES; DATA
   WAREHOUSES; COLLABORATIVE APPLICATIONS; INFORMATION-SYSTEMS; ORIENTED
   APPROACH; MODEL; DESIGN; MANAGEMENT; EXTENSION
AB Incorporating security features is one of the most important and challenging tasks in designing distributed systems. Over the last decade, researchers and practitioners have come to recognize that the incorporation of security features should proceed by means of a structured, systematic approach, combining principles from both software and security engineering. Such systematic approaches, particularly those implying some sort of process aligned with the development life-cycle, are termed security methodologies. There area number of security methodologies in the literature, of which the most flexible and, according to a recent survey, most satisfactory from an industry-adoption viewpoint are methodologies that encapsulate their security solutions in some fashion, especially via the use of security patterns. While the literature does present several mature pattern-driven security methodologies with either a general or a highly specific system applicability, there are currently no (pattern-driven) security methodologies specifically designed for general distributed systems. Going further, there are also currently no methodologies with mixed specific applicability, e.g. for both general and peer-to-peer distributed systems. In this paper we aim to fill these gaps by presenting a comprehensive pattern-driven security methodology - arrived at by applying a previously devised approach to engineering security methodologies - specifically designed for general distributed systems, which is also capable of taking into account the specifics of peer-to-peer systems as needed. Our methodology takes the principle of encapsulation several steps further, by employing patterns not only for the incorporation of security features (via security solution frames), but also for the modeling of threats, and even as part of its process. We illustrate and evaluate the presented methodology in detail via a realistic example - the development of a distributed system for file sharing and collaborative editing. In both the presentation of the methodology and example our focus is on the early life-cycle phases (analysis and design). (C) 2015 Elsevier B.V. All rights reserved.
C1 [Uzunov, Anton V.; Falkner, Katrina] Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
   [Fernandez, Eduardo B.] Florida Atlantic Univ, Dept Comp & Elect Engn & Comp Sci, Boca Raton, FL 33431 USA.
RP Uzunov, AV (reprint author), Univ Adelaide, Sch Comp Sci, Adelaide, SA 5005, Australia.
EM anton.uzunov@adelaide.edu.au; ed@cse.fau.edu;
   katrina.falkner@adelaide.edu.au
CR Alkussayer Abdulaziz, 2010, Proceedings of the 2010 3rd IEEE International Conference on Computer Science and Information Technology (ICCSIT 2010), DOI 10.1109/ICCSIT.2010.5564015
   Avgeriou P., 2006, International Journal of Computer Applications in Technology, V25, DOI 10.1504/IJCAT.2006.009062
   Bass L., 2003, SOFTWARE ARCHITECTUR
   Becker S, 2006, LECT NOTES COMPUT SC, V3938, P193
   Belapurkar A., 2009, DISTRIBUTED SYSTEMS
   Best B, 2007, PROC INT CONF SOFTW, P581
   Bidan C., 1997, Coordination Languages and Models. Second International Conference COORDINATION '97. Proceedings
   Vela B, 2013, INFORM SOFTWARE TECH, V55, P1651, DOI 10.1016/j.infsof.2013.03.003
   Blanco C, 2011, COMPUT STAND INTER, V33, P372, DOI 10.1016/j.csi.2010.12.002
   Braz FA, 2008, INT WORKSHOP DATABAS, P328
   Brooke P.J., 2008, PRACTICAL DISTRIBUTE
   Buschmann F, 1996, PATTERN ORIENTED SOF
   Buschmann F., 2007, PATTERN ORIENTED SOF, V4
   Chahar C., 2012, J GLOB PERSPECT, V21, P346
   Chang C.K., 1987, P 1987 NAT COMP C CH, P477
   Cherif A, 2014, PERVASIVE MOB COMPUT, V15, P62, DOI 10.1016/j.pmcj.2013.09.004
   Chess B., 2007, SECURE PROGRAMMING S
   Davis N, 2004, IEEE SECUR PRIV, V2, P18, DOI 10.1109/MSP.2004.21
   Delessy NA, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P416
   Dhillon D, 2011, IEEE SECUR PRIV, V9, P41, DOI 10.1109/MSP.2011.47
   Dowd M., 2007, ART SOFTWARE SECURIT, V1st
   Fernandez E. B., 2006, INTEGRATING SECURITY, V5, P107
   Fernandez EB, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P565, DOI 10.1109/ARES.2010.111
   Fernandez EB, 2009, 2009 INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY (ARES), VOLS 1 AND 2, P566, DOI 10.1109/ARES.2009.139
   Fernandez E.B., 2012, LNCS, V7672, P470
   Fernandez E.B., 2013, SECURITY PATTERNS PR, V1st
   Fernandez E.B., 2008, P 15 C PATT LANG PRO
   Fernandez E.B., 2007, SECURITY DISTRIBUTED, P53
   Fernandez EB, 2000, LECT NOTES COMPUT SC, V1920, P183
   Fernandez-Medina E, 2005, INFORM SOFTWARE TECH, V47, P463, DOI 10.1016/j.infsof.2004.09.013
   Firesmith D. G, 2003, J OBJECT TECHNOLOGY, V2, P53, DOI DOI 10.5381/JOT.2003.2.1.C6
   Gamma E, 1995, DESIGN PATTERNS ELEM, V1st
   Georg G, 2009, INFORM SOFTWARE TECH, V51, P846, DOI 10.1016/j.infsof.2008.05.004
   Georg G, 2006, LECT NOTES COMPUT SC, V4127, P282
   Gonzalez-Perez C., 2008, METAMODELLING SOFTWA
   Guerrero LA, 2001, INFORM SOFTWARE TECH, V43, P457, DOI 10.1016/S0950-5849(01)00154-9
   Gunawan LA, 2009, COMM COM INF SC, V58, P72
   Gutierrez C, 2009, INFORM SOFTWARE TECH, V51, P1712, DOI 10.1016/j.infsof.2009.05.004
   Hafiz M, 2013, SOFTWARE PRACT EXPER, V43, P769, DOI 10.1002/spe.1131
   Hafner M., 2009, SECURITY ENG SERVICE
   Hatebur D, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P195, DOI 10.1109/ARES.2008.27
   Henderson-Sellers B, 2010, J UNIVERS COMPUT SCI, V16, P424
   Heyman T, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P1156
   Hoglund G., 2004, EXPLOITING SOFTWARE
   JAIN HK, 1991, INFORM MANAGE, V20, P247, DOI 10.1016/0378-7206(91)90017-V
   Jaquith A., 2002, SECURITY APPL NOT AL
   Jurjens J., 2008, ELECT NOTES THEORETI, V220, P93, DOI 10.1016/j.entcs.2008.11.008
   Jurjens J., 2005, SECURE SYSTEMS DEV U
   Kamal A.W., 2011, SOFTWARE PRACT EXPER, V43, P807
   Kienzle D.M., SECURITY PATTERNS RE
   Kolfschoten GL, 2011, LECT NOTES COMPUT SC, V6510, P62, DOI 10.1007/978-3-642-19432-0_4
   Lalanda P., 1998, P 5 PATT LANG PROGR
   Lucio L, 2014, ADV COMPUT, V93, P103, DOI 10.1016/B978-0-12-800162-2.00003-8
   Lukosch S., 2004, P 9 EUR C PATT LANG, P333
   Marback A, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P62, DOI 10.1109/IWAST.2009.5069042
   McConnell S., 2004, CODE COMPLETE PRACTI, V2nd
   Mellado D, 2008, COMPUT STAND INTER, V30, P361, DOI 10.1016/j.csi.2008.03.004
   Mellado D, 2010, COMPUT STAND INTER, V32, P153, DOI 10.1016/j.csi.2010.01.006
   Mellado D, 2007, COMPUT STAND INTER, V29, P244, DOI 10.1016/j.csi.2006.04.002
   Mellado D, 2010, INFORM SOFTWARE TECH, V52, P1094, DOI 10.1016/j.infsof.2010.05.007
   Mellado D, 2014, COMPUT STAND INTER, V36, P711, DOI 10.1016/j.csi.2013.12.006
   Memon M., 2011, THESIS U INNSBRUCK A
   Meyer B., 2014, GOOD HYPE UGLY, V1st
   Mockel C., 2010, P 6 INT C INF ASS SE, P149
   Moral-Garcia S, 2014, COMPUT STAND INTER, V36, P748, DOI 10.1016/j.csi.2013.12.009
   Mouratidis H, 2006, INT J SOFTW ENG KNOW, V16, P471, DOI 10.1142/S0218194006002823
   Mouratidis H, 2007, INT J SOFTW ENG KNOW, V17, P285, DOI 10.1142/S0218194007003240
   Mouratidis H, 2007, INTEGRATING SECURITY AND SOFTWARE ENGINEERING: ADVANCES AND FUTURE VISIONS, P1
   Neyem A, 2012, J SYST SOFTWARE, V85, P511, DOI 10.1016/j.jss.2011.05.046
   Nord RL, 2014, LECT NOTES BUS INF P, V199, P43
   Ochoa SF, 2002, LECT NOTES COMPUT SC, V2440, P114
   OMG, 2008, SOFTW SYST PROC ENG
   Renzel K., 1997, P 4 C PATT LANG PROG
   Rodriguez A, 2011, DECIS SUPPORT SYST, V51, P446, DOI 10.1016/j.dss.2011.01.018
   Rodriguez A, 2010, INFORM SOFTWARE TECH, V52, P945, DOI 10.1016/j.infsof.2010.03.015
   Rosado DG, 2010, INFORM SOFTWARE TECH, V52, P517, DOI 10.1016/j.infsof.2010.01.002
   Rosado DG, 2011, J NETW COMPUT APPL, V34, P1168, DOI 10.1016/j.jnca.2011.01.001
   Ryoo J., 2010, P 43 HAW INT C SYST, P1
   Sanchez-Cid F, 2008, INT WORKSHOP DATABAS, P305
   Sangwan R, 2008, J SYST SOFTWARE, V81, P727, DOI 10.1016/j.jss.2007.07.031
   Sardjono W.P., 2004, P 9 EUR C PATT LANG, P583
   Schleinzer B., 2010, P 17 C PATT LANG PRO
   Schmidt D., 2000, PATTERN ORIENTED SOF, V2
   Schmidt H., 2011, SOFTWARE ENG SECURE, P32
   Schumacher M., 2006, SECURITY PATTERNS IN
   Schumacher M, 2003, LECT NOTES COMPUT SC, V2754, P1
   Serrano D, 2009, DEPEND: 2009 SECOND INTERNATIONAL CONFERENCE ON DEPENDABILITY, P111
   Silva A.R., 1996, OOPSLA 1996 WORKSH M
   Silva A.R., 1997, P 1997 INT C PAR DIS, P1024
   Smith B., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), DOI 10.1109/SERE.2012.23
   Soler E, 2008, COMPUT STAND INTER, V30, P341, DOI 10.1016/j.csi.2008.03.002
   Taylor R. N., 2010, SOFTWARE ARCHITECTUR
   Trujillo J, 2009, INFORM SOFTWARE TECH, V51, P1033, DOI 10.1016/j.infsof.2008.12.003
   Trujillo J, 2009, COMPUT STAND INTER, V31, P969, DOI 10.1016/j.csi.2008.09.040
   Uzunov AV, 2014, COMPUT STAND INTER, V36, P734, DOI 10.1016/j.csi.2013.12.008
   Uzunov A.V., 2015, ASSESSING IMPR UNPUB
   Uzunov A.V., 2015, SECURITY SOLUT UNPUB
   Uzunov AV, 2012, J UNIVERS COMPUT SCI, V18, P2920
   Uzunov AV, 2012, COMPUT SECUR, V31, P681, DOI 10.1016/j.cose.2012.04.005
   Uzunov AV, 2015, INFORM SOFTWARE TECH, V57, P217, DOI 10.1016/j.infsof.2014.09.001
   Uzunov A.V., 2015, CRYPTOGRAPHY B UNPUB
   Uzunov AV, 2013, IEEE AUS SOFT ENGR, P30, DOI 10.1109/ASWEC.2013.14
   van Wyk KR, 2005, IEEE SECUR PRIV, V3, P75, DOI 10.1109/MSP.2005.118
   Walker N., 2012, P 1 INT WORKSH CYB C, P72
   Yskout K., 2006, CW REPORTS, VCW469
NR 105
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0920-5489
EI 1872-7018
J9 COMPUT STAND INTER
JI Comput. Stand. Interfaces
PD SEP
PY 2015
VL 41
BP 112
EP 137
DI 10.1016/j.csi.2015.02.011
PG 26
WC Computer Science, Hardware & Architecture; Computer Science, Software
   Engineering
SC Computer Science
GA CK4QI
UT WOS:000356207900012
ER

PT J
AU Ajoudanian, S
   Hosseinabadi, SHM
AF Ajoudanian, Shohreh
   Hosseinabadi, Seyed-Hassan Mirian
TI Automatic promotional specialization, generalization and analysis of
   extended feature models with cardinalities in Alloy
SO JOURNAL OF LOGICAL AND ALGEBRAIC METHODS IN PROGRAMMING
LA English
DT Article
DE Extended feature model with cardinality; Specialization and
   generalization of SPLS; Multiple multi-level promotions in Alloy
AB Software product line engineering is a method of producing a set of related products that share more commonalities than variability in a cost-effective approach. Software product lines provide systematic reuse within a product family. Extended feature models with cardinalities are widely used for managing variability and commonality in the software product line domains. In this paper, we use promotion technique in Alloy to formalize constraint based extended feature models with cardinalities and their specialization and generalization. This technique has a significant influence on applying analysis operations on feature models. To show the benefits of the promotion technique, we calculate the reuse ratio of a feature in a large scale software product line. In the presented method, in addition to feature and group cardinalities, we consider different combinations of cardinalities with each other as well as feature cloning. (C) 2014 Elsevier Inc. All rights reserved.
C1 [Ajoudanian, Shohreh] Islamic Azad Univ, Sci & Res Branch, Dept Comp Engn, Tehran, Iran.
   [Hosseinabadi, Seyed-Hassan Mirian] Sharif Univ Technol, Dept Comp Sci, Tehran, Iran.
RP Ajoudanian, S (reprint author), Islamic Azad Univ Najafabad, Dept Comp Engn, Off 317,Floor 3, Najafabad, Isfahan, Iran.
EM shajoudanian@pco.iaun.ac.ir; hmirian@sharif.edu
CR Abo Zaid H., 2011, FEATURE ASSEMBLY FRA
   Ajoudanian Sh., 2013, TECHNICAL REPORT
   Altintas N.I., 2008, LNCS, V5030
   Alves V., 2006, GPCE 06 ACM
   Beck K., 1997, SMALLTALK BEST PRACT
   Benavides D., 2007, P 1 INT WORKSH VAR M, P129
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benavides D., 2006, P MAN VAR SOFTW PROD, P39
   Benavides D., 2007, THESIS U SEVILLE SPA
   Bontemps Y., 2004, P SPLC 2004 WORKSH S
   Brown W.J., 1998, ANTIPATTERNS
   Chen L., P SPLC 09, P81
   Classen A., 2010, SCI COMPUT PROGRAM, V76, P1130
   Clements P., 2005, CMUSEI2005TR003
   Coplien James, 1995, PATTERN LANGUAGES PR
   Czarnecki K., 2000, GENERATIVE PROGRAMMI
   Czarnecki K., 2005, SOFTW PROCESS IMPROV
   Czarnecki K., 2005, Software Process Improvement and Practice, V10, DOI 10.1002/spip.225
   Fowler M., 1997, ANAL PATTERNS
   Gamma E., 1995, DESIGN PATTERNS
   Gheyi R., 2006, P ACM SIGSOFT
   Harel D, 2004, COMPUTER, V37, P64, DOI 10.1109/MC.2004.172
   Harel D., 2000, TECHNICAL REPORT
   Heradio-Gil R, 2011, IET SOFTW, V5, P496, DOI 10.1049/iet-sen.2010.0022
   Hubaux A., 2010, 3 INT C SOFTW LANG E
   Hubaux A., 2010, 3 INT C SOFTW LANG E, P53
   Jackson D., 2006, SOFTWARE ABSTRACTION
   Jackson D., 2002, MICROMODEL SOFTWARE
   Janota M., 2007, P 11 INT C SOFTW PRO, P13
   Kang K.C., 2005, CMUSEI90TR21
   Kastner C., 2007, P INT SOFTW PROD LIN, P223
   Kim C.H.P., 2005, LNCS, V3748, P331
   Mendonc A., 2009, THESIS U WATERLOO
   Mendonca M, 2008, GPCE'08: PROCEEDINGS OF THE ACM SIGPLAN SEVENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P13
   Mirian-Hosseinabadi S.H., 2002, 1 INT EUROASIAN C IN, P9
   Pohl K., 2005, SOFTWARE PRODUCT LIN
   Rosenmuller M., 2008, P EDBT WORKSH SOFTW, P1, DOI 10.1145/1385486.1385488
   Sang T, 2005, LECT NOTES COMPUT SC, V3569, P226
   Schobbens P.-Y., P RE 06, P139
   Schobbens Y., 2005, TECHNICAL REPORT
   Segura S, 2008, LECT NOTES COMPUT SC, V5235, P489, DOI 10.1007/978-3-540-88643-3_15
   Stepney S., 2003, YCS2003349
   Stepney S., 2003, TECHNICAL REPORT
   Thum T., 2009, INT C SOFTW ENG
   Whited J., 2009, SPLC 09 P 13 INT SOF
   Woodcock J., 1996, INT SERIES COMPUTER
NR 46
TC 0
Z9 0
PU ELSEVIER SCIENCE INC
PI NEW YORK
PA 360 PARK AVE SOUTH, NEW YORK, NY 10010-1710 USA
SN 2352-2208
J9 J LOG ALGEBR METHODS
JI J. Log. Algebr. Methods Program
PD SEP
PY 2015
VL 84
IS 5
BP 640
EP 667
DI 10.1016/j.jlamp.2014.11.005
PG 28
WC Computer Science, Theory & Methods; Logic
SC Computer Science; Science & Technology - Other Topics
GA CO2GP
UT WOS:000358974500004
ER

PT J
AU Yang, D
   Jiao, JX
   Ji, YJ
   Du, G
   Helo, P
   Valente, A
AF Yang, Dong
   Jiao, Jianxin (Roger)
   Ji, Yangjian
   Du, Gang
   Helo, Petri
   Valente, Anna
TI Joint optimization for coordinated configuration of product families and
   supply chains by a leader-follower Stackelberg game
SO EUROPEAN JOURNAL OF OPERATIONAL RESEARCH
LA English
DT Article
DE Product family; Supply chain; Module configuration; Stackelberg game;
   Bi-level optimization
ID MASS CUSTOMIZATION; THEORETIC APPROACH; PROGRAMMING PROBLEM; GENETIC
   ALGORITHM; PLATFORM PRODUCTS; DESIGN; ARCHITECTURE; SELECTION;
   DECISIONS; MODEL
AB Product family design by module configuration is conducive to accommodating product variety while maintaining mass production efficiency. Effective fulfillment of product families necessitates joint decision making of product family configuration (PFC) and downstream supply chain configuration (SCC), due to nowadays manufacturers' moving towards assembly-to-order production throughout a distributed supply chain network. Existing decision models for joint optimization of product family and supply chain configuration are originated from an "all-in-one" approach that assumes both PFC and SCC decisions can be integrated into one optimization problem by aggregating two different types of objectives into a single objective function. Such an assumption neglects the complex tradeoffs underlying two different decision making problems and fails to reveal the inherent coupling of PFC and SCC.
   This paper formulates joint configuration of a product family and its supply chain as a leader-follower Stackelberg game that is enacted through a bi-level hierarchical optimization mechanism to model the coordination between two self-interested decision makers for PFC and SCC. The PFC decisions are modeled as an upper-level optimization problem (called leader) for optimal selection of modules, module instances, and product variants. The SCC decisions are modeled as a lower-level optimization problem (called follower), which responds to decisions of the upper level in order to determine an optimal supply chain configuration and inventory policies. A nonlinear, mixed integer programming model is formulated for the bi-level joint decision in the leader-follower game. To solve the nonlinear optimization model, a bi-level, nested genetic algorithm with constraint reasoning is developed and implemented. A case study of a power transformer product family and supply chain configuration is reported to demonstrate the feasibility and potential of the proposed leader-follower game-theoretic method. (C) 2015 Elsevier B.V. and Association of European Operational Research Societies (EURO) within the International Federation of Operational Research Societies (IFORS). All rights reserved.
C1 [Yang, Dong; Jiao, Jianxin (Roger)] Georgia Inst Technol, George W Woodruff Sch Mech Engn, Atlanta, GA 30332 USA.
   [Yang, Dong] Donghua Univ, Sch Management, Shanghai 200051, Peoples R China.
   [Ji, Yangjian] Zhejiang Univ, Dept Mech Engn, Ind Engn Ctr, Hangzhou 310027, Zhejiang, Peoples R China.
   [Du, Gang] Tianjin Univ, Coll Management & Econ, Tianjin 300072, Peoples R China.
   [Helo, Petri] Univ Vaasa, Logist Syst Res Grp, FI-65101 Vaasa, Finland.
   [Valente, Anna] Inst Syst & Technol Sustainable Prod, CH-6928 Manno, Switzerland.
RP Yang, D (reprint author), Georgia Inst Technol, George W Woodruff Sch Mech Engn, Atlanta, GA 30332 USA.
EM yangdong1019@gmail.com
FU National Natural Science Foundation of China [71371045]
FX We are grateful to anonymous reviewers for their thorough reviews and
   valuable comments. This research is partially supported by National
   Natural Science Foundation of China under Grants No. 71371045.
CR Aust G, 2012, EUR J OPER RES, V223, P473, DOI 10.1016/j.ejor.2012.06.042
   BARD JF, 1982, COMPUT OPER RES, V9, P77, DOI 10.1016/0305-0548(82)90007-7
   CANDLER W, 1982, COMPUT OPER RES, V9, P59, DOI 10.1016/0305-0548(82)90006-5
   Cao Y, 2012, CONCURRENT ENG-RES A, V20, P335, DOI 10.1177/1063293X12468456
   Chen J, 2012, OMEGA-INT J MANAGE S, V40, P571, DOI 10.1016/j.omega.2011.11.005
   Chiu M.-C., 2011, J MECH DESIGN, V133, P1
   Christiansen S, 2001, STRUCT MULTIDISCIP O, V21, P361
   Daskin M., 2005, LOGISTICS SYSTEMS DE, V1, P39
   Du XH, 2001, CONCURRENT ENG-RES A, V9, P309, DOI 10.1177/106329302023735
   ElMaraghy HA, 2009, INT J COMPUT INTEG M, V22, P483, DOI 10.1080/09511920802389553
   Esmaeili M, 2009, EUR J OPER RES, V195, P442, DOI 10.1016/j.ejor.2008.02.026
   Fixson SK, 2005, J OPER MANAG, V23, P345, DOI 10.1016/j.jom.2004.08.006
   Fujita K, 2013, J INTELL MANUF, V24, P991, DOI 10.1007/s10845-012-0641-x
   Gibbons R., 1992, GAME THEORY APPL EC
   Graves SC, 2005, MANAGE SCI, V51, P1165, DOI 10.1287/mnsc.1050.0367
   Gupta S, 1999, PROD OPER MANAG, V8, P163
   HANSEN P, 1992, SIAM J SCI STAT COMP, V13, P1194, DOI 10.1137/0913069
   Huang GQ, 2007, IEEE T ENG MANAGE, V54, P156, DOI 10.1109/TEM.2006.889074
   Huang GQ, 2005, J OPER MANAG, V23, P267, DOI 10.1016/j.jom.2004.10.014
   Huang Y, 2011, TRANSPORT RES E-LOG, V47, P115, DOI 10.1016/j.tre.2010.09.011
   Ji YJ, 2013, J CLEAN PROD, V41, P187, DOI 10.1016/j.jclepro.2012.09.022
   Jiao J., 2013, CIRP ANN-MANUF TECHN, V62, P155
   Jiao JX, 2005, IIE TRANS, V37, P801, DOI 10.1080/07408170590917011
   Jiao JX, 2009, ENG APPL ARTIF INTEL, V22, P992, DOI 10.1016/j.engappai.2009.02.002
   Jiao JX, 1999, J INTELL MANUF, V10, P3, DOI 10.1023/A:1008926428533
   Jiao JX, 2007, J INTELL MANUF, V18, P233, DOI 10.1007/s10845-007-0019-7
   Khalaf RE, 2011, INT J PROD RES, V49, P5637, DOI 10.1080/00207543.2010.519737
   Khalaf REH, 2010, J INTELL MANUF, V21, P703, DOI 10.1007/s10845-009-0247-0
   Kreng VB, 2004, COMPUT IND ENG, V46, P443, DOI 10.1016/j.cie.2004.01.007
   Kristianto Y, 2012, EUR J OPER RES, V216, P346, DOI 10.1016/j.ejor.2011.07.051
   Kumar S, 2013, INT J PROD RES, V51, P2399, DOI 10.1080/00207543.2012.737941
   Lamothe J, 2006, EUR J OPER RES, V169, P1030, DOI 10.1016/j.ejor.2005.02.007
   Luo XG, 2011, INT J PROD RES, V49, P4195, DOI 10.1080/00207543.2010.544337
   Melo MT, 2009, EUR J OPER RES, V196, P401, DOI 10.1016/j.ejor.2008.05.007
   MEYER MH, 1993, SLOAN MANAGE REV, V34, P29
   Nepal B, 2012, EUR J OPER RES, V216, P312, DOI 10.1016/j.ejor.2011.07.041
   Novak S, 2001, MANAGE SCI, V47, P189, DOI 10.1287/mnsc.47.1.189.10662
   Oivares-Benitez E., 2008, J INTELL MANUF, V19, P599
   Park B.J, 2001, THESIS GEORGIA I TEC
   Salvador F, 2004, PROD PLAN CONTROL, V15, P381, DOI [10.1080/0953728042000238818, 10.1080/095372804200238818]
   Shahzad M. K., 2013, J INTELL MANUF, V24, P1005
   Siddique Z., 1998, ASME DES ENG TECHN C
   Simchi-Levi D., 1999, DESIGNING MANAGING S
   Simpson T.W., 2005, PRODUCT PLATFORM PRO
   Simpson TW, 2004, AI EDAM, V18, P3, DOI 10.1017/S0890060404040028
   Thevenot H. J., 2005, PRODUCT PLATFORM PRO, P107
   Truong TH, 2005, INT J PROD RES, V43, P2217, DOI 10.1080/00207540500031998
   Tsang E, 1993, FDN CONSTRAINT SATIS
   van Hoesel S, 2008, EUR J OPER RES, V189, P1393, DOI 10.1016/j.ejor.2006.08.064
   Viswanathan S, 2001, EUR J OPER RES, V129, P277, DOI 10.1016/S0377-2217(00)00225-3
   Von Stackelberg H, 1952, THEORY MARKET EC
   Waller M, 1999, J BUSINESS LOGISTICS, V20, P183
   Wang QA, 2004, NAV RES LOG, V51, P316, DOI 10.1002/nav.10117
   Xiao TJ, 2014, EUR J OPER RES, V233, P114, DOI 10.1016/j.ejor.2013.08.038
   Zacharias NA, 2008, J INTELL MANUF, V19, P131, DOI 10.1007/s10845-007-0069-x
NR 55
TC 0
Z9 0
PU ELSEVIER SCIENCE BV
PI AMSTERDAM
PA PO BOX 211, 1000 AE AMSTERDAM, NETHERLANDS
SN 0377-2217
EI 1872-6860
J9 EUR J OPER RES
JI Eur. J. Oper. Res.
PD OCT 1
PY 2015
VL 246
IS 1
BP 263
EP 280
DI 10.1016/j.ejor.2015.04.022
PG 18
WC Management; Operations Research & Management Science
SC Business & Economics; Operations Research & Management Science
GA CL1ZG
UT WOS:000356742800022
ER
